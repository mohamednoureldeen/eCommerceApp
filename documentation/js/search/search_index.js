var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AllordersComponent.html",[0,0.397,1,1.111]],["body/components/AllordersComponent.html",[0,0.529,1,1.629,2,1.25,3,0.121,4,0.107,5,0.924,6,0.888,7,0.924,8,0.094,9,2.651,10,0.888,11,2.355,12,2.088,13,6.503,14,1.354,15,2.895,16,1.354,17,4.485,18,1.41,19,4.485,20,0.135,21,0.447,22,2.13,23,2.314,24,4.162,25,3.854,26,3.885,27,0.943,28,4.598,29,5.309,30,2.596,31,1.413,32,3.061,33,1.116,34,0.016,35,1.765,36,3.061,37,3.061,38,1.695,39,1.629,40,3.193,41,3.061,42,0.218,43,2.09,44,3.061,45,3.885,46,3.061,47,0.288,48,3.061,49,1.107,50,1.045,51,0.522,52,2.651,53,1.089,54,3.061,55,1.298,56,0.121,57,0.545,58,2.651,59,3.061,60,3.061,61,3.061,62,1.596,63,0.457,64,2.651,65,3.061,66,2.651,67,2.651,68,2.651,69,2.651,70,3.501,71,3.061,72,3.061,73,2.381,74,3.061,75,1.298,76,1.58,77,2.179,78,1.298,79,5.063,80,3.187,81,5.846,82,4.485,83,5.846,84,4.485,85,4.485,86,3.489,87,3.489,88,4.485,89,3.885,90,1.503,91,4.485,92,4.485,93,5.846,94,2.957,95,4.485,96,4.485,97,4.485,98,1.665,99,4.485,100,4.485,101,0.924,102,1.354,103,1.301,104,0.924,105,1.765,106,0.924,107,0.157,108,0.924,109,0.853,110,0.924,111,0.853,112,0.924,113,1.354,114,0.853,115,0.924,116,0.853,117,0.924,118,0.853,119,0.924,120,0.924,121,0.853,122,0.924,123,0.853,124,0.924,125,0.853,126,0.924,127,0.853,128,0.924,129,0.853,130,0.924,131,0.853,132,0.924,133,0.853,134,0.924,135,0.853,136,0.924,137,0.853,138,0.924,139,0.853,140,0.924,141,0.853,142,0.924,143,0.853,144,0.924,145,0.853,146,0.924,147,0.853,148,0.888,149,0.924,150,0.853,151,0.853,152,0.888,153,0.924,154,0.009,155,0.009]],["title/components/AppComponent.html",[0,0.397,109,1.111]],["body/components/AppComponent.html",[0,0.634,1,1.194,2,1.581,3,0.169,4,0.15,5,1.294,6,1.243,7,1.294,8,0.131,10,1.243,11,2.432,12,2.156,14,1.713,16,1.713,18,1.784,20,0.189,27,1.193,30,3.007,31,1.193,33,0.901,34,0.016,35,1.294,49,1.132,51,0.731,53,1.526,56,0.169,57,0.763,101,1.294,102,1.713,103,1.646,104,1.294,105,2.044,106,1.294,107,0.199,108,1.294,109,1.886,110,1.294,111,1.194,112,1.294,113,1.713,114,1.194,115,1.294,116,1.194,117,1.294,118,1.194,119,1.294,120,1.294,121,1.194,122,1.294,123,1.194,124,1.294,125,1.194,126,1.294,127,1.194,128,1.294,129,1.194,130,1.294,131,1.194,132,1.294,133,1.194,134,1.294,135,1.194,136,1.294,137,1.194,138,1.294,139,1.194,140,1.294,141,1.194,142,1.294,143,1.194,144,1.294,145,1.194,146,1.294,147,1.194,148,1.243,149,1.294,150,1.194,151,1.194,152,1.243,153,1.294,154,0.011,155,0.011,156,3.713,157,2.406,158,4.948,159,6.361,160,5.675,161,5.675,162,2.362,163,4.287,164,4.287,165,1.592,166,3.334]],["title/components/AuthLayoutComponent.html",[0,0.397,111,1.111]],["body/components/AuthLayoutComponent.html",[0,0.637,1,1.207,2,1.592,3,0.171,4,0.152,5,1.308,6,1.256,7,1.308,8,0.133,10,1.256,11,2.434,12,2.158,14,1.725,16,1.725,18,1.796,34,0.016,49,1.21,51,0.738,53,1.542,56,0.171,57,0.771,101,1.308,102,1.725,103,1.657,104,1.308,105,2.052,106,1.308,107,0.2,108,1.308,109,1.207,110,1.308,111,1.894,112,2.234,113,1.725,114,1.207,115,1.308,116,1.207,117,1.308,118,1.207,119,1.308,120,1.308,121,1.207,122,1.308,123,1.207,124,1.308,125,1.207,126,1.308,127,1.207,128,1.308,129,1.207,130,1.308,131,1.894,132,1.308,133,1.207,134,1.308,135,1.207,136,1.308,137,1.207,138,1.308,139,1.894,140,1.308,141,1.207,142,1.308,143,1.207,144,1.308,145,1.207,146,1.308,147,1.207,148,1.256,149,1.308,150,1.207,151,1.207,152,1.256,153,1.308,154,0.011,155,0.011,158,4.974,167,3.752,168,3.752,169,3.37,170,4.949,171,4.949,172,4.949,173,3.752,174,3.752]],["title/injectables/AuthService.html",[175,1.111,176,2.305]],["body/injectables/AuthService.html",[3,0.112,4,0.1,8,0.087,20,0.125,21,0.424,22,1.668,23,1.812,27,0.895,31,1.477,33,1.518,34,0.016,35,1.705,38,1.234,39,1.186,42,0.319,49,1.128,50,1.452,51,0.486,53,1.014,56,0.112,57,0.507,62,2.456,107,0.222,154,0.008,155,0.008,157,1.208,162,1.058,175,1.186,176,2.46,177,1.328,178,2.469,179,3.719,180,5.092,181,4.891,182,5.647,183,4.256,184,4.256,185,4.256,186,4.256,187,4.256,188,1.648,189,3.271,190,2.851,191,1.696,192,1.696,193,2.851,194,4.256,195,3.686,196,3.686,197,4.93,198,4.256,199,5.109,200,3.625,201,2.851,202,4.256,203,4.313,204,4.256,205,4.41,206,4.256,207,5.543,208,2.851,209,7.026,210,4.021,211,3.947,212,1.979,213,3.963,214,5.002,215,4.256,216,2.851,217,4.891,218,4.256,219,2.851,220,3.476,221,6.338,222,5.489,223,4.256,224,2.851,225,2.394,226,4.256,227,2.851,228,4.021,229,3.686,230,2.196,231,2.62,232,2.851,233,3.723,234,2.851,235,1.471,236,1.328,237,1.471,238,1.648,239,2.851,240,2.469,241,1.266,242,1.266,243,2.217,244,1.755,245,2.851,246,1.755,247,2.851,248,2.851,249,2.96,250,2.244,251,2.851,252,2.851,253,1.396,254,2.217,255,4.256,256,2.851,257,2.851,258,2.851,259,2.469,260,2.851,261,2.851,262,2.851,263,2.851]],["title/components/BlankLayoutComponent.html",[0,0.397,114,1.111]],["body/components/BlankLayoutComponent.html",[0,0.637,1,1.207,2,1.592,3,0.171,4,0.152,5,1.308,6,1.256,7,1.308,8,0.133,10,1.256,11,2.434,12,2.158,14,1.725,16,1.725,18,1.796,34,0.016,49,1.21,51,0.738,53,1.542,56,0.171,57,0.771,101,1.308,102,1.725,103,1.657,104,1.308,105,2.052,106,1.308,107,0.2,108,1.308,109,1.207,110,1.308,111,1.207,112,1.308,113,1.725,114,1.894,115,2.234,116,1.207,117,1.308,118,1.207,119,1.308,120,1.308,121,1.207,122,1.308,123,1.207,124,1.308,125,1.207,126,1.308,127,1.207,128,1.308,129,1.207,130,1.308,131,1.894,132,1.308,133,1.207,134,1.308,135,1.207,136,1.308,137,1.207,138,1.308,139,1.894,140,1.308,141,1.207,142,1.308,143,1.207,144,1.308,145,1.207,146,1.308,147,1.207,148,1.256,149,1.308,150,1.207,151,1.207,152,1.256,153,1.308,154,0.011,155,0.011,158,4.974,169,3.37,170,4.949,171,4.949,172,4.949,173,3.752,174,3.752,264,3.752,265,3.752]],["title/interfaces/Brand.html",[266,0.332,267,0.873]],["body/interfaces/Brand.html",[3,0.174,4,0.155,8,0.135,20,0.194,21,0.577,34,0.016,42,0.333,43,2.059,47,0.77,56,0.298,62,2.297,63,0.863,90,1.136,107,0.26,154,0.011,155,0.011,225,1.873,266,0.628,267,1.5,268,1.136,269,2.28,270,2.061,271,1.829,272,1.953,273,3.008,274,2.409,275,1.739,276,2.409,277,2.409,278,2.409,279,2.409,280,2.454,281,2.409,282,2.409,283,2.835,284,1.183,285,1.183,286,1.508,287,1.79,288,2.28,289,2.697,290,1.572,291,1.728,292,1.532,293,1.64,294,1.049,295,1.281,296,1.562,297,1.281]],["title/interfaces/Brand-1.html",[266,0.279,267,0.733,298,1.728]],["body/interfaces/Brand-1.html",[3,0.187,4,0.166,8,0.145,20,0.209,21,0.604,34,0.016,42,0.342,47,0.769,56,0.293,63,0.707,90,1.22,98,1.761,107,0.26,154,0.012,155,0.012,266,0.619,267,1.541,268,1.22,270,2.069,271,1.87,272,1.991,275,1.696,284,1.27,285,1.27,286,1.619,290,1.688,291,1.788,292,1.585,294,1.126,295,1.375,296,1.605,297,1.375,299,2.742,300,2.323,301,2.92,302,2.21,303,2.92,304,3.304]],["title/interfaces/Brand-2.html",[266,0.279,267,0.733,305,2.061]],["body/interfaces/Brand-2.html",[3,0.193,4,0.171,8,0.15,20,0.215,21,0.616,34,0.015,42,0.346,47,0.77,56,0.281,63,0.73,90,1.259,98,1.817,107,0.263,154,0.012,155,0.012,212,1.603,266,0.593,267,1.559,268,1.259,270,2.038,271,1.888,272,2.038,275,1.674,284,1.31,285,1.31,292,1.609,293,1.817,294,1.162,295,1.419,296,1.623,297,1.419,306,3.227,307,2.281,308,2.669,309,2.669]],["title/interfaces/Brand-3.html",[266,0.279,267,0.733,310,2.208]],["body/interfaces/Brand-3.html",[3,0.192,4,0.171,8,0.149,20,0.214,21,0.615,34,0.015,42,0.345,47,0.77,56,0.28,63,0.727,90,1.254,98,1.81,107,0.262,154,0.012,155,0.012,212,1.597,266,0.592,267,1.557,268,1.254,270,2.036,271,1.886,272,2.036,275,1.708,284,1.305,285,1.305,286,1.664,292,1.606,293,1.81,294,1.157,295,1.414,296,1.621,297,1.414,308,2.658,309,2.658,311,3.214,312,2.818]],["title/components/BrandsComponent.html",[0,0.397,116,1.111]],["body/components/BrandsComponent.html",[0,0.575,1,0.99,2,1.391,3,0.14,4,0.124,5,1.073,6,1.03,7,1.073,8,0.109,10,1.03,11,2.392,12,2.12,14,1.073,16,1.507,18,1.57,20,0.254,21,0.497,22,1.89,23,2.054,27,1.05,30,2.78,31,1.386,33,1.05,34,0.016,35,1.742,38,1.448,39,1.391,42,0.173,49,1.114,50,1.213,51,0.606,56,0.14,57,0.632,75,1.506,78,1.506,80,2.722,101,1.073,102,1.507,103,1.448,104,1.073,105,1.89,106,1.073,107,0.175,108,1.073,109,0.99,110,1.073,111,0.99,112,1.073,113,1.507,114,0.99,115,1.073,116,1.744,117,1.073,118,0.99,119,1.073,120,1.073,121,0.99,122,1.073,123,0.99,124,1.073,125,0.99,126,1.073,127,0.99,128,1.073,129,0.99,130,1.073,131,0.99,132,1.073,133,0.99,134,1.073,135,0.99,136,1.073,137,0.99,138,1.073,139,0.99,140,1.073,141,0.99,142,1.073,143,0.99,144,1.073,145,0.99,146,1.073,147,0.99,148,1.03,149,1.073,150,0.99,151,0.99,152,1.03,153,1.073,154,0.01,155,0.01,162,2.143,236,1.656,267,1.093,313,3.077,314,6.312,315,4.993,316,4.993,317,4.457,318,4.999,319,4.993,320,3.553,321,3.553,322,3.292,323,3.147,324,4.993,325,3.553,326,3.553,327,2.53,328,3.553,329,3.553,330,3.553,331,3.553,332,3.553,333,3.553,334,3.553,335,3.553,336,1.937,337,3.553,338,3.553,339,2.187,340,2.764,341,4.993,342,3.883,343,3.883,344,3.883,345,3.883,346,3.883,347,3.883,348,3.883,349,3.883,350,3.883,351,3.883,352,3.883,353,3.883,354,3.883,355,3.883,356,3.883,357,3.883,358,3.883,359,4.993]],["title/injectables/BrandsService.html",[175,1.111,317,2.839]],["body/injectables/BrandsService.html",[3,0.183,4,0.163,8,0.142,20,0.204,27,1.257,31,1.39,33,1.468,34,0.016,42,0.29,47,0.622,49,1.242,51,0.791,56,0.183,57,0.826,63,1.103,107,0.209,154,0.012,155,0.012,157,1.969,162,1.724,175,1.666,177,2.164,188,2.684,189,3.817,191,1.6,192,1.6,203,3.26,211,3.086,212,1.521,213,3.974,235,2.397,236,2.164,237,2.397,238,2.684,241,2.062,242,2.062,249,2.275,250,2.22,267,1.62,314,6.047,317,4.257,318,6.047,360,4.022,361,5.979,362,4.644,363,4.644,364,4.971,365,4.604,366,3.456,367,5.979,368,4.644,369,2.929,370,4.651,371,4.644,372,4.644]],["title/components/CardForOrdersComponent.html",[0,0.397,118,1.111]],["body/components/CardForOrdersComponent.html",[0,0.525,1,0.589,2,0.941,3,0.083,4,0.074,5,0.638,6,0.613,7,0.638,8,0.065,10,0.613,11,2.243,12,1.989,14,1.019,15,2.299,16,1.019,20,0.185,21,0.336,22,2.066,23,2.245,27,0.71,30,2.138,31,1.414,33,1.18,34,0.016,35,1.953,38,1.627,39,1.563,42,0.286,47,0.621,49,1.048,50,0.721,51,0.36,53,0.752,55,0.896,56,0.083,57,0.376,63,0.629,70,2.226,75,0.896,76,1.091,78,0.896,80,2.625,94,1.393,101,0.638,102,1.019,103,0.979,104,0.638,105,1.454,106,0.638,107,0.196,108,0.638,109,0.589,110,0.638,111,0.589,112,0.638,113,1.019,114,0.589,115,0.638,116,0.589,117,0.638,118,1.341,119,1.847,120,0.638,121,0.589,122,0.638,123,0.589,124,0.638,125,0.589,126,0.638,127,0.589,128,0.638,129,0.589,130,0.638,131,0.589,132,0.638,133,0.589,134,0.638,135,0.589,136,0.638,137,0.589,138,0.638,139,0.589,140,0.638,141,0.589,142,0.638,143,0.589,144,0.638,145,0.589,146,0.638,147,0.589,148,0.613,149,0.638,150,0.589,151,1.903,152,0.613,153,0.638,154,0.007,155,0.007,165,0.785,191,1.289,192,1.289,195,1.83,196,1.83,211,1.091,214,3.428,243,1.644,246,2.964,250,0.785,253,2.065,275,1.343,280,1.431,290,0.752,291,1.502,298,1.091,302,2.745,307,1.965,336,1.152,366,1.222,369,1.035,373,2.113,374,5.915,375,4.863,376,1.83,377,2.595,378,3.376,379,4.216,380,3.376,381,2.358,382,6.119,383,2.964,384,3.651,385,2.964,386,2.626,387,3.376,388,4.815,389,3.376,390,3.376,391,2.924,392,2.113,393,2.626,394,2.113,395,3.376,396,2.113,397,2.113,398,2.113,399,3.376,400,4.216,401,2.113,402,2.113,403,3.376,404,3.651,405,4.216,406,2.113,407,2.078,408,2.113,409,2.113,410,2.226,411,2.113,412,2.113,413,2.626,414,2.113,415,2.595,416,1.301,417,1.222,418,1.644,419,2.113,420,1.83,421,2.113,422,1.83,423,2.113,424,1.83,425,3.651,426,2.78,427,3.376,428,5.264,429,2.113,430,3.376,431,2.924,432,2.226,433,2.113,434,2.113,435,3.043,436,1.83,437,2.453,438,1.644,439,2.138,440,1.83,441,1.644,442,1.505,443,1.091,444,1.505,445,2.226,446,1.505,447,1.654,448,1.505,449,1.393,450,1.393,451,3.169,452,1.83,453,2.113,454,3.651,455,2.113,456,2.113,457,4.216,458,1.393,459,1.505,460,2.113,461,2.078,462,2.113,463,1.644,464,1.83,465,3.376,466,1.644,467,3.376,468,1.83,469,2.113,470,2.113,471,3.376,472,1.83,473,2.626,474,2.113,475,2.113,476,2.113,477,2.113,478,4.194,479,2.113,480,2.113,481,2.113,482,2.113,483,2.113,484,3.376,485,2.113,486,2.113,487,2.113,488,2.113,489,2.626,490,3.376,491,2.924,492,3.376,493,2.626,494,2.626,495,2.924,496,2.113,497,2.626,498,2.113,499,1.83,500,1.83,501,2.113,502,3.376,503,2.113,504,2.113,505,2.113,506,1.83,507,2.113,508,2.404,509,2.113,510,1.505,511,2.113,512,4.216,513,2.924,514,3.376,515,2.113,516,1.83,517,2.113,518,2.113,519,3.651,520,2.113,521,2.113,522,3.376,523,2.113,524,2.113,525,2.113,526,2.113]],["title/components/CartComponent.html",[0,0.397,121,1.111]],["body/components/CartComponent.html",[0,0.484,1,0.734,2,1.117,3,0.104,4,0.092,5,0.795,6,0.764,7,0.795,8,0.123,10,0.764,11,2.313,12,2.051,14,1.21,16,1.21,18,1.26,20,0.116,21,0.399,22,2.211,23,2.402,24,1.875,27,0.843,30,2.409,31,1.419,33,1.227,34,0.016,35,1.857,38,1.573,39,1.511,40,2.854,42,0.236,47,0.51,49,1.172,50,0.899,51,0.449,53,0.937,55,1.116,56,0.104,57,0.468,63,0.598,73,3.118,75,1.699,76,2.8,77,2.854,78,2.3,80,2.185,89,3.472,90,1.031,94,1.736,101,0.795,102,1.21,103,1.162,104,0.795,105,1.638,106,0.795,107,0.19,108,0.795,109,0.734,110,0.795,111,0.734,112,0.795,113,1.21,114,0.734,115,0.795,116,0.734,117,0.795,118,0.734,119,0.795,120,0.795,121,1.511,122,0.795,123,0.734,124,0.795,125,0.734,126,0.795,127,0.734,128,0.795,129,0.734,130,0.795,131,0.734,132,0.795,133,0.734,134,0.795,135,0.734,136,0.795,137,0.734,138,0.795,139,0.734,140,0.795,141,0.734,142,0.795,143,0.734,144,0.795,145,0.734,146,0.795,147,0.734,148,0.764,149,0.795,150,0.734,151,0.734,152,0.764,153,0.795,154,0.008,155,0.008,165,0.978,191,1.073,192,1.073,203,1.436,275,0.914,290,1.727,294,0.951,300,2.859,336,2.185,339,2.467,377,2.988,381,2.657,383,3.339,407,2.467,410,2.643,416,1.621,417,1.522,436,3.472,437,3.208,439,1.78,442,1.875,443,2.8,444,1.875,445,1.736,446,1.875,447,2.377,448,1.875,449,1.736,450,1.736,451,1.963,461,2.988,489,3.118,493,3.118,494,4.22,510,2.854,527,2.281,528,2.069,529,2.988,530,4.853,531,3.775,532,4.009,533,4.009,534,4.203,535,4.009,536,4.853,537,4.853,538,4.009,539,4.009,540,2.633,541,2.633,542,2.633,543,2.633,544,2.633,545,2.633,546,2.633,547,2.633,548,2.633,549,2.633,550,2.633,551,2.281,552,1.875,553,2.854,554,2.048,555,2.633,556,2.633,557,2.633,558,2.281,559,5.425,560,2.633,561,2.633,562,3.118,563,2.281,564,2.281,565,2.281,566,2.854,567,2.281,568,3.472,569,2.281,570,2.281,571,2.281,572,2.281,573,2.281,574,2.281,575,2.281,576,2.633,577,2.281,578,2.281,579,2.633,580,2.633,581,2.633,582,2.048,583,4.009,584,4.853,585,2.633,586,2.633,587,2.048,588,2.281,589,2.633,590,2.633,591,2.633,592,2.633,593,5.425,594,5.425,595,4.699,596,4.009,597,4.009,598,4.009,599,4.009,600,5.425,601,3.118,602,3.472]],["title/interfaces/CartItem.html",[266,0.332,283,1.953]],["body/interfaces/CartItem.html",[3,0.174,4,0.155,8,0.135,20,0.194,21,0.577,34,0.016,42,0.333,43,2.059,47,0.766,56,0.298,62,2.297,63,0.863,90,1.762,107,0.24,154,0.011,155,0.011,225,1.873,266,0.628,267,1.414,268,1.136,269,2.28,270,2.061,271,1.489,272,1.728,273,3.008,274,2.409,275,1.789,276,2.409,277,2.409,278,2.409,279,2.409,280,2.454,281,2.409,282,2.409,283,3.162,284,1.183,285,1.183,286,1.508,287,1.79,288,2.28,289,2.697,290,2.438,291,2.019,292,1.532,293,1.64,294,1.049,295,1.281,296,1.562,297,1.281]],["title/guards/CartResolver.html",[603,3.102,604,3.102]],["body/guards/CartResolver.html",[0,0.516,3,0.204,4,0.181,8,0.159,20,0.228,27,1.346,31,1.346,33,1.346,34,0.016,42,0.251,49,1.328,51,0.882,53,1.841,56,0.204,57,0.92,87,4.024,107,0.181,154,0.012,155,0.012,157,2.193,162,1.921,175,1.783,191,1.385,192,1.385,203,3.49,213,3.587,236,2.411,241,2.298,242,2.298,250,1.921,300,2.534,364,3.683,381,3.775,437,2.411,458,3.411,528,2.67,551,4.481,604,4.979,605,4.024,606,4.481,607,6.674,608,5.174,609,5.174,610,5.174,611,5.174,612,4.481,613,5.174]],["title/injectables/CartService.html",[175,1.111,381,1.953]],["body/injectables/CartService.html",[3,0.127,4,0.112,8,0.098,20,0.141,21,0.463,27,0.977,31,1.468,33,1.519,34,0.016,38,1.348,39,1.295,42,0.321,47,0.669,49,1.064,51,0.548,56,0.127,57,0.572,62,1.144,63,1.113,94,4.184,98,2.221,107,0.209,154,0.009,155,0.009,157,1.362,162,1.193,175,1.295,177,1.497,188,1.857,189,3.413,191,1.601,192,1.601,197,4.653,203,4.033,212,1.788,213,4.022,214,4.972,230,2.398,235,1.658,236,1.497,237,1.658,238,1.857,241,1.427,242,1.427,249,2.93,250,2.356,254,3.615,275,1.245,290,1.654,291,1.934,322,3.599,323,2.534,369,2.93,381,2.276,426,3.064,432,3.064,435,2.686,437,3.571,449,3.064,461,2.86,614,2.783,615,5.459,616,5.459,617,4.647,618,5.981,619,5.981,620,4.647,621,4.647,622,3.213,623,4.647,624,3.213,625,3.615,626,3.213,627,4.647,628,3.213,629,3.064,630,4.025,631,4.647,632,4.647,633,3.213,634,4.025,635,4.647,636,6.346,637,3.213,638,4.025,639,3.064,640,4.647,641,3.213,642,3.213,643,3.213,644,3.213,645,2.783,646,3.213,647,3.213,648,2.783,649,4.728,650,5.459,651,3.213,652,3.213,653,3.213,654,3.213]],["title/components/CategoriesComponent.html",[0,0.397,123,1.111]],["body/components/CategoriesComponent.html",[0,0.556,1,0.929,2,1.33,3,0.132,4,0.117,5,1.007,6,0.967,7,1.007,8,0.102,10,0.967,11,2.377,12,2.107,14,1.441,16,1.441,18,1.501,20,0.245,21,0.476,22,1.826,23,1.984,27,1.004,30,2.702,31,1.354,33,1.172,34,0.016,35,1.837,38,1.384,39,1.33,42,0.232,47,0.449,49,1.083,50,1.138,51,0.568,55,1.414,56,0.132,57,0.593,63,0.498,75,2.024,78,2.024,80,2.603,101,1.007,102,1.441,103,1.384,104,1.007,105,1.837,106,1.007,107,0.195,108,1.007,109,0.929,110,1.007,111,0.929,112,1.007,113,1.441,114,0.929,115,1.007,116,0.929,117,1.007,118,0.929,119,1.007,120,1.007,121,0.929,122,1.007,123,1.695,124,1.007,125,0.929,126,1.007,127,0.929,128,1.007,129,0.929,130,1.007,131,0.929,132,1.007,133,0.929,134,1.007,135,0.929,136,1.007,137,0.929,138,1.007,139,0.929,140,1.007,141,0.929,142,1.007,143,0.929,144,1.007,145,0.929,146,1.007,147,0.929,148,0.967,149,1.007,150,0.929,151,0.929,152,0.967,153,1.007,154,0.009,155,0.009,191,0.893,192,0.893,287,1.934,322,3.148,323,3.039,336,2.603,339,2.938,340,3.713,342,3.713,343,3.713,344,3.713,345,3.713,346,3.713,347,3.713,348,3.713,349,3.713,350,3.713,351,3.713,352,3.713,353,3.713,354,3.713,355,3.713,356,3.713,357,3.713,358,3.713,369,1.634,439,2.12,451,2.338,655,2.889,656,5.668,657,5.575,658,4.774,659,4.774,660,4.012,661,4.336,662,4.134,663,3.336,664,2.889,665,3.336,666,3.336,667,3.336,668,4.134,669,3.336,670,2.199,671,2.889,672,2.889,673,2.889,674,2.889,675,2.889,676,2.889,677,4.134,678,3.336,679,3.336,680,4.774,681,4.774,682,4.774,683,4.774,684,3.336,685,4.134,686,3.713,687,3.336]],["title/injectables/CategoriseService.html",[175,1.111,660,2.63]],["body/injectables/CategoriseService.html",[3,0.182,4,0.161,8,0.141,20,0.203,27,1.251,31,1.385,33,1.464,34,0.016,42,0.289,47,0.62,49,1.239,51,0.786,56,0.182,57,0.82,63,1.101,107,0.208,154,0.012,155,0.012,157,1.954,162,1.711,175,1.658,177,2.148,188,2.664,189,3.809,191,1.593,192,1.593,203,3.244,211,3.071,212,1.51,213,3.968,235,2.379,236,2.148,237,2.379,238,2.664,241,2.047,242,2.047,249,2.258,250,2.209,287,2.411,296,1.683,364,4.236,365,4.591,366,3.439,369,2.914,370,4.628,629,3.923,656,5.416,660,3.923,661,5.416,662,5.153,664,5.153,688,3.992,689,4.609,690,4.609,691,3.923,692,4.609,693,4.609,694,4.609]],["title/interfaces/Category.html",[266,0.332,296,0.909]],["body/interfaces/Category.html",[3,0.174,4,0.155,8,0.135,20,0.194,21,0.577,34,0.016,42,0.333,43,2.059,47,0.77,56,0.298,62,2.297,63,0.863,90,1.136,107,0.26,154,0.011,155,0.011,225,1.873,266,0.628,267,1.414,268,1.136,269,2.28,270,2.061,271,1.829,272,1.953,273,3.008,274,2.409,275,1.739,276,2.409,277,2.409,278,2.409,279,2.409,280,2.454,281,2.409,282,2.409,283,2.835,284,1.183,285,1.183,286,1.508,287,1.79,288,2.28,289,2.697,290,1.572,291,1.728,292,1.532,293,1.64,294,1.049,295,1.281,296,1.622,297,1.281]],["title/interfaces/Category-1.html",[266,0.279,296,0.763,298,1.728]],["body/interfaces/Category-1.html",[3,0.187,4,0.166,8,0.145,20,0.209,21,0.604,34,0.016,42,0.342,47,0.769,56,0.293,63,0.707,90,1.22,98,1.761,107,0.26,154,0.012,155,0.012,266,0.619,267,1.462,268,1.22,270,2.069,271,1.87,272,1.991,275,1.696,284,1.27,285,1.27,286,1.619,290,1.688,291,1.788,292,1.585,294,1.126,295,1.375,296,1.658,297,1.375,299,2.742,300,2.323,301,2.92,302,2.21,303,2.92,304,3.304]],["title/interfaces/Category-2.html",[266,0.279,296,0.763,305,2.061]],["body/interfaces/Category-2.html",[3,0.193,4,0.171,8,0.15,20,0.215,21,0.616,34,0.015,42,0.346,47,0.77,56,0.281,63,0.73,90,1.259,98,1.817,107,0.263,154,0.012,155,0.012,212,1.603,266,0.593,267,1.484,268,1.259,270,2.038,271,1.888,272,2.038,275,1.674,284,1.31,285,1.31,292,1.609,293,1.817,294,1.162,295,1.419,296,1.674,297,1.419,306,3.227,307,2.281,308,2.669,309,2.669]],["title/interfaces/Category-3.html",[266,0.279,296,0.763,310,2.208]],["body/interfaces/Category-3.html",[3,0.192,4,0.171,8,0.149,20,0.214,21,0.615,34,0.015,42,0.345,47,0.77,56,0.28,63,0.727,90,1.254,98,1.81,107,0.262,154,0.012,155,0.012,212,1.597,266,0.592,267,1.481,268,1.254,270,2.036,271,1.886,272,2.036,275,1.708,284,1.305,285,1.305,286,1.664,292,1.606,293,1.81,294,1.157,295,1.414,296,1.672,297,1.414,308,2.658,309,2.658,311,3.214,312,2.818]],["title/components/ChatComponent.html",[0,0.397,125,1.111]],["body/components/ChatComponent.html",[0,0.496,1,0.766,2,1.153,3,0.108,4,0.096,5,0.83,6,0.797,7,0.83,8,0.084,10,0.797,11,2.326,12,2.062,14,1.25,15,2.716,16,1.25,18,1.302,20,0.121,21,0.413,22,1.816,23,1.773,27,0.87,31,1.404,33,1.047,34,0.016,35,1.887,38,1.608,39,1.545,42,0.242,49,1.112,50,0.938,51,0.468,55,1.165,56,0.108,57,0.489,101,0.83,102,1.25,103,1.201,104,0.83,105,1.674,106,0.83,107,0.227,108,0.83,109,0.766,110,0.83,111,0.766,112,0.83,113,1.25,114,0.766,115,0.83,116,0.766,117,0.83,118,0.766,119,0.83,120,0.83,121,0.766,122,0.83,123,0.766,124,0.83,125,1.545,126,0.83,127,0.766,128,0.83,129,0.766,130,0.83,131,0.766,132,0.83,133,0.766,134,0.83,135,0.766,136,0.83,137,0.766,138,0.83,139,0.766,140,0.83,141,0.766,142,0.83,143,0.766,144,0.83,145,0.766,146,0.83,147,0.766,148,0.797,149,0.83,150,0.766,151,0.766,152,0.797,153,0.83,154,0.008,155,0.008,162,1.02,165,1.02,191,0.736,192,0.736,210,3.948,225,2.351,233,4.403,242,1.221,243,2.138,275,0.944,280,1.755,289,2.584,294,0.652,383,3.994,417,1.589,420,4.802,437,1.929,443,1.418,458,1.812,531,3.875,552,1.957,553,2.948,554,2.138,562,2.138,566,1.957,695,2.38,696,6.962,697,3.285,698,4.141,699,4.141,700,4.982,701,4.627,702,5.948,703,3.875,704,5.545,705,5.545,706,5.545,707,2.38,708,3.948,709,2.748,710,3.221,711,2.748,712,2.748,713,2.748,714,3.285,715,3.221,716,4.403,717,2.948,718,3.221,719,3.221,720,4.802,721,2.748,722,3.221,723,2.748,724,3.537,725,2.748,726,2.748,727,1.812,728,1.418,729,2.748,730,2.748,731,3.221,732,2.748,733,2.38,734,2.748,735,2.748,736,2.748,737,2.748,738,2.748,739,2.748,740,2.748,741,4.315,742,2.748,743,5.545,744,2.748,745,2.748,746,4.141,747,2.748,748,2.38,749,2.748,750,2.748,751,2.748,752,2.748,753,1.589,754,2.748,755,4.141,756,2.748,757,2.748,758,2.748,759,2.748,760,2.748,761,4.141,762,3.586,763,3.586,764,3.586,765,2.748,766,2.38,767,3.586,768,4.141,769,3.221,770,2.748,771,2.138,772,3.221,773,3.586,774,2.748,775,2.38,776,3.586,777,4.141,778,3.586,779,4.141,780,3.586,781,2.748,782,2.748,783,2.38,784,2.748,785,2.138,786,2.748,787,2.38]],["title/components/CheckoutComponent.html",[0,0.397,127,1.111]],["body/components/CheckoutComponent.html",[0,0.496,1,0.764,2,1.152,3,0.108,4,0.096,5,0.828,6,0.795,7,0.828,8,0.084,10,0.795,11,2.325,12,2.061,14,1.248,16,1.248,18,1.3,20,0.121,21,0.412,22,2.416,23,2.626,24,3.943,25,3.652,26,3.58,27,0.869,30,2.46,31,1.523,33,1.249,34,0.016,35,1.886,38,1.88,39,1.806,40,2.943,42,0.242,45,3.58,47,0.389,49,1.111,50,0.936,51,0.467,52,2.375,53,0.976,56,0.108,57,0.488,58,2.375,63,0.409,66,2.375,67,2.375,68,3.58,69,2.375,70,1.808,73,3.215,76,2.133,77,2.943,78,1.752,86,3.215,101,0.828,102,1.248,103,1.199,104,0.828,105,1.672,106,0.828,107,0.145,108,0.828,109,0.764,110,0.828,111,0.764,112,0.828,113,1.248,114,0.764,115,0.828,116,0.764,117,0.828,118,0.764,119,0.828,120,0.828,121,0.764,122,0.828,123,0.764,124,0.828,125,0.764,126,0.828,127,1.543,128,0.828,129,0.764,130,0.828,131,0.764,132,0.828,133,0.764,134,0.828,135,0.764,136,0.828,137,0.764,138,0.828,139,0.764,140,0.828,141,0.764,142,0.828,143,0.764,144,0.828,145,0.764,146,0.828,147,0.764,148,0.795,149,0.828,150,0.764,151,0.764,152,0.795,153,0.828,154,0.008,155,0.008,165,1.018,179,3.409,210,3.542,231,2.544,233,3.28,287,1.111,288,1.415,289,1.278,381,2.713,407,2.544,416,1.688,437,1.278,443,2.133,528,2.133,529,3.062,588,2.375,601,3.215,697,3.28,701,4.308,714,2.725,715,2.133,716,3.28,718,2.133,719,2.133,722,3.215,727,1.808,728,1.415,788,2.375,789,2.876,790,4.134,791,4.134,792,4.134,793,4.134,794,4.975,795,4.975,796,4.975,797,3.87,798,2.742,799,2.742,800,2.742,801,2.742,802,2.742,803,2.742,804,2.742,805,2.742,806,2.742,807,2.742,808,2.742,809,2.742,810,2.742,811,1.415,812,2.742,813,2.742,814,2.742,815,2.742,816,2.742,817,2.742,818,2.742,819,4.134,820,3.58,821,2.742,822,2.133,823,2.742,824,4.134,825,3.58,826,2.742,827,2.742,828,4.309,829,2.742,830,2.742,831,2.742,832,2.742,833,2.742,834,4.134,835,4.722,836,4.134,837,4.134,838,4.134,839,4.134,840,4.134,841,4.134]],["title/injectables/DarkThemeSelectorService.html",[175,1.111,842,2.839]],["body/injectables/DarkThemeSelectorService.html",[3,0.116,4,0.103,8,0.09,12,0.789,20,0.13,21,0.435,22,2.381,27,0.917,31,1.433,33,1.433,34,0.016,35,2.004,38,0.854,39,1.707,42,0.252,47,0.603,49,0.524,51,0.502,56,0.172,57,1.26,62,1.552,103,1.664,107,0.239,154,0.008,155,0.008,157,1.249,175,1.215,177,1.373,191,1.39,192,1.39,212,1.701,241,1.309,246,1.814,249,2.543,250,1.619,253,2.136,323,2.378,426,3.424,435,3.318,447,1.443,461,3.949,497,2.292,582,2.292,639,4.377,691,2.876,724,2.378,733,2.552,741,2.552,753,4.55,763,2.552,842,3.105,843,4.59,844,1.943,845,5.193,846,4.362,847,4.362,848,5.74,849,5.74,850,5.74,851,5.74,852,4.362,853,4.362,854,2.947,855,5.74,856,5.74,857,4.362,858,2.947,859,2.947,860,3.778,861,5.302,862,2.947,863,4.956,864,5.75,865,2.947,866,4.766,867,2.947,868,4.362,869,4.362,870,4.497,871,5.193,872,4.362,873,4.362,874,2.947,875,3.778,876,4.971,877,4.362,878,2.947,879,4.362,880,2.947,881,2.947,882,4.362,883,4.362,884,2.947,885,2.947,886,2.947,887,2.947,888,4.99,889,2.947,890,2.947,891,4.99,892,3.778,893,2.552,894,2.292,895,2.947,896,3.105,897,2.947,898,2.947,899,2.947,900,2.947,901,2.552,902,2.947,903,2.947,904,2.552,905,2.947,906,2.947,907,4.362,908,2.947,909,2.947,910,4.362,911,2.947,912,2.947,913,4.039,914,3.393,915,2.947,916,2.947,917,2.947,918,2.947,919,2.947,920,2.552,921,2.552,922,2.947,923,2.947,924,2.947]],["title/components/DetailsComponent.html",[0,0.397,129,1.111]],["body/components/DetailsComponent.html",[0,0.469,1,0.698,2,1.075,3,0.099,4,0.088,5,0.756,6,0.726,7,0.756,8,0.077,10,0.726,11,2.298,12,2.038,14,0.756,16,1.164,18,1.213,20,0.207,21,0.384,22,2.298,23,2.497,24,1.783,27,0.811,30,2.347,31,1.475,33,1.2,34,0.016,35,1.958,38,1.748,39,1.679,40,2.746,42,0.257,47,0.591,49,1.118,50,0.855,51,0.657,53,0.891,56,0.099,57,0.445,63,0.575,75,1.994,76,2.428,78,1.994,80,2.103,101,0.756,102,1.164,103,1.118,104,0.756,105,1.596,106,0.756,107,0.211,108,0.756,109,0.698,110,0.756,111,0.698,112,0.756,113,1.164,114,0.698,115,0.756,116,0.698,117,0.756,118,0.698,119,0.756,120,0.756,121,0.698,122,0.756,123,0.698,124,0.756,125,0.698,126,0.756,127,0.698,128,0.756,129,1.472,130,0.756,131,0.698,132,0.756,133,0.698,134,0.756,135,0.698,136,0.756,137,0.698,138,0.756,139,0.698,140,0.756,141,0.698,142,0.756,143,0.698,144,0.756,145,0.698,146,0.756,147,0.698,148,0.726,149,0.756,150,0.698,151,1.59,152,0.726,153,0.756,154,0.007,155,0.007,162,0.93,165,0.93,191,1.415,192,1.415,242,1.112,253,1.227,271,0.644,287,1.906,291,1.528,307,1.167,323,2.565,336,2.565,381,2.589,383,3.253,385,3.253,386,3,393,1.948,407,2.374,410,2.543,413,3,416,1.541,417,1.447,418,1.948,435,3.055,437,2.463,438,1.948,439,2.089,440,3.341,441,3,442,2.746,443,1.99,444,2.746,445,2.543,446,2.746,447,2.796,448,2.746,450,1.651,451,2.304,468,2.169,528,1.99,529,2.896,534,4.074,558,2.169,595,3.341,639,1.651,685,3.341,707,2.169,708,3.763,710,3,870,3.341,925,2.169,926,3.857,927,3.857,928,5.707,929,5.707,930,3.857,931,5.285,932,3.857,933,3.857,934,2.504,935,2.504,936,2.504,937,2.504,938,2.504,939,3.857,940,2.504,941,5.285,942,2.504,943,2.504,944,3.857,945,2.504,946,2.504,947,2.504,948,1.783,949,2.504,950,2.504,951,2.504,952,2.504,953,2.169,954,2.504,955,2.504,956,2.504,957,2.504,958,2.504,959,2.504,960,3.857,961,3.857,962,3.857,963,3.857,964,3.857,965,3.857,966,3.857,967,5.285,968,3.857,969,3.857,970,3.341,971,3.857,972,3.857,973,3.857,974,3.341,975,3.857,976,3.857]],["title/guards/DetailsResolver.html",[603,3.102,977,3.102]],["body/guards/DetailsResolver.html",[0,0.487,3,0.193,4,0.171,8,0.15,20,0.215,27,1.298,31,1.298,33,1.027,34,0.016,42,0.3,49,1.305,51,0.832,53,1.738,56,0.193,57,0.869,63,0.921,87,3.8,107,0.216,154,0.012,155,0.012,157,2.071,162,1.814,175,1.72,191,1.812,192,1.653,203,3.367,213,3.494,236,2.276,241,2.169,242,2.169,250,2.293,253,2.393,291,1.812,307,2.276,364,3.478,369,2.393,458,3.221,528,2.521,605,3.8,607,6.355,612,4.231,731,5.267,948,3.478,977,4.803,978,4.231,979,4.885,980,4.379,981,4.885,982,6.175,983,6.175,984,7.114,985,7.114,986,4.885,987,5.348,988,4.885,989,4.885,990,4.231,991,4.885]],["title/injectables/FlowbiteService.html",[175,1.111,992,2.839]],["body/injectables/FlowbiteService.html",[3,0.19,4,0.168,8,0.147,20,0.211,22,1.575,27,1.285,31,1.285,33,1.011,34,0.016,35,2.029,42,0.297,49,1.196,50,1.641,51,0.819,55,2.038,56,0.19,57,0.855,107,0.214,154,0.012,155,0.012,157,2.038,162,1.785,175,1.703,177,2.24,191,1.636,192,1.636,211,2.481,212,1.575,220,2.96,241,2.135,246,4.354,249,2.355,459,3.423,901,4.164,992,4.352,993,4.164,994,6.113,995,4.808,996,4.808,997,6.113,998,6.113,999,6.648,1000,4.808,1001,6.722,1002,6.113,1003,6.722,1004,4.432,1005,5.295,1006,6.722,1007,5.821,1008,5.295,1009,6.113,1010,4.164,1011,4.164,1012,4.808,1013,3.423,1014,4.808,1015,4.808,1016,4.808,1017,4.164,1018,4.808]],["title/components/FooterComponent.html",[0,0.397,131,1.111]],["body/components/FooterComponent.html",[0,0.603,1,1.081,2,1.478,3,0.153,4,0.136,5,1.171,6,1.125,7,1.171,8,0.119,10,1.125,11,2.411,12,2.146,14,1.602,16,1.602,18,1.668,34,0.015,49,0.944,51,0.661,56,0.153,57,0.69,101,1.171,102,1.602,103,1.539,104,1.171,105,1.963,106,1.171,107,0.186,108,1.171,109,1.081,110,1.171,111,1.081,112,1.171,113,1.602,114,1.081,115,1.171,116,1.081,117,1.171,118,1.081,119,1.171,120,1.171,121,1.081,122,1.171,123,1.081,124,1.171,125,1.811,126,1.171,127,1.081,128,1.171,129,1.081,130,1.171,131,1.811,132,1.171,133,1.081,134,1.171,135,1.081,136,1.171,137,1.081,138,1.171,139,1.081,140,1.171,141,1.081,142,1.171,143,1.081,144,1.171,145,1.081,146,1.171,147,1.081,148,1.125,149,1.171,150,1.081,151,1.081,152,1.125,153,1.171,154,0.01,155,0.01,426,3.498,437,2.472,508,3.778,686,4.127,762,4.595,990,4.595,1019,3.36,1020,5.306,1021,5.306,1022,5.306,1023,3.88,1024,5.306,1025,5.306,1026,5.306,1027,5.306,1028,6.501,1029,5.306,1030,5.306,1031,5.306,1032,5.306,1033,5.306,1034,5.306,1035,5.306,1036,5.306,1037,5.306,1038,5.306,1039,5.306,1040,5.306,1041,4.595,1042,5.306,1043,5.306,1044,5.306,1045,5.306,1046,5.306,1047,5.306,1048,5.306,1049,5.306,1050,5.306,1051,5.306,1052,5.306,1053,5.306,1054,3.88,1055,5.306,1056,5.306,1057,5.306,1058,5.306]],["title/components/ForgotpasswordComponent.html",[0,0.397,133,1.111]],["body/components/ForgotpasswordComponent.html",[0,0.461,1,0.68,2,1.054,3,0.096,4,0.085,5,0.737,6,0.708,7,0.737,8,0.075,10,0.708,11,2.291,12,2.031,14,1.142,16,1.142,18,1.189,20,0.107,21,0.377,22,1.954,23,2.124,27,0.795,31,1.388,33,0.973,34,0.016,35,1.398,38,1.73,39,1.662,42,0.253,49,1.004,50,0.833,51,0.416,53,0.869,56,0.096,57,0.434,75,1.963,76,1.26,77,3.297,78,1.963,101,0.737,102,1.142,103,1.097,104,0.737,105,1.574,106,0.737,107,0.132,108,0.737,109,0.68,110,0.737,111,0.68,112,0.737,113,1.142,114,0.68,115,0.737,116,0.68,117,0.737,118,0.68,119,0.737,120,0.737,121,0.68,122,0.737,123,0.68,124,0.737,125,0.68,126,0.737,127,0.68,128,0.737,129,0.68,130,0.737,131,0.68,132,0.737,133,1.453,134,0.737,135,0.68,136,0.737,137,0.68,138,0.737,139,0.68,140,0.737,141,0.68,142,0.737,143,0.68,144,0.737,145,0.68,146,0.737,147,0.68,148,0.708,149,0.737,150,0.68,151,0.68,152,0.708,153,0.737,154,0.007,155,0.007,165,0.907,176,3.014,179,1.503,220,1.503,225,2.639,228,1.738,229,2.115,230,3.688,231,2.328,275,0.557,298,3.08,305,3.473,310,3.72,377,2.85,439,2.056,443,1.952,697,3.053,714,4.659,716,4.241,717,3.713,727,1.61,728,1.26,748,3.276,789,2.676,811,1.26,825,2.115,835,5.058,1059,2.115,1060,3.783,1061,3.783,1062,3.783,1063,4.63,1064,4.63,1065,7.147,1066,4.63,1067,4.63,1068,4.63,1069,4.63,1070,4.63,1071,2.442,1072,2.442,1073,2.442,1074,2.693,1075,2.442,1076,5.571,1077,3.783,1078,2.942,1079,2.942,1080,2.942,1081,2.442,1082,2.442,1083,2.442,1084,3.783,1085,3.783,1086,3.783,1087,2.442,1088,2.442,1089,1.738,1090,2.115,1091,2.442,1092,3.783,1093,2.442,1094,2.442,1095,2.442,1096,3.783,1097,2.442,1098,2.442,1099,2.442,1100,2.442,1101,2.442,1102,2.442,1103,2.442,1104,2.115,1105,2.115,1106,2.115,1107,2.442,1108,3.783,1109,5.215,1110,5.215,1111,3.276,1112,3.783,1113,5.215,1114,3.783,1115,3.783,1116,3.783,1117,3.783,1118,3.783,1119,3.783,1120,3.783]],["title/components/HomeComponent.html",[0,0.397,135,1.111]],["body/components/HomeComponent.html",[0,0.463,1,0.685,2,1.06,3,0.097,4,0.086,5,0.742,6,0.713,7,0.742,8,0.075,10,0.713,11,2.293,12,2.033,14,1.148,15,2.536,16,1.148,18,1.196,20,0.108,21,0.379,22,1.96,23,2.13,27,0.8,30,2.324,31,1.447,33,1.1,34,0.016,35,1.709,38,1.81,39,1.738,42,0.291,47,0.532,49,1.243,50,0.839,51,0.419,55,1.042,56,0.097,57,0.437,75,1.612,78,1.612,80,2.074,101,0.742,102,1.148,103,1.103,104,0.742,105,1.58,106,0.742,107,0.163,108,0.742,109,0.685,110,0.742,111,0.685,112,0.742,113,1.148,114,0.685,115,0.742,116,0.685,117,0.742,118,1.458,119,0.742,120,0.742,121,0.685,122,0.742,123,0.685,124,0.742,125,0.685,126,0.742,127,0.685,128,0.742,129,0.685,130,0.742,131,0.685,132,0.742,133,0.685,134,0.742,135,1.458,136,0.742,137,0.685,138,0.742,139,0.685,140,0.742,141,0.685,142,0.742,143,0.685,144,0.742,145,0.685,146,0.742,147,1.458,148,1.103,149,0.742,150,0.685,151,0.685,152,0.713,153,0.742,154,0.007,155,0.007,165,1.412,191,0.658,192,0.658,298,2.921,302,2.167,305,2.863,307,1.146,310,2.508,322,3.067,323,3.086,336,2.074,339,2.341,340,2.958,375,1.751,415,1.514,432,4.457,439,1.689,445,2.508,447,3.668,451,1.863,478,2.708,528,1.963,529,2.863,656,4.403,660,3.451,661,3.618,668,3.294,670,1.621,671,2.13,672,2.13,673,2.13,674,2.13,675,2.13,676,2.13,677,2.13,724,3.902,728,1.269,789,2.688,811,1.269,948,1.751,980,3.222,1121,2.13,1122,3.294,1123,4.651,1124,3.067,1125,3.618,1126,3.803,1127,3.803,1128,4.651,1129,5.66,1130,4.028,1131,3.618,1132,3.294,1133,2.459,1134,2.459,1135,2.459,1136,3.294,1137,2.459,1138,3.294,1139,2.459,1140,2.459,1141,5.66,1142,5.234,1143,5.234,1144,5.234,1145,5.234,1146,5.234,1147,4.533,1148,5.234,1149,5.234,1150,5.234,1151,3.803,1152,5.234,1153,2.459,1154,3.803,1155,3.803,1156,3.803,1157,3.294,1158,3.803,1159,3.803,1160,3.803,1161,2.459,1162,2.459,1163,3.294,1164,2.459,1165,2.459,1166,2.13,1167,2.13,1168,4.028,1169,2.13,1170,2.13,1171,2.13,1172,2.13,1173,2.13,1174,1.751,1175,2.13,1176,2.13,1177,2.13,1178,2.13,1179,2.13,1180,2.13,1181,2.13,1182,2.459,1183,3.803,1184,3.803,1185,3.803,1186,2.13,1187,2.459,1188,2.13]],["title/interfaces/IBrand.html",[266,0.332,327,2.839]],["body/interfaces/IBrand.html",[3,0.213,4,0.189,8,0.166,20,0.238,21,0.655,34,0.015,42,0.373,47,0.766,56,0.213,107,0.258,154,0.013,155,0.013,266,0.45,268,1.389,270,1.973,271,1.896,272,1.973,284,1.973,285,1.973,327,4.679,1189,4.678]],["title/interfaces/ICart.html",[266,0.332,300,1.953]],["body/interfaces/ICart.html",[3,0.18,4,0.16,8,0.14,20,0.2,21,0.589,34,0.016,42,0.364,47,0.767,56,0.29,63,0.68,90,1.172,98,1.692,107,0.229,154,0.011,155,0.011,266,0.613,267,1.435,268,1.172,270,2.054,271,1.519,272,1.754,275,1.765,284,1.856,285,1.856,286,2.366,290,1.622,291,1.922,292,1.556,294,1.082,295,1.322,296,1.581,297,1.322,299,2.635,300,2.893,301,4.268,302,3.231,303,4.268,304,3.221]],["title/interfaces/IallOrders.html",[43,1.858,266,0.332]],["body/interfaces/IallOrders.html",[3,0.155,4,0.137,8,0.12,20,0.173,21,0.533,34,0.016,42,0.377,43,2.491,47,0.765,56,0.29,62,2.614,63,1.019,90,1.009,107,0.229,154,0.01,155,0.01,225,1.663,266,0.612,267,1.332,268,1.009,269,2.025,270,2.016,271,1.375,272,1.628,273,3.423,274,3.561,275,1.805,276,3.561,277,3.561,278,3.561,279,3.561,280,2.99,281,3.561,282,3.561,283,3.199,284,1.748,285,1.748,286,2.229,287,1.59,288,2.025,289,2.491,290,1.396,291,1.628,292,1.444,293,1.457,294,0.931,295,1.138,296,1.489,297,1.138]],["title/interfaces/Icategory.html",[266,0.332,670,2.63]],["body/interfaces/Icategory.html",[3,0.213,4,0.189,8,0.166,20,0.238,21,0.655,34,0.015,42,0.373,47,0.766,56,0.213,107,0.258,154,0.013,155,0.013,266,0.45,268,1.389,270,1.973,271,1.896,272,1.973,284,1.973,285,1.973,670,4.333,1190,4.678]],["title/interfaces/Iproduct.html",[266,0.332,307,1.858]],["body/interfaces/Iproduct.html",[3,0.163,4,0.145,8,0.127,20,0.182,21,0.553,34,0.016,42,0.384,47,0.769,56,0.263,63,0.996,90,1.717,98,2.48,107,0.219,154,0.011,155,0.011,212,2.187,266,0.556,267,1.628,268,1.065,270,1.959,271,1.426,272,1.959,275,1.791,284,1.787,285,1.787,292,1.765,293,2.48,294,1.585,295,1.937,296,1.717,297,1.937,306,2.731,307,2.584,308,3.641,309,3.641]],["title/interfaces/Iwishlist.html",[266,0.332,312,2.305]],["body/interfaces/Iwishlist.html",[3,0.161,4,0.143,8,0.125,20,0.179,21,0.547,34,0.016,42,0.385,47,0.768,56,0.262,63,0.99,90,1.707,98,2.464,107,0.217,154,0.011,155,0.011,212,2.174,266,0.553,267,1.623,268,1.049,270,1.951,271,1.412,272,1.951,275,1.807,284,1.777,285,1.777,286,2.265,292,1.759,293,2.464,294,1.576,295,1.925,296,1.712,297,1.925,308,3.619,309,3.619,311,2.69,312,3.173]],["title/components/LoginComponent.html",[0,0.397,137,1.111]],["body/components/LoginComponent.html",[0,0.482,1,0.729,2,1.111,3,0.103,4,0.092,5,0.79,6,0.759,7,0.79,8,0.08,10,0.759,11,2.311,12,2.049,14,1.204,16,1.204,18,1.254,20,0.115,21,0.397,22,2.009,23,2.183,27,0.839,31,1.341,33,0.55,34,0.016,35,0.79,38,1.779,39,1.709,42,0.263,47,0.509,49,1.091,50,0.893,51,0.446,53,0.931,56,0.103,57,0.465,75,1.109,76,1.35,78,1.109,101,0.79,102,1.204,103,1.157,104,0.79,105,1.632,106,0.79,107,0.14,108,0.79,109,0.729,110,0.79,111,0.729,112,0.79,113,1.204,114,0.729,115,0.79,116,0.729,117,0.79,118,0.729,119,0.79,120,0.79,121,0.729,122,0.79,123,0.729,124,0.79,125,0.729,126,0.79,127,0.729,128,0.79,129,0.729,130,0.79,131,0.729,132,0.79,133,0.729,134,0.79,135,0.729,136,0.79,137,1.506,138,0.79,139,0.729,140,0.79,141,0.729,142,0.79,143,0.729,144,0.79,145,0.729,146,0.79,147,0.729,148,0.759,149,0.79,150,0.729,151,0.729,152,0.759,153,0.79,154,0.008,155,0.008,165,0.971,176,3.126,179,1.61,199,3.103,225,1.691,228,2.84,230,3.166,231,2.455,235,1.35,280,1.691,377,2.976,439,1.162,443,3.394,447,1.282,451,1.282,587,2.035,697,3.187,703,4.528,714,3.565,716,3.565,717,2.84,724,2.948,727,1.725,728,1.35,769,3.103,771,2.035,772,3.103,785,2.035,789,2.794,797,3.76,811,1.35,822,2.035,835,4.928,1074,2.84,1076,4.683,1078,3.103,1079,3.103,1080,3.103,1089,1.863,1090,2.266,1104,2.266,1105,2.266,1106,2.266,1191,2.266,1192,3.989,1193,3.989,1194,3.989,1195,5.525,1196,4.187,1197,2.616,1198,2.616,1199,2.616,1200,2.616,1201,2.616,1202,2.616,1203,2.616,1204,2.266,1205,2.266,1206,2.616,1207,2.616,1208,4.187,1209,2.616,1210,3.455,1211,2.266,1212,2.616,1213,2.035,1214,2.266,1215,2.266,1216,2.266,1217,2.266,1218,2.616,1219,3.989,1220,3.989,1221,2.616,1222,3.455,1223,5.407,1224,2.266,1225,3.989,1226,3.989,1227,3.455,1228,2.616,1229,3.455,1230,3.455,1231,2.266,1232,2.266,1233,3.989,1234,3.989,1235,3.989,1236,2.616,1237,2.266,1238,2.616,1239,2.266,1240,2.266]],["title/injectables/MytranslateService.html",[175,1.111,1241,2.839]],["body/injectables/MytranslateService.html",[3,0.145,4,0.128,6,1.063,8,0.112,20,0.161,21,0.508,22,2.185,23,2.088,27,1.072,31,1.334,33,1.072,34,0.016,35,1.916,38,1.479,39,1.021,42,0.248,47,0.552,49,1.044,50,1.741,51,0.625,55,1.554,56,0.145,57,0.652,63,0.875,107,0.179,154,0.01,155,0.01,157,1.554,162,1.894,165,1.361,175,1.421,177,1.708,191,1.365,192,1.365,200,4.917,207,4.178,212,1.2,220,3.612,230,2.633,233,3.364,241,1.628,244,2.256,249,1.795,253,1.795,449,2.416,459,2.609,497,3.968,500,4.418,638,5.495,639,3.869,691,2.416,708,4.518,811,1.891,860,4.418,861,3.968,875,3.174,876,4.418,904,3.174,1004,2.416,1010,3.174,1011,3.174,1013,2.609,1147,3.174,1241,3.632,1242,3.174,1243,6.345,1244,5.102,1245,3.665,1246,5.982,1247,5.102,1248,3.665,1249,5.102,1250,7.226,1251,5.102,1252,6.654,1253,5.102,1254,5.082,1255,6.345,1256,5.102,1257,3.665,1258,4.418,1259,5.102,1260,5.102,1261,5.777,1262,5.102,1263,4.936,1264,6.345,1265,6.345,1266,5.868,1267,5.102,1268,3.665,1269,3.665,1270,3.665,1271,3.174,1272,3.665,1273,3.665,1274,3.665,1275,5.102,1276,5.868,1277,3.174,1278,3.665,1279,3.665,1280,3.665,1281,5.102,1282,5.102,1283,6.345,1284,5.102,1285,3.665,1286,3.665,1287,3.665,1288,3.665]],["title/components/NavbarComponent.html",[0,0.397,139,1.111]],["body/components/NavbarComponent.html",[0,0.416,1,0.579,2,0.928,3,0.082,4,0.073,5,0.628,6,0.603,7,0.628,8,0.064,10,0.603,11,2.249,12,1.984,14,1.006,15,2.274,16,1.006,18,1.048,20,0.091,21,0.332,22,2.369,23,2.383,27,0.701,30,2.119,31,1.55,33,1.353,34,0.016,35,2.107,38,1.907,39,1.793,42,0.305,47,0.619,49,1.116,50,0.71,51,0.354,53,0.74,55,0.881,56,0.082,57,0.37,75,0.881,101,0.628,102,1.006,103,0.966,104,0.628,105,1.44,106,0.628,107,0.195,108,0.628,109,0.579,110,0.628,111,0.579,112,0.628,113,1.006,114,0.579,115,0.628,116,0.579,117,0.628,118,0.579,119,0.628,120,0.628,121,0.579,122,0.628,123,0.579,124,0.628,125,0.579,126,0.628,127,0.579,128,0.628,129,0.579,130,0.628,131,0.579,132,0.628,133,0.579,134,0.628,135,0.579,136,0.628,137,0.579,138,0.628,139,1.329,140,0.628,141,0.579,142,0.628,143,0.579,144,0.628,145,0.579,146,0.628,147,0.579,148,0.603,149,0.628,150,0.579,151,0.579,152,0.603,153,0.628,154,0.006,155,0.006,162,0.772,165,0.772,176,2.757,181,4.132,191,1.277,192,1.277,242,0.923,250,0.772,253,1.018,280,1.413,323,1.817,377,2.567,381,2.337,391,2.886,407,2.051,415,1.28,416,1.28,439,0.923,447,1.632,449,1.371,450,1.371,473,1.617,506,1.801,508,1.48,510,2.969,566,1.48,639,1.371,708,2.373,710,2.592,724,1.817,753,3.018,789,2.411,811,1.073,835,4.415,842,4.167,863,2.373,866,2.592,873,2.969,888,4.334,896,2.969,913,1.617,953,2.886,992,3.967,1041,2.886,1074,2.373,1089,1.48,1157,1.801,1213,3.711,1241,3.396,1246,4.132,1252,1.801,1261,3.612,1263,2.592,1289,1.801,1290,3.333,1291,4.171,1292,3.333,1293,3.333,1294,5.221,1295,6.083,1296,4.171,1297,4.171,1298,4.771,1299,3.333,1300,3.333,1301,4.771,1302,4.771,1303,4.771,1304,3.333,1305,4.771,1306,3.333,1307,4.171,1308,2.079,1309,2.079,1310,4.171,1311,3.333,1312,3.333,1313,2.079,1314,3.333,1315,2.079,1316,3.333,1317,2.079,1318,2.079,1319,2.079,1320,2.079,1321,2.079,1322,2.079,1323,3.333,1324,3.333,1325,2.079,1326,2.079,1327,2.079,1328,4.171,1329,3.333,1330,2.079,1331,2.079,1332,2.079,1333,3.333,1334,2.079,1335,2.079,1336,5.221,1337,5.221,1338,4.171,1339,2.079,1340,3.333,1341,2.079,1342,2.079,1343,2.079,1344,2.079,1345,2.079,1346,2.079,1347,2.079,1348,2.079,1349,2.079,1350,2.079,1351,2.079,1352,2.079,1353,2.079,1354,2.079,1355,2.079,1356,2.079,1357,2.079,1358,2.079,1359,3.333,1360,2.079,1361,2.079,1362,2.079,1363,2.079,1364,3.244,1365,2.079,1366,5.572,1367,3.333,1368,4.171,1369,2.079,1370,3.333,1371,2.079,1372,3.333,1373,1.617,1374,2.079,1375,4.171,1376,2.079,1377,2.079,1378,2.079,1379,2.079,1380,3.333,1381,3.333,1382,2.079,1383,2.079,1384,2.079,1385,2.079,1386,2.079,1387,2.886,1388,3.333,1389,3.333,1390,3.333,1391,3.333,1392,3.333,1393,3.333,1394,3.333]],["title/components/NotfoundComponent.html",[0,0.397,141,1.111]],["body/components/NotfoundComponent.html",[0,0.652,1,1.267,2,1.644,3,0.179,4,0.159,5,1.373,6,1.319,7,1.373,8,0.139,10,1.319,11,2.443,12,2.166,14,1.373,16,1.781,18,1.855,34,0.015,49,0.809,51,0.775,56,0.179,57,0.809,101,1.373,102,1.781,103,1.711,104,1.373,105,2.092,106,1.373,107,0.207,108,1.373,109,1.267,110,1.373,111,1.267,112,1.373,113,1.781,114,1.267,115,1.373,116,1.267,117,1.373,118,1.267,119,1.373,120,1.373,121,1.267,122,1.373,123,1.267,124,1.373,125,1.267,126,1.373,127,1.267,128,1.373,129,1.267,130,1.373,131,1.267,132,1.373,133,1.267,134,1.373,135,1.267,136,1.373,137,1.267,138,1.373,139,1.267,140,1.373,141,1.93,142,1.373,143,1.267,144,1.373,145,1.267,146,1.373,147,1.267,148,1.319,149,1.373,150,1.267,151,1.267,152,1.319,153,1.373,154,0.011,155,0.011,1395,3.94,1396,6.928,1397,5.9,1398,5.9,1399,5.9]],["title/injectables/OrdersService.html",[25,2.63,175,1.111]],["body/injectables/OrdersService.html",[3,0.145,4,0.129,8,0.113,20,0.162,25,3.378,27,1.077,28,4.437,31,1.337,33,1.455,34,0.016,42,0.309,47,0.691,49,1.132,51,0.628,56,0.145,57,0.656,62,2.462,63,1.131,70,4.562,79,5.993,86,5.382,107,0.223,154,0.01,155,0.01,157,1.563,162,1.369,175,1.427,177,1.718,188,2.131,189,3.571,191,1.703,192,1.703,203,4.057,207,4.926,212,1.928,213,3.943,235,1.903,236,1.718,237,1.903,238,2.131,241,1.637,242,1.637,249,3.274,250,2.186,273,2.387,287,2.578,365,4.562,366,2.961,369,2.509,437,2.964,601,4.949,629,3.378,828,4.437,1111,5.51,1400,3.193,1401,5.123,1402,5.123,1403,3.687,1404,5.123,1405,3.687,1406,5.123,1407,6.362,1408,5.123,1409,6.362,1410,5.51,1411,5.123,1412,3.687,1413,5.123,1414,5.123,1415,5.123,1416,5.123,1417,3.687,1418,5.123,1419,5.123,1420,5.123,1421,3.687,1422,3.687,1423,3.687,1424,3.687,1425,3.687]],["title/interfaces/Product.html",[266,0.332,291,1.067]],["body/interfaces/Product.html",[3,0.164,4,0.146,8,0.127,20,0.183,21,0.554,34,0.016,42,0.366,43,1.936,47,0.768,56,0.294,62,2.229,63,1.04,90,1.069,107,0.234,154,0.011,155,0.011,225,1.762,266,0.62,267,1.63,268,1.069,269,2.145,270,2.038,271,1.429,272,1.676,273,2.918,274,2.266,275,1.774,276,2.266,277,2.266,278,2.266,279,2.266,280,2.356,281,2.266,282,2.266,283,2.723,284,1.112,285,1.112,286,1.418,287,1.684,288,2.145,289,2.59,290,1.479,291,1.79,292,1.767,293,2.483,294,1.587,295,1.939,296,1.719,297,1.939]],["title/interfaces/Product-1.html",[266,0.279,291,0.896,298,1.728]],["body/interfaces/Product-1.html",[3,0.187,4,0.166,8,0.145,20,0.209,21,0.604,34,0.016,42,0.342,47,0.764,56,0.293,63,0.707,90,1.81,98,1.761,107,0.234,154,0.012,155,0.012,266,0.619,267,1.462,268,1.22,270,2.069,271,1.559,272,1.788,275,1.777,284,1.27,285,1.27,286,1.619,290,2.505,291,2.024,292,1.585,294,1.126,295,1.375,296,1.605,297,1.375,299,2.742,300,2.323,301,2.92,302,2.21,303,2.92,304,3.837]],["title/interfaces/Product2.html",[266,0.332,304,2.174]],["body/interfaces/Product2.html",[3,0.175,4,0.156,8,0.136,20,0.195,21,0.579,34,0.016,42,0.371,47,0.766,56,0.288,63,1.024,90,1.142,98,2.549,107,0.227,154,0.011,155,0.011,266,0.608,267,1.654,268,1.142,270,2.044,271,1.494,272,1.732,275,1.757,284,1.189,285,1.189,286,1.516,290,1.581,291,1.732,292,1.793,294,1.63,295,1.991,296,1.741,297,1.991,299,2.568,300,2.176,301,2.734,302,2.07,303,2.734,304,3.529]],["title/components/ProductsComponent.html",[0,0.397,143,1.111]],["body/components/ProductsComponent.html",[0,0.506,1,0.79,2,1.181,3,0.112,4,0.099,5,0.857,6,0.823,7,0.857,8,0.087,10,0.823,11,2.335,12,2.07,14,1.28,15,2.769,16,1.28,18,1.333,20,0.125,21,0.423,22,1.663,23,1.807,27,0.892,30,2.502,31,1.497,33,1.068,34,0.016,35,1.701,38,1.902,39,1.827,42,0.293,47,0.595,49,1.248,50,0.968,51,0.484,55,1.203,56,0.112,57,0.505,75,1.203,78,1.203,90,1.091,101,0.857,102,1.28,103,1.23,104,0.857,105,1.701,106,0.857,107,0.178,108,0.857,109,0.79,110,0.857,111,0.79,112,0.857,113,1.28,114,0.79,115,0.857,116,0.79,117,0.857,118,1.57,119,0.857,120,0.857,121,0.79,122,0.857,123,0.79,124,0.857,125,0.79,126,0.857,127,0.79,128,0.857,129,0.79,130,0.857,131,0.79,132,0.857,133,0.79,134,0.857,135,0.79,136,0.857,137,0.79,138,0.857,139,0.79,140,0.857,141,0.79,142,0.857,143,1.57,144,0.857,145,0.79,146,0.857,147,1.57,148,1.23,149,0.857,150,0.79,151,0.79,152,0.823,153,0.857,154,0.008,155,0.008,165,1.575,191,0.759,192,0.759,250,1.885,253,1.39,275,0.647,294,1.007,298,2.188,302,3.055,307,1.976,322,2.796,323,2.769,336,1.547,339,1.747,342,3.299,343,3.299,344,3.299,345,3.299,346,3.299,347,3.299,348,3.299,349,3.299,350,3.299,351,3.299,352,3.299,353,3.299,354,3.299,355,3.299,356,3.299,357,3.299,358,3.299,375,2.02,415,1.747,439,1.26,451,1.39,466,3.299,478,2.02,528,2.188,529,3.126,724,2.312,728,1.464,789,2.935,811,1.464,948,2.02,970,2.457,980,3.468,1124,3.348,1125,3.95,1130,4.398,1131,3.95,1132,3.673,1136,3.673,1138,3.673,1163,3.673,1166,2.457,1170,2.457,1171,2.457,1172,2.457,1173,2.457,1174,2.02,1175,2.457,1176,2.457,1177,2.457,1178,2.457,1179,2.457,1180,2.457,1181,2.457,1186,2.457,1188,2.457,1426,2.457,1427,4.398,1428,4.241,1429,4.241,1430,5.078,1431,5.078,1432,5.078,1433,5.078,1434,4.241,1435,5.078,1436,2.838,1437,2.838,1438,2.838,1439,4.241,1440,2.838,1441,4.241,1442,2.838,1443,2.838,1444,2.838,1445,2.838,1446,2.838,1447,2.838,1448,2.838,1449,2.838,1450,2.457,1451,5.078,1452,4.241,1453,2.838,1454,2.838,1455,2.838,1456,2.838,1457,2.838,1458,2.838,1459,2.838,1460,2.838,1461,4.241,1462,4.241,1463,4.241]],["title/injectables/ProductsService.html",[175,1.111,980,2.455]],["body/injectables/ProductsService.html",[3,0.181,4,0.161,8,0.141,20,0.202,27,1.248,31,1.383,33,1.462,34,0.016,42,0.288,47,0.619,49,1.237,51,0.783,56,0.181,57,0.817,63,1.1,107,0.208,154,0.011,155,0.011,157,1.947,162,1.705,175,1.654,177,2.14,188,2.654,189,3.805,191,1.589,192,1.589,212,1.504,213,3.966,235,2.37,236,2.14,237,2.37,238,2.654,241,2.039,242,2.039,249,2.249,250,2.204,287,2.817,291,1.974,302,3.24,365,4.584,366,3.431,369,2.907,370,4.617,629,4.584,691,3.914,980,3.654,1131,5.408,1464,3.977,1465,5.936,1466,4.592,1467,4.592,1468,5.936,1469,5.936,1470,4.592,1471,4.592,1472,4.592]],["title/components/RegisterComponent.html",[0,0.397,145,1.111]],["body/components/RegisterComponent.html",[0,0.452,1,0.658,2,1.027,3,0.093,4,0.083,5,0.713,6,0.685,7,0.713,8,0.072,10,0.685,11,2.28,12,2.021,14,1.113,16,1.113,18,1.159,20,0.104,21,0.367,22,2.141,23,2.326,27,0.775,31,1.374,33,0.775,34,0.016,35,0.713,38,1.783,39,1.713,42,0.27,47,0.482,49,1.047,50,0.806,51,0.402,53,0.84,56,0.093,57,0.42,75,1.001,76,1.219,78,1.001,101,0.713,102,1.113,103,1.069,104,0.713,105,1.546,106,0.713,107,0.194,108,0.713,109,0.658,110,0.713,111,0.658,112,0.713,113,1.113,114,0.658,115,0.713,116,0.658,117,0.713,118,0.658,119,0.713,120,0.713,121,0.658,122,0.713,123,0.658,124,0.713,125,0.658,126,0.713,127,0.658,128,0.713,129,0.658,130,0.713,131,0.658,132,0.713,133,0.658,134,0.713,135,0.658,136,0.713,137,0.658,138,0.713,139,0.658,140,0.713,141,0.658,142,0.713,143,0.658,144,0.713,145,1.427,146,0.713,147,0.658,148,0.685,149,0.713,150,0.658,151,0.658,152,0.685,153,0.713,154,0.007,155,0.007,165,0.877,176,2.961,179,1.454,191,0.632,192,0.632,210,2.624,225,1.563,228,3.955,231,2.269,233,4.31,235,1.219,250,0.877,280,1.922,289,1.717,377,2.79,439,1.049,443,3.283,447,1.157,451,1.157,463,2.867,587,1.837,697,2.989,701,3.984,703,4.321,714,2.43,715,2.867,716,4.194,717,2.624,718,2.867,719,2.867,722,2.867,724,2.793,727,2.989,728,1.219,764,3.192,766,2.045,767,3.192,769,2.867,771,1.837,772,2.867,773,3.192,775,2.045,776,3.192,783,2.045,785,1.837,787,2.045,789,2.62,797,3.526,811,1.219,820,2.045,822,1.837,1074,2.624,1078,2.867,1079,2.867,1080,2.867,1089,1.681,1195,5.325,1196,3.926,1204,2.045,1205,4.436,1208,3.926,1210,2.045,1211,2.045,1213,1.837,1214,2.045,1215,2.045,1216,2.045,1217,2.045,1222,3.192,1224,2.045,1227,3.192,1229,3.192,1230,3.192,1231,2.045,1232,2.045,1237,2.045,1239,2.045,1240,2.045,1473,2.045,1474,4.533,1475,3.686,1476,3.686,1477,3.686,1478,3.686,1479,3.686,1480,2.362,1481,2.362,1482,2.362,1483,2.362,1484,2.362,1485,2.362,1486,2.362,1487,2.362,1488,3.686,1489,3.686,1490,5.122,1491,3.686,1492,3.686,1493,2.362,1494,2.362,1495,2.362,1496,2.362,1497,2.362,1498,2.362,1499,2.362,1500,2.362,1501,2.362,1502,2.362,1503,2.362,1504,2.362,1505,2.362,1506,2.362,1507,2.362,1508,3.686,1509,6.684,1510,5.122,1511,2.362,1512,2.362,1513,2.362,1514,2.362,1515,2.362,1516,2.362,1517,2.362,1518,2.362,1519,2.362,1520,2.362,1521,2.362,1522,2.362,1523,2.362,1524,2.362,1525,2.362,1526,2.362,1527,3.686,1528,2.362,1529,2.362,1530,2.362,1531,3.686,1532,2.362,1533,2.362,1534,2.362,1535,2.362,1536,5.122,1537,2.362,1538,2.362,1539,2.362,1540,2.362,1541,2.362,1542,2.362,1543,2.362,1544,2.362,1545,2.362,1546,2.362,1547,2.362,1548,2.362,1549,2.362,1550,2.362,1551,2.362,1552,2.362,1553,2.362,1554,2.362,1555,2.362,1556,2.362]],["title/components/SearchInputComponent.html",[0,0.397,147,1.111]],["body/components/SearchInputComponent.html",[0,0.67,1,1.044,2,1.655,3,0.148,4,0.131,5,1.565,6,1.087,7,1.132,8,0.159,10,1.087,11,2.409,12,2.131,14,1.565,15,3.238,16,1.565,18,1.629,20,0.165,21,0.516,27,1.089,31,1.249,33,0.788,34,0.016,35,1.132,38,1.087,39,1.655,42,0.252,47,0.488,49,1.14,51,0.639,55,1.589,56,0.148,57,0.667,101,1.132,102,1.565,103,1.503,104,1.132,105,1.934,106,1.132,107,0.181,108,1.132,109,1.044,110,1.132,111,1.044,112,1.132,113,1.565,114,1.044,115,1.132,116,1.044,117,1.132,118,1.044,119,1.132,120,1.132,121,1.044,122,1.132,123,1.044,124,1.132,125,1.044,126,1.132,127,1.044,128,1.132,129,1.044,130,1.132,131,1.044,132,1.132,133,1.044,134,1.132,135,1.044,136,1.132,137,1.044,138,1.132,139,1.044,140,1.132,141,1.044,142,1.132,143,1.044,144,1.132,145,1.044,146,1.132,147,1.785,148,2.187,149,1.132,150,1.044,151,1.044,152,1.087,153,1.132,154,0.01,155,0.01,230,1.935,244,2.308,404,3.247,415,3.944,424,3.247,728,1.935,1125,4.62,1174,4.562,1258,4.488,1557,5.549,1558,3.247,1559,5.183,1560,5.183,1561,5.144,1562,6.408,1563,5.183,1564,5.94,1565,6.408,1566,3.749,1567,3.749,1568,3.749,1569,5.94,1570,3.749,1571,3.749,1572,2.916,1573,2.916,1574,3.749,1575,3.749,1576,3.749,1577,3.749,1578,3.749,1579,3.749,1580,3.749,1581,3.749,1582,3.247]],["title/pipes/SearchPipe.html",[1124,2.63,1583,2.839]],["body/pipes/SearchPipe.html",[3,0.203,4,0.18,8,0.158,10,1.491,27,1.081,31,1.081,33,1.081,34,0.016,39,1.776,42,0.25,47,0.652,49,0.915,51,0.876,56,0.203,57,0.915,107,0.243,148,2.16,154,0.012,155,0.012,191,1.376,192,1.376,250,2.573,253,2.518,294,1.22,415,3.165,422,4.453,425,6.002,519,4.453,528,2.653,602,4.453,1124,4.204,1254,4.453,1364,3.999,1561,6.451,1583,4.539,1584,4.453,1585,4.453,1586,6.376,1587,5.141,1588,6.376,1589,6.376,1590,5.141,1591,5.141,1592,5.141,1593,5.141,1594,5.141,1595,5.141,1596,5.141,1597,5.141,1598,5.141,1599,5.141,1600,4.453,1601,5.141,1602,5.141]],["title/interfaces/ShippingAddress.html",[266,0.332,273,1.858]],["body/interfaces/ShippingAddress.html",[3,0.177,4,0.157,8,0.137,20,0.197,21,0.582,34,0.016,42,0.316,43,2.085,47,0.77,56,0.298,62,2.312,63,0.871,90,1.151,107,0.241,154,0.011,155,0.011,225,1.897,266,0.63,267,1.422,268,1.151,269,2.309,270,1.996,271,1.501,272,1.739,273,3.208,274,2.44,275,1.744,276,2.44,277,2.44,278,2.44,279,2.44,280,2.474,281,2.44,282,2.44,283,2.859,284,1.198,285,1.198,286,1.527,287,2.789,288,3.553,289,3.327,290,1.592,291,1.739,292,1.542,293,1.661,294,1.062,295,1.298,296,1.57,297,1.298]],["title/interfaces/Subcategory.html",[266,0.332,292,0.947]],["body/interfaces/Subcategory.html",[3,0.174,4,0.155,8,0.135,20,0.194,21,0.577,34,0.016,42,0.333,43,2.059,47,0.77,56,0.298,62,2.297,63,0.863,90,1.136,107,0.26,154,0.011,155,0.011,225,1.873,266,0.628,267,1.414,268,1.136,269,2.28,270,2.061,271,1.489,272,1.953,273,3.008,274,2.409,275,1.739,276,2.409,277,2.409,278,2.409,279,2.409,280,2.454,281,2.409,282,2.409,283,2.835,284,1.183,285,1.183,286,1.508,287,1.79,288,2.28,289,2.697,290,1.572,291,1.728,292,1.626,293,1.64,294,1.049,295,1.281,296,1.695,297,1.281]],["title/interfaces/Subcategory-1.html",[266,0.279,292,0.795,298,1.728]],["body/interfaces/Subcategory-1.html",[3,0.187,4,0.166,8,0.145,20,0.209,21,0.604,34,0.016,42,0.342,47,0.769,56,0.293,63,0.707,90,1.22,98,1.761,107,0.26,154,0.012,155,0.012,266,0.619,267,1.462,268,1.22,270,2.069,271,1.559,272,1.991,275,1.696,284,1.27,285,1.27,286,1.619,290,1.688,291,1.788,292,1.671,294,1.126,295,1.375,296,1.724,297,1.375,299,2.742,300,2.323,301,2.92,302,2.21,303,2.92,304,3.304]],["title/interfaces/Subcategory-2.html",[266,0.279,292,0.795,305,2.061]],["body/interfaces/Subcategory-2.html",[3,0.193,4,0.171,8,0.15,20,0.215,21,0.616,34,0.015,42,0.346,47,0.77,56,0.281,63,0.73,90,1.259,98,1.817,107,0.263,154,0.012,155,0.012,212,1.603,266,0.593,267,1.484,268,1.259,270,2.038,271,1.59,272,2.038,275,1.674,284,1.31,285,1.31,292,1.69,293,1.817,294,1.162,295,1.419,296,1.736,297,1.419,306,3.227,307,2.281,308,2.669,309,2.669]],["title/interfaces/Subcategory-3.html",[266,0.279,292,0.795,310,2.208]],["body/interfaces/Subcategory-3.html",[3,0.192,4,0.171,8,0.149,20,0.214,21,0.615,34,0.015,42,0.345,47,0.77,56,0.28,63,0.727,90,1.254,98,1.81,107,0.262,154,0.012,155,0.012,212,1.597,266,0.592,267,1.481,268,1.254,270,2.036,271,1.586,272,2.036,275,1.708,284,1.305,285,1.305,286,1.664,292,1.687,293,1.81,294,1.157,295,1.414,296,1.734,297,1.414,308,2.658,309,2.658,311,3.214,312,2.818]],["title/interfaces/User.html",[62,1.419,266,0.332]],["body/interfaces/User.html",[3,0.174,4,0.155,8,0.135,20,0.194,21,0.577,34,0.016,42,0.333,43,2.059,47,0.77,56,0.298,62,2.438,63,0.863,90,1.136,107,0.26,154,0.011,155,0.011,225,2.904,266,0.628,267,1.414,268,1.136,269,2.28,270,2.061,271,1.489,272,1.728,273,3.008,274,2.409,275,1.739,276,2.409,277,2.409,278,2.409,279,2.409,280,2.454,281,2.409,282,2.409,283,2.835,284,1.183,285,1.183,286,1.508,287,1.79,288,2.28,289,3.314,290,1.572,291,1.728,292,1.532,293,1.64,294,1.049,295,1.281,296,1.562,297,1.281]],["title/components/WishlistComponent.html",[0,0.397,150,1.111]],["body/components/WishlistComponent.html",[0,0.493,1,0.756,2,1.143,3,0.107,4,0.095,5,0.82,6,0.787,7,0.82,8,0.126,10,0.787,11,2.322,12,2.059,14,1.239,15,2.696,16,1.239,18,1.29,20,0.217,21,0.409,22,2.23,23,2.423,27,0.862,30,2.447,31,1.398,33,1.158,34,0.016,35,2.008,38,1.598,39,1.535,42,0.24,47,0.585,49,1.211,50,0.927,51,0.463,53,0.966,55,1.151,56,0.107,57,0.483,62,0.966,63,0.612,75,2.096,76,2.117,78,2.096,80,3.004,94,3.633,101,0.82,102,1.239,103,1.19,104,0.82,105,1.664,106,0.82,107,0.193,108,0.82,109,0.756,110,0.82,111,0.756,112,0.82,113,1.239,114,0.756,115,0.82,116,0.756,117,0.82,118,0.756,119,0.82,120,0.82,121,0.756,122,0.82,123,0.756,124,0.82,125,0.756,126,0.82,127,0.756,128,0.82,129,0.756,130,0.82,131,0.756,132,0.82,133,0.756,134,0.82,135,0.756,136,0.82,137,0.756,138,0.82,139,0.756,140,0.82,141,0.756,142,0.82,143,0.756,144,0.82,145,0.756,146,0.82,147,0.756,148,0.787,149,0.82,150,1.535,151,1.8,152,0.787,153,0.82,154,0.008,155,0.008,165,1.008,191,1.098,192,1.098,291,0.727,294,0.974,312,2.858,336,2.696,339,1.671,381,2.699,383,3.392,384,5.124,385,3.392,386,3.191,393,3.191,407,2.525,410,2.705,413,3.191,416,1.671,417,1.569,418,2.112,432,2.705,435,2.858,437,2.568,438,2.112,439,2.196,441,2.112,442,1.933,443,2.117,444,1.933,445,1.79,446,1.933,447,2.422,448,1.933,450,1.79,451,2.422,452,2.351,454,2.351,461,2.525,464,2.351,489,3.191,491,3.553,493,3.191,494,3.191,495,3.553,510,2.921,516,3.553,528,2.117,529,3.044,531,3.846,552,1.933,553,2.921,554,2.112,562,3.191,563,2.351,564,2.351,565,2.351,566,2.921,567,2.351,568,3.553,569,2.351,570,2.351,571,2.351,572,2.351,573,2.351,574,2.351,575,2.351,577,2.351,578,2.351,582,3.191,1603,2.351,1604,4.945,1605,4.102,1606,4.102,1607,4.773,1608,4.102,1609,2.715,1610,2.715,1611,2.715,1612,4.102,1613,2.715,1614,2.715,1615,2.715,1616,2.715,1617,2.715,1618,2.715,1619,4.102,1620,2.715,1621,4.102,1622,4.102,1623,4.102,1624,4.102,1625,4.102,1626,4.102,1627,4.102]],["title/injectables/WishlistService.html",[175,1.111,385,2.455]],["body/injectables/WishlistService.html",[3,0.163,4,0.145,8,0.127,20,0.182,27,1.165,31,1.403,33,1.506,34,0.016,42,0.303,47,0.674,49,1.187,51,0.705,56,0.163,57,0.736,63,1.123,107,0.219,151,2.153,154,0.011,155,0.011,157,1.753,162,1.535,175,1.543,177,1.927,188,2.39,189,3.696,191,1.672,192,1.672,211,3.444,212,1.814,213,4.012,214,4.751,235,2.134,236,1.927,237,2.134,238,2.39,241,1.836,242,1.836,249,2.713,250,2.32,291,1.99,302,2.581,365,4.722,366,3.202,369,2.713,385,3.41,432,3.653,435,3.202,461,3.41,625,4.309,629,3.653,634,4.798,648,3.581,1607,5.78,1628,3.581,1629,5.54,1630,5.54,1631,4.135,1632,5.54,1633,4.135,1634,4.135,1635,5.54,1636,4.135,1637,4.135,1638,4.135,1639,4.135]],["title/coverage.html",[1640,4.682]],["body/coverage.html",[0,0.762,1,0.77,8,0.085,9,2.394,12,0.74,25,1.822,34,0.016,42,0.134,43,1.288,62,0.984,109,0.77,111,0.77,114,0.77,116,0.77,118,0.77,121,0.77,123,0.77,125,0.77,127,0.77,129,0.77,131,0.77,133,0.77,135,0.77,137,0.77,139,0.77,141,0.77,143,0.77,145,0.77,147,0.77,150,0.77,154,0.008,155,0.008,156,2.394,167,2.394,168,2.394,169,3.234,175,1.942,176,1.598,178,2.394,230,1.426,237,1.426,246,2.56,264,2.394,265,2.394,266,0.644,267,1.218,269,3.452,273,1.288,283,1.354,291,1.113,292,1.32,296,1.268,299,3.621,300,1.354,304,1.507,306,3.666,307,1.288,311,3.666,312,1.598,313,2.394,317,1.968,327,1.968,360,2.394,374,2.394,375,1.968,376,2.394,381,1.354,385,1.701,478,5.79,508,3.559,513,5.164,527,2.394,603,3.234,604,2.15,606,2.394,614,2.394,655,2.394,660,1.822,670,1.822,688,2.394,695,2.394,753,3.447,788,2.394,842,1.968,843,3.932,844,3.932,891,2.15,893,6.564,894,2.15,896,1.968,914,2.15,925,2.394,977,2.15,978,2.394,980,1.701,992,1.968,993,2.394,1019,2.394,1059,2.394,1121,2.394,1124,1.822,1174,1.968,1189,2.394,1190,2.394,1191,2.394,1241,1.968,1242,2.394,1289,2.394,1395,2.394,1400,2.394,1426,2.394,1464,2.394,1473,2.394,1557,2.394,1558,2.394,1583,1.968,1585,2.394,1603,2.394,1628,2.394,1640,2.394,1641,2.764,1642,2.764,1643,2.764,1644,4.999,1645,3.601,1646,2.394,1647,7.649,1648,2.394,1649,2.394,1650,2.394,1651,2.394,1652,2.394,1653,2.394,1654,2.394,1655,2.394,1656,2.394,1657,2.394,1658,2.394,1659,2.394,1660,2.394,1661,2.394,1662,5.963,1663,2.394,1664,2.394,1665,2.764,1666,2.764,1667,4.999,1668,2.764,1669,2.764,1670,2.764,1671,2.764,1672,2.764,1673,2.764,1674,2.764,1675,2.764,1676,4.158,1677,4.158,1678,2.394,1679,2.15,1680,4.158,1681,2.764,1682,4.999,1683,4.158,1684,5.963,1685,2.764,1686,4.158,1687,2.764,1688,2.764,1689,4.158,1690,7.388,1691,2.764,1692,4.158,1693,2.764,1694,2.764,1695,2.394,1696,2.394,1697,5.164,1698,2.394,1699,2.394,1700,2.394,1701,2.394,1702,2.764,1703,2.764]],["title/dependencies.html",[1704,2.9,1705,4.146]],["body/dependencies.html",[34,0.016,51,0.869,53,1.814,55,2.161,154,0.012,155,0.012,165,2.813,166,3.966,205,4.416,211,2.631,236,2.376,240,4.416,417,2.947,552,3.63,553,4.516,728,2.631,811,2.631,999,4.416,1004,4.182,1167,4.416,1168,4.416,1169,4.416,1373,3.966,1450,4.416,1705,4.416,1706,5.098,1707,7.829,1708,5.098,1709,6.905,1710,5.098,1711,5.098,1712,4.416,1713,5.098,1714,5.098,1715,5.098,1716,5.098,1717,5.098,1718,5.098,1719,5.098,1720,4.416,1721,5.098,1722,5.098,1723,5.098,1724,5.098,1725,5.098,1726,6.905,1727,5.098,1728,5.098,1729,5.098,1730,5.098,1731,5.098,1732,5.098,1733,5.098]],["title/miscellaneous/enumerations.html",[1734,2.061,1735,4.146]],["body/miscellaneous/enumerations.html",[20,0.266,34,0.015,39,1.96,154,0.014,155,0.014,753,4.066,843,3.993,844,4.638,863,5.008,866,5.472,873,5.008,1734,3.728,1735,5.245,1736,4.71]],["title/miscellaneous/functions.html",[1734,2.061,1737,4.146]],["body/miscellaneous/functions.html",[8,0.17,20,0.244,34,0.014,42,0.27,107,0.194,154,0.013,155,0.013,165,2.06,189,3.699,191,1.485,192,1.485,212,1.817,244,3.415,246,3.415,431,4.805,753,3.861,835,3.658,843,3.658,844,4.404,863,3.95,864,4.805,913,4.316,914,5.575,920,4.805,921,4.805,1017,5.785,1678,4.805,1679,5.196,1734,3.415,1736,4.316,1737,4.805,1738,5.549,1739,5.549,1740,5.549,1741,5.549,1742,6.68,1743,5.785,1744,6.68,1745,4.805,1746,5.549,1747,5.549,1748,5.549,1749,5.549,1750,6.68,1751,5.549,1752,4.805]],["title/index.html",[20,0.147,1753,3.348,1754,3.348]],["body/index.html",[0,0.661,2,1.304,4,0.164,34,0.012,38,1.742,152,1.357,154,0.012,155,0.012,200,3.332,211,3.425,220,3.698,230,2.415,244,3.698,259,4.053,366,2.705,426,3.086,472,5.748,645,4.053,686,3.64,691,3.086,780,4.053,1004,3.086,1007,4.053,1013,4.278,1277,4.053,1387,4.053,1410,4.053,1572,5.447,1582,4.053,1584,4.053,1600,4.053,1712,4.053,1745,4.053,1755,4.68,1756,6.637,1757,4.68,1758,6.272,1759,4.053,1760,6.008,1761,7.242,1762,7.411,1763,7.411,1764,4.68,1765,4.68,1766,6.008,1767,4.68,1768,4.68,1769,4.68,1770,6.008,1771,4.68,1772,4.68,1773,4.68,1774,4.68,1775,4.68,1776,4.68,1777,4.68,1778,5.748,1779,4.68,1780,4.68,1781,4.68,1782,4.68,1783,4.68,1784,4.68,1785,4.68,1786,4.68,1787,4.68,1788,6.008,1789,6.637,1790,4.68,1791,4.68,1792,4.68,1793,4.68,1794,6.637,1795,4.68,1796,7.411,1797,4.68,1798,6.008,1799,4.68,1800,4.68,1801,4.68,1802,4.68,1803,4.68,1804,4.68,1805,4.68,1806,4.68,1807,4.68,1808,4.68,1809,4.68,1810,4.68,1811,4.68,1812,3.64,1813,4.68]],["title/modules.html",[1573,4.205]],["body/modules.html",[34,0.014,154,0.014,155,0.014,1573,4.93]],["title/overview.html",[1812,4.205]],["body/overview.html",[2,1.721,34,0.014,154,0.014,155,0.014,177,2.879,268,1.589,298,3.188,305,3.803,605,4.805,1583,4.398,1812,4.805,1814,6.178,1815,6.178,1816,6.178]],["title/properties.html",[21,0.477,1704,2.9]],["body/properties.html",[21,0.627,34,0.015,154,0.014,155,0.014,1759,5.447,1817,6.289]],["title/miscellaneous/variables.html",[1734,2.061,1818,4.146]],["body/miscellaneous/variables.html",[12,1.122,20,0.123,34,0.016,38,2.201,39,2.114,42,0.345,47,0.263,62,2.321,63,0.625,64,2.418,70,1.841,151,1.167,154,0.008,155,0.008,166,4.348,179,2.579,189,1.441,197,4.348,199,3.259,200,2.983,207,1.988,211,1.441,217,2.418,220,1.719,222,5.187,230,1.441,231,2.579,237,2.884,244,1.719,250,2.635,253,3.08,254,2.172,369,2.052,383,1.719,410,1.841,417,1.614,435,1.614,437,1.952,439,2.482,447,2.463,451,2.738,458,2.763,459,3.581,463,2.172,466,2.172,473,2.172,499,2.418,625,2.172,630,5.447,649,2.418,720,2.418,724,3.047,731,3.259,753,3.462,778,2.418,843,1.841,844,3.685,861,3.259,873,1.988,888,3.912,891,3.259,892,2.418,894,3.259,896,2.983,974,2.418,987,4.356,1004,3.685,1005,2.418,1008,2.418,1013,1.988,1122,2.418,1263,2.172,1271,3.629,1364,2.172,1373,2.172,1427,2.418,1572,2.172,1645,2.418,1646,4.356,1648,4.356,1649,2.418,1650,3.629,1651,2.418,1652,3.629,1653,2.418,1654,2.418,1655,3.629,1656,2.418,1657,3.629,1658,2.418,1659,4.356,1660,2.418,1661,3.629,1663,2.418,1664,4.841,1679,2.172,1695,2.418,1696,3.629,1697,2.418,1698,3.629,1699,3.629,1700,3.629,1701,3.629,1720,2.418,1734,1.719,1736,3.912,1743,2.418,1752,3.629,1758,2.418,1778,2.418,1818,2.418,1819,5.989,1820,2.792,1821,2.792,1822,2.792,1823,4.19,1824,2.792,1825,2.792,1826,2.792,1827,2.792,1828,2.792,1829,2.792,1830,2.792,1831,2.792,1832,2.792,1833,4.19,1834,2.792,1835,2.792,1836,2.792,1837,4.19,1838,4.19,1839,2.792,1840,2.792,1841,2.792,1842,2.792,1843,2.792,1844,2.792,1845,2.792,1846,2.792,1847,2.792,1848,2.792,1849,2.792,1850,2.792,1851,2.792,1852,2.792,1853,2.792,1854,2.792,1855,2.792,1856,2.792,1857,2.792,1858,2.792,1859,2.792,1860,4.19,1861,4.19,1862,5.029,1863,4.19,1864,5.589,1865,4.19,1866,2.792,1867,4.19,1868,2.792,1869,2.792,1870,2.792,1871,2.792,1872,2.792,1873,2.792,1874,5.029,1875,5.589,1876,2.792,1877,2.792,1878,2.792,1879,2.792,1880,2.792,1881,2.792,1882,2.792,1883,2.792,1884,5.029,1885,2.792,1886,2.792,1887,2.792,1888,2.792,1889,2.792,1890,2.792,1891,2.792,1892,2.792,1893,4.19,1894,2.792,1895,2.792,1896,2.792,1897,2.792,1898,2.792,1899,2.792,1900,2.792,1901,2.792,1902,2.792,1903,2.792,1904,2.792,1905,2.792,1906,2.792,1907,2.792,1908,2.792,1909,2.792,1910,2.792,1911,2.792,1912,2.792,1913,2.792,1914,2.792,1915,2.792,1916,2.792,1917,2.792]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":478,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1817,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1687,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1686,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1685,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1693,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1694,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1683,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["0123456789",{"_index":1025,"title":{},"body":{"components/FooterComponent.html":{}}}],["1",{"_index":298,"title":{"interfaces/Brand-1.html":{},"interfaces/Category-1.html":{},"interfaces/Product-1.html":{},"interfaces/Subcategory-1.html":{}},"body":{"components/CardForOrdersComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"overview.html":{}}}],["1.3.0",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1815,"title":{},"body":{"overview.html":{}}}],["100",{"_index":513,"title":{},"body":{"components/CardForOrdersComponent.html":{},"coverage.html":{}}}],["100px",{"_index":525,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["10am",{"_index":1028,"title":{},"body":{"components/FooterComponent.html":{}}}],["11.17.2",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["13.0.0",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":475,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["16",{"_index":1441,"title":{},"body":{"components/ProductsComponent.html":{}}}],["16.0.1",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["19.1.0",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["19.1.5",{"_index":1712,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":305,"title":{"interfaces/Brand-2.html":{},"interfaces/Category-2.html":{},"interfaces/Subcategory-2.html":{}},"body":{"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["2).join",{"_index":1627,"title":{},"body":{"components/WishlistComponent.html":{}}}],["2.3.0",{"_index":1731,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":1055,"title":{},"body":{"components/FooterComponent.html":{}}}],["21",{"_index":1814,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1816,"title":{},"body":{"overview.html":{}}}],["2500",{"_index":752,"title":{},"body":{"components/ChatComponent.html":{}}}],["2s",{"_index":515,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["2xl",{"_index":511,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["3",{"_index":310,"title":{"interfaces/Brand-3.html":{},"interfaces/Category-3.html":{},"interfaces/Subcategory-3.html":{}},"body":{"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{}}}],["3.0.0",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":445,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/WishlistComponent.html":{}}}],["3085d6",{"_index":571,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["33",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["3pm",{"_index":1031,"title":{},"body":{"components/FooterComponent.html":{}}}],["4.0.0",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["5/9",{"_index":1669,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":508,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["500",{"_index":1213,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["50px",{"_index":523,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["55",{"_index":1668,"title":{},"body":{"coverage.html":{}}}],["5pm",{"_index":1029,"title":{},"body":{"components/FooterComponent.html":{}}}],["6",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.0.3",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["740",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["77",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["940",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["9]{6",{"_index":1086,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["9]{8",{"_index":719,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["__v",{"_index":286,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["_id",{"_index":270,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["_self",{"_index":827,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["a[key",{"_index":1458,"title":{},"body":{"components/ProductsComponent.html":{}}}],["absolute",{"_index":509,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["abstractcontrol",{"_index":1205,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["access",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessories",{"_index":1040,"title":{},"body":{"components/FooterComponent.html":{}}}],["accessors",{"_index":1434,"title":{},"body":{"components/ProductsComponent.html":{}}}],["accordingly",{"_index":1260,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["account",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accusantium",{"_index":358,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["activatedroute",{"_index":24,"title":{},"body":{"components/AllordersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["activatedroutesnapshot",{"_index":984,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["activateroute",{"_index":534,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{}}}],["active",{"_index":732,"title":{},"body":{"components/ChatComponent.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["add",{"_index":435,"title":{},"body":{"components/CardForOrdersComponent.html":{},"injectables/CartService.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["addclasstohtml",{"_index":846,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["addclasstohtml(classname",{"_index":853,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["added",{"_index":441,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["adding",{"_index":471,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["additional",{"_index":1806,"title":{},"body":{"index.html":{}}}],["addproducttocart",{"_index":617,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttocart(id",{"_index":623,"title":{},"body":{"injectables/CartService.html":{}}}],["addproducttowishlist",{"_index":1629,"title":{},"body":{"injectables/WishlistService.html":{}}}],["addproducttowishlist(id",{"_index":1632,"title":{},"body":{"injectables/WishlistService.html":{}}}],["address",{"_index":1111,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"injectables/OrdersService.html":{}}}],["adds",{"_index":625,"title":{},"body":{"injectables/CartService.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["addtocart",{"_index":386,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["addtocart(id",{"_index":393,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["addtocart(id:string):void",{"_index":958,"title":{},"body":{"components/DetailsComponent.html":{}}}],["addtowishlist",{"_index":930,"title":{},"body":{"components/DetailsComponent.html":{}}}],["addtowishlist(id",{"_index":935,"title":{},"body":{"components/DetailsComponent.html":{}}}],["addtowishlist(id:string):void",{"_index":959,"title":{},"body":{"components/DetailsComponent.html":{}}}],["adipisicing",{"_index":348,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["allorders",{"_index":13,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorders'},{'name",{"_index":108,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["allorders.component.html",{"_index":17,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorders.component.scss",{"_index":19,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorders:iallorders",{"_index":59,"title":{},"body":{"components/AllordersComponent.html":{}}}],["allorderscomponent",{"_index":1,"title":{"components/AllordersComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["allow",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":463,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["amet",{"_index":346,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["angular",{"_index":1572,"title":{},"body":{"components/SearchInputComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular's",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/animations",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":55,"title":{},"body":{"components/AllordersComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"components/LoginComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"injectables/WishlistService.html":{}}}],["angular/compiler",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":51,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":728,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":53,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":1698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animated",{"_index":427,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["animation",{"_index":467,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["anywhere",{"_index":1046,"title":{},"body":{"components/FooterComponent.html":{}}}],["api",{"_index":1468,"title":{},"body":{"injectables/ProductsService.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":109,"title":{"components/AppComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":1766,"title":{},"body":{"index.html":{}}}],["application's",{"_index":1259,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["applicationconfig",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apply",{"_index":497,"title":{},"body":{"components/CardForOrdersComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{}}}],["apptheme",{"_index":873,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apptheme.dark",{"_index":1370,"title":{},"body":{"components/NavbarComponent.html":{}}}],["apptheme.light",{"_index":1367,"title":{},"body":{"components/NavbarComponent.html":{}}}],["apptheme|undefined",{"_index":897,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["ar",{"_index":1265,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["arabic",{"_index":1266,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["array",{"_index":425,"title":{},"body":{"components/CardForOrdersComponent.html":{},"pipes/SearchPipe.html":{}}}],["array.isarray(arrayofobject",{"_index":1592,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arrayofobject",{"_index":1588,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["arrayofobject.filter((item",{"_index":1601,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["artifacts",{"_index":1781,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":1253,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["auth",{"_index":112,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["authguard",{"_index":1655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authlayoutcomponent",{"_index":111,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":176,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["auto",{"_index":754,"title":{},"body":{"components/ChatComponent.html":{}}}],["automatically",{"_index":1767,"title":{},"body":{"index.html":{}}}],["autoplay",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{}}}],["autoplayhoverpause",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{}}}],["autoplaytimeout",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{}}}],["availability",{"_index":968,"title":{},"body":{"components/DetailsComponent.html":{}}}],["available",{"_index":691,"title":{},"body":{"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["b",{"_index":1455,"title":{},"body":{"components/ProductsComponent.html":{}}}],["b[key",{"_index":1459,"title":{},"body":{"components/ProductsComponent.html":{}}}],["based",{"_index":1254,"title":{},"body":{"injectables/MytranslateService.html":{},"pipes/SearchPipe.html":{}}}],["baseurl",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":612,"title":{},"body":{"guards/CartResolver.html":{},"guards/DetailsResolver.html":{}}}],["behaviorsubject",{"_index":644,"title":{},"body":{"injectables/CartService.html":{}}}],["blanditiis",{"_index":355,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["blank",{"_index":115,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["blanklayoutcomponent",{"_index":114,"title":{"components/BlankLayoutComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["blue",{"_index":1382,"title":{},"body":{"components/NavbarComponent.html":{}}}],["boolean",{"_index":280,"title":{},"body":{"interfaces/Brand.html":{},"components/CardForOrdersComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"components/ChatComponent.html":{},"interfaces/IallOrders.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":1696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bound",{"_index":1577,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["boundary",{"_index":476,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["brand",{"_index":267,"title":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["brand.name",{"_index":359,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands",{"_index":314,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{}}}],["brands'},{'name",{"_index":117,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["brands.component.html",{"_index":315,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands.component.scss",{"_index":316,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brands:writablesignal",{"_index":330,"title":{},"body":{"components/BrandsComponent.html":{}}}],["brandscomponent",{"_index":116,"title":{"components/BrandsComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["brandsservice",{"_index":317,"title":{"injectables/BrandsService.html":{}},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"coverage.html":{}}}],["break",{"_index":1368,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browser",{"_index":1004,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":1699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1778,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":1779,"title":{},"body":{"index.html":{}}}],["buy",{"_index":1043,"title":{},"body":{"components/FooterComponent.html":{}}}],["bypass",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["call",{"_index":1024,"title":{},"body":{"components/FooterComponent.html":{}}}],["callback",{"_index":1006,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["callback(flowbite",{"_index":1018,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["canactivatefn",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelbuttoncolor",{"_index":572,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["card",{"_index":119,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["cardfororderscomponent",{"_index":118,"title":{"components/CardForOrdersComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["care",{"_index":1038,"title":{},"body":{"components/FooterComponent.html":{}}}],["carousel",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["carouselmodule",{"_index":1123,"title":{},"body":{"components/HomeComponent.html":{}}}],["cart",{"_index":437,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"injectables/OrdersService.html":{},"components/WishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["cart'},{'name",{"_index":122,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["cart.component.html",{"_index":532,"title":{},"body":{"components/CartComponent.html":{}}}],["cart.component.scss",{"_index":533,"title":{},"body":{"components/CartComponent.html":{}}}],["cartcomponent",{"_index":121,"title":{"components/CartComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["cartcount",{"_index":1294,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cartcountnumber",{"_index":1298,"title":{},"body":{"components/NavbarComponent.html":{}}}],["cartdetails",{"_index":535,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails.products",{"_index":596,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails.totalcartprice",{"_index":593,"title":{},"body":{"components/CartComponent.html":{}}}],["cartdetails:icart",{"_index":555,"title":{},"body":{"components/CartComponent.html":{}}}],["cartid",{"_index":792,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartid:string",{"_index":813,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["cartitem",{"_index":283,"title":{"interfaces/CartItem.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["cartitems",{"_index":282,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["cartnumber",{"_index":615,"title":{},"body":{"injectables/CartService.html":{}}}],["cartowner",{"_index":301,"title":{},"body":{"interfaces/Brand-1.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory-1.html":{}}}],["cartresolver",{"_index":604,"title":{"guards/CartResolver.html":{}},"body":{"guards/CartResolver.html":{},"coverage.html":{}}}],["cartservice",{"_index":381,"title":{"injectables/CartService.html":{}},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/NavbarComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["case",{"_index":1364,"title":{},"body":{"components/NavbarComponent.html":{},"pipes/SearchPipe.html":{},"miscellaneous/variables.html":{}}}],["cash",{"_index":828,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{}}}],["catcherror",{"_index":326,"title":{},"body":{"components/BrandsComponent.html":{}}}],["catcherror((err",{"_index":334,"title":{},"body":{"components/BrandsComponent.html":{}}}],["cate",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["cate._id",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["cate.name",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["categ",{"_index":680,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categ.name",{"_index":681,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categ.updatedat",{"_index":683,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories",{"_index":656,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/HomeComponent.html":{}}}],["categories'},{'name",{"_index":124,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["categories.component.html",{"_index":658,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories.component.scss",{"_index":659,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["categories:writablesignal",{"_index":673,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["categoriescomponent",{"_index":123,"title":{"components/CategoriesComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["categoriseservice",{"_index":660,"title":{"injectables/CategoriseService.html":{}},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["category",{"_index":296,"title":{"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["chain",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["changedirection",{"_index":1243,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["changelang",{"_index":1299,"title":{},"body":{"components/NavbarComponent.html":{}}}],["changelang(lang",{"_index":1314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["changelangtranslate",{"_index":1244,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["changelangtranslate(lang",{"_index":1256,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["changes",{"_index":1258,"title":{},"body":{"injectables/MytranslateService.html":{},"components/SearchInputComponent.html":{}}}],["chat",{"_index":696,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat'},{'name",{"_index":126,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["chat.component.html",{"_index":698,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":699,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat/chat.component",{"_index":1023,"title":{},"body":{"components/FooterComponent.html":{}}}],["chatcomponent",{"_index":125,"title":{"components/ChatComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["chatform",{"_index":700,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatform.get('email",{"_index":770,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatform.get('name",{"_index":765,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatform.get('phone",{"_index":774,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatform.get(\\'email",{"_index":784,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatform.get(\\'name",{"_index":782,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatform.get(\\'phone",{"_index":786,"title":{},"body":{"components/ChatComponent.html":{}}}],["cheakoutpayment",{"_index":1401,"title":{},"body":{"injectables/OrdersService.html":{}}}],["cheakoutpayment(id",{"_index":1404,"title":{},"body":{"injectables/OrdersService.html":{}}}],["check",{"_index":459,"title":{},"body":{"components/CardForOrdersComponent.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"miscellaneous/variables.html":{}}}],["checkout",{"_index":601,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{}}}],["checkout'},{'name",{"_index":128,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["checkout.checkout",{"_index":834,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.city",{"_index":838,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.html",{"_index":790,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.component.scss",{"_index":791,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.details",{"_index":837,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.payment",{"_index":840,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.phone_number",{"_index":839,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkout.shipping_address",{"_index":836,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutcomponent",{"_index":127,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["checkoutform",{"_index":793,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checkoutform!:formgroup",{"_index":812,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["checks",{"_index":920,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1802,"title":{},"body":{"index.html":{}}}],["city",{"_index":288,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"components/CheckoutComponent.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["class",{"_index":57,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["classname",{"_index":856,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["clear",{"_index":584,"title":{},"body":{"components/CartComponent.html":{}}}],["clearcart",{"_index":618,"title":{},"body":{"injectables/CartService.html":{}}}],["clearitems",{"_index":536,"title":{},"body":{"components/CartComponent.html":{}}}],["clearitems():void",{"_index":585,"title":{},"body":{"components/CartComponent.html":{}}}],["clears",{"_index":627,"title":{},"body":{"injectables/CartService.html":{}}}],["cli",{"_index":1758,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":900,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["client_render",{"_index":891,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closebutton",{"_index":446,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["closechat",{"_index":704,"title":{},"body":{"components/ChatComponent.html":{}}}],["closes",{"_index":755,"title":{},"body":{"components/ChatComponent.html":{}}}],["code",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"injectables/MytranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["cofirmpassword",{"_index":1478,"title":{},"body":{"components/RegisterComponent.html":{}}}],["cofirmpassword(group",{"_index":1479,"title":{},"body":{"components/RegisterComponent.html":{}}}],["color",{"_index":870,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{}}}],["come",{"_index":1800,"title":{},"body":{"index.html":{}}}],["command",{"_index":1794,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":15,"title":{},"body":{"components/AllordersComponent.html":{},"components/CardForOrdersComponent.html":{},"components/ChatComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["compile",{"_index":1780,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1774,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":106,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":1328,"title":{},"body":{"components/NavbarComponent.html":{}}}],["conditions",{"_index":1050,"title":{},"body":{"components/FooterComponent.html":{}}}],["config",{"_index":1646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":1497,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmation",{"_index":756,"title":{},"body":{"components/ChatComponent.html":{}}}],["confirmbuttoncolor",{"_index":570,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["confirmbuttontext",{"_index":574,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["consectetur",{"_index":347,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["console.error('error",{"_index":457,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["console.log(err",{"_index":78,"title":{},"body":{"components/AllordersComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["console.log(res",{"_index":76,"title":{},"body":{"components/AllordersComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["console.log(res.data",{"_index":340,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["console.log(this.userdata",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"components/CardForOrdersComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["constructor(@inject(platform_id",{"_index":1012,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(cartservice",{"_index":608,"title":{},"body":{"guards/CartResolver.html":{}}}],["constructor(flowbiteservice",{"_index":1308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(httpclient",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["constructor(platformid",{"_index":995,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["constructor(private",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["constructor(productservice",{"_index":979,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["constructor(renderer",{"_index":707,"title":{},"body":{"components/ChatComponent.html":{},"components/DetailsComponent.html":{}}}],["constructor(translateservice",{"_index":1245,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["constructs",{"_index":1746,"title":{},"body":{"miscellaneous/functions.html":{}}}],["contact",{"_index":748,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotpasswordComponent.html":{}}}],["container",{"_index":496,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["containing",{"_index":365,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["contains",{"_index":880,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["controls",{"_index":737,"title":{},"body":{"components/ChatComponent.html":{}}}],["convert",{"_index":1593,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["cookies",{"_index":1053,"title":{},"body":{"components/FooterComponent.html":{}}}],["copy",{"_index":1054,"title":{},"body":{"components/FooterComponent.html":{}}}],["core/pipes/search.pipe",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["core/services/auth/auth.service",{"_index":1089,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/brands/brands.service",{"_index":329,"title":{},"body":{"components/BrandsComponent.html":{}}}],["core/services/cart/cart.service",{"_index":416,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/NavbarComponent.html":{},"components/WishlistComponent.html":{}}}],["core/services/categorise/categorise.service",{"_index":672,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["core/services/darkmood/dark",{"_index":1346,"title":{},"body":{"components/NavbarComponent.html":{}}}],["core/services/flowbite/flowbite.service",{"_index":1345,"title":{},"body":{"components/NavbarComponent.html":{}}}],["core/services/mytranslate/mytranslate.service",{"_index":1342,"title":{},"body":{"components/NavbarComponent.html":{}}}],["core/services/orders/orders.service",{"_index":52,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["core/services/products/products.service",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["core/services/wishlist/wishlist.service",{"_index":418,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["correct",{"_index":1280,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["count",{"_index":290,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{}}}],["count).subscribe",{"_index":592,"title":{},"body":{"components/CartComponent.html":{}}}],["count:number):void",{"_index":590,"title":{},"body":{"components/CartComponent.html":{}}}],["coverage",{"_index":1640,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdat",{"_index":284,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["createnoderequesthandler(app",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creation",{"_index":729,"title":{},"body":{"components/ChatComponent.html":{}}}],["css",{"_index":855,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["currency",{"_index":594,"title":{},"body":{"components/CartComponent.html":{}}}],["currencypipe",{"_index":530,"title":{},"body":{"components/CartComponent.html":{}}}],["current",{"_index":904,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{}}}],["currentlang",{"_index":1300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentlang(lang",{"_index":1316,"title":{},"body":{"components/NavbarComponent.html":{}}}],["currentpage",{"_index":1430,"title":{},"body":{"components/ProductsComponent.html":{}}}],["currenttheme",{"_index":845,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["currenttime",{"_index":484,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["customer",{"_index":84,"title":{},"body":{"components/AllordersComponent.html":{}}}],["custommainslider",{"_index":1128,"title":{},"body":{"components/HomeComponent.html":{}}}],["customoptions",{"_index":1129,"title":{},"body":{"components/HomeComponent.html":{}}}],["d33",{"_index":573,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["danger",{"_index":1509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dark",{"_index":863,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["dark)').matches",{"_index":924,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["dark:text",{"_index":1380,"title":{},"body":{"components/NavbarComponent.html":{}}}],["darkthemeselectorservice",{"_index":842,"title":{"injectables/DarkThemeSelectorService.html":{}},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["data",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"guards/DetailsResolver.html":{},"injectables/OrdersService.html":{}}}],["date.now",{"_index":485,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["date:'mm/dd/yyyy",{"_index":684,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["date:\\'mm/dd/yyyy",{"_index":687,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["datepipe",{"_index":657,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["decode",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decoded",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoding",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":1322,"title":{},"body":{"components/NavbarComponent.html":{}}}],["default",{"_index":38,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["delete",{"_index":576,"title":{},"body":{"components/CartComponent.html":{}}}],["deleted",{"_index":583,"title":{},"body":{"components/CartComponent.html":{}}}],["delivered",{"_index":93,"title":{},"body":{"components/AllordersComponent.html":{}}}],["deny",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":1705,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/FlowbiteService.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"injectables/WishlistService.html":{},"miscellaneous/functions.html":{}}}],["desktop",{"_index":1338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["detailed",{"_index":1809,"title":{},"body":{"index.html":{}}}],["details",{"_index":287,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"interfaces/IallOrders.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"injectables/ProductsService.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["details'},{'name",{"_index":130,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["details.component.html",{"_index":926,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":927,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailscomponent",{"_index":129,"title":{"components/DetailsComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["detailsproduct",{"_index":928,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.brand?.name",{"_index":973,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.category?.name",{"_index":972,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.description",{"_index":967,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.price",{"_index":963,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.quantity",{"_index":969,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.ratingsaverage",{"_index":964,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.ratingsquantity",{"_index":965,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.sold",{"_index":962,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsproduct()?.title",{"_index":960,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsresolver",{"_index":977,"title":{"guards/DetailsResolver.html":{}},"body":{"guards/DetailsResolver.html":{},"coverage.html":{}}}],["dev",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":1760,"title":{},"body":{"index.html":{}}}],["device",{"_index":882,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["devices",{"_index":1035,"title":{},"body":{"components/FooterComponent.html":{}}}],["dir",{"_index":1284,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["direction",{"_index":1250,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["directive",{"_index":104,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"index.html":{}}}],["directory",{"_index":1783,"title":{},"body":{"index.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["display",{"_index":473,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["displays",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist",{"_index":1782,"title":{},"body":{"index.html":{}}}],["document",{"_index":1249,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["document.documentelement.classlist.add(classname",{"_index":916,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["document.documentelement.classlist.remove(classname",{"_index":917,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["document.getelementbyid('dropdownnavbar",{"_index":1360,"title":{},"body":{"components/NavbarComponent.html":{}}}],["documentation",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["dolor",{"_index":344,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["don't",{"_index":884,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["dots",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{}}}],["download",{"_index":1047,"title":{},"body":{"components/FooterComponent.html":{}}}],["dropdown",{"_index":1359,"title":{},"body":{"components/NavbarComponent.html":{}}}],["during",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1001,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["e.g",{"_index":1262,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["e2e",{"_index":1797,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":1799,"title":{},"body":{"index.html":{}}}],["ease",{"_index":516,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["ecommerceapp",{"_index":1755,"title":{},"body":{"index.html":{}}}],["egp",{"_index":494,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["egyptian",{"_index":779,"title":{},"body":{"components/ChatComponent.html":{}}}],["element",{"_index":103,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["elit",{"_index":349,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["email",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"components/ChatComponent.html":{},"components/ForgotpasswordComponent.html":{},"interfaces/IallOrders.html":{},"components/LoginComponent.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["emailcontrol",{"_index":769,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol?.errors",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol?.haserror('email",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol?.haserror('required",{"_index":771,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol?.haserror(\\'email",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol?.haserror(\\'required",{"_index":785,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailcontrol?.touched",{"_index":772,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["emailvalue",{"_index":1098,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["emit",{"_index":1581,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["emitter",{"_index":1578,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["empty",{"_index":602,"title":{},"body":{"components/CartComponent.html":{},"pipes/SearchPipe.html":{}}}],["en",{"_index":1263,"title":{},"body":{"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1796,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["english",{"_index":1264,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["enjoy",{"_index":1042,"title":{},"body":{"components/FooterComponent.html":{}}}],["enum",{"_index":879,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["enumerations",{"_index":1735,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl}/api/v1/orders/${id",{"_index":1423,"title":{},"body":{"injectables/OrdersService.html":{}}}],["environment.baseurl}/api/v1/orders/checkout",{"_index":1421,"title":{},"body":{"injectables/OrdersService.html":{}}}],["environment.baseurl}/api/v1/orders/user/${id",{"_index":1425,"title":{},"body":{"injectables/OrdersService.html":{}}}],["environment/environment",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["err",{"_index":336,"title":{},"body":{"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishlistComponent.html":{}}}],["err.error.message",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["err:httperrorresponse",{"_index":1216,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":451,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["error:(err",{"_index":77,"title":{},"body":{"components/AllordersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{}}}],["errorsinterceptor",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eveniet",{"_index":356,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["event",{"_index":404,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/SearchInputComponent.html":{}}}],["event.clienty",{"_index":470,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["eventcoalescing",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":1565,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["events",{"_index":505,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["example",{"_index":1762,"title":{},"body":{"index.html":{}}}],["except",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["execute",{"_index":1007,"title":{},"body":{"injectables/FlowbiteService.html":{},"index.html":{}}}],["exist",{"_index":976,"title":{},"body":{"components/DetailsComponent.html":{}}}],["exists",{"_index":1278,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["express",{"_index":1720,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extract",{"_index":453,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["fa",{"_index":1337,"title":{},"body":{"components/NavbarComponent.html":{}}}],["factory",{"_index":1740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":724,"title":{},"body":{"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["fas",{"_index":1336,"title":{},"body":{"components/NavbarComponent.html":{}}}],["favorite",{"_index":1623,"title":{},"body":{"components/WishlistComponent.html":{}}}],["features",{"_index":971,"title":{},"body":{"components/DetailsComponent.html":{}}}],["fetch",{"_index":370,"title":{},"body":{"injectables/BrandsService.html":{},"injectables/CategoriseService.html":{},"injectables/ProductsService.html":{}}}],["fetched",{"_index":1415,"title":{},"body":{"injectables/OrdersService.html":{}}}],["fetches",{"_index":364,"title":{},"body":{"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CategoriseService.html":{},"guards/DetailsResolver.html":{}}}],["fields",{"_index":759,"title":{},"body":{"components/ChatComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["files",{"_index":1745,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["filter",{"_index":1598,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["finalize",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finalized",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fixed",{"_index":498,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["floatup",{"_index":514,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["flowbite",{"_index":999,"title":{},"body":{"injectables/FlowbiteService.html":{},"dependencies.html":{}}}],["flowbiteloaded",{"_index":1301,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flowbiteservice",{"_index":992,"title":{"injectables/FlowbiteService.html":{}},"body":{"injectables/FlowbiteService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["flyonui",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["follow",{"_index":868,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["following",{"_index":1793,"title":{},"body":{"index.html":{}}}],["footer",{"_index":1020,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":132,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["footer.component.html",{"_index":1021,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1022,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":173,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["footercomponent",{"_index":131,"title":{"components/FooterComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["forgotpassword",{"_index":1060,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword'},{'name",{"_index":134,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["forgotpassword.back_to_login",{"_index":1110,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.back_to_login'|translate",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forgotpassword.back_to_login\\'|translate",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forgotpassword.code",{"_index":1114,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.component.html",{"_index":1061,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.component.scss",{"_index":1062,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.confirm",{"_index":1118,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.confirm_code",{"_index":1115,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.email",{"_index":1116,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.forgot_password",{"_index":1108,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.new_password",{"_index":1117,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.reset_password",{"_index":1113,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpasswordcomponent",{"_index":133,"title":{"components/ForgotpasswordComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["form",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":701,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol",{"_index":1090,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formcontrol(null",{"_index":1076,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["formgroup",{"_index":714,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":1125,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["forwards",{"_index":517,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["found",{"_index":974,"title":{},"body":{"components/DetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":1801,"title":{},"body":{"index.html":{}}}],["freash",{"_index":1056,"title":{},"body":{"components/FooterComponent.html":{}}}],["free",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["fresh",{"_index":761,"title":{},"body":{"components/ChatComponent.html":{}}}],["freshcart",{"_index":1041,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{}}}],["friday",{"_index":1027,"title":{},"body":{"components/FooterComponent.html":{}}}],["fugiat",{"_index":353,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["function",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"components/CardForOrdersComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/FlowbiteService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1737,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":472,"title":{},"body":{"components/CardForOrdersComponent.html":{},"index.html":{}}}],["generated",{"_index":1757,"title":{},"body":{"index.html":{}}}],["getallbrands",{"_index":318,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/BrandsService.html":{}}}],["getallbrands():void",{"_index":332,"title":{},"body":{"components/BrandsComponent.html":{}}}],["getallcategories",{"_index":661,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/HomeComponent.html":{}}}],["getallcategories():void",{"_index":675,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["getallproducts",{"_index":1131,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{}}}],["getallproducts():void",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["getalluserorders",{"_index":28,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/OrdersService.html":{}}}],["getalluserorders():void",{"_index":71,"title":{},"body":{"components/AllordersComponent.html":{}}}],["getalluserorders(id",{"_index":1411,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getcartdata",{"_index":537,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartdata():void",{"_index":557,"title":{},"body":{"components/CartComponent.html":{}}}],["getcartid",{"_index":794,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getcartid():void",{"_index":818,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["getloggedusercart",{"_index":619,"title":{},"body":{"injectables/CartService.html":{}}}],["getorderscash",{"_index":1402,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getorderscash(id",{"_index":1416,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getproductdetails",{"_index":931,"title":{},"body":{"components/DetailsComponent.html":{}}}],["getsortedproducts",{"_index":1448,"title":{},"body":{"components/ProductsComponent.html":{}}}],["getspecificbrands",{"_index":361,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getspecificbrands(id",{"_index":367,"title":{},"body":{"injectables/BrandsService.html":{}}}],["getspecificcategories",{"_index":662,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{}}}],["getspecificcategories(id",{"_index":664,"title":{},"body":{"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{}}}],["getspecificcategories(id:string):void",{"_index":678,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["getspecificproducts",{"_index":1465,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getspecificproducts(id",{"_index":1469,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":1753,"title":{"index.html":{}},"body":{}}],["getuserid",{"_index":29,"title":{},"body":{"components/AllordersComponent.html":{}}}],["getuserid():void",{"_index":65,"title":{},"body":{"components/AllordersComponent.html":{}}}],["getwishlist",{"_index":1607,"title":{},"body":{"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["github",{"_index":1120,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["go",{"_index":829,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["gray",{"_index":1379,"title":{},"body":{"components/NavbarComponent.html":{}}}],["group",{"_index":1481,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group.get('password')?.value",{"_index":1498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["group.get('repassword')?.value",{"_index":1499,"title":{},"body":{"components/RegisterComponent.html":{}}}],["guard",{"_index":603,"title":{"guards/CartResolver.html":{},"guards/DetailsResolver.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":605,"title":{},"body":{"guards/CartResolver.html":{},"guards/DetailsResolver.html":{},"overview.html":{}}}],["h",{"_index":503,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["h.id",{"_index":488,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["handled",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":744,"title":{},"body":{"components/ChatComponent.html":{}}}],["happens",{"_index":899,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["header",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headers",{"_index":649,"title":{},"body":{"injectables/CartService.html":{},"miscellaneous/variables.html":{}}}],["headersinterceptor",{"_index":1661,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["heart",{"_index":428,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["hearts",{"_index":382,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["helpbuilding",{"_index":1777,"title":{},"body":{"index.html":{}}}],["hide",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holds",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["home",{"_index":1122,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":136,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["home.categories'|translate",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.categories\\'|translate",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1126,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1127,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.popular_products'|translate",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["home.popular_products\\'|translate",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["homecomponent",{"_index":135,"title":{"components/HomeComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["hostlistener",{"_index":1343,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hostlistener('window:scroll",{"_index":1323,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hostlisteners",{"_index":1306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["html",{"_index":102,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["http",{"_index":1750,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":1765,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["httpinterceptorfn",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":1679,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":1739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://ecommerce.routemisr.com",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iallorders",{"_index":43,"title":{"interfaces/IallOrders.html":{}},"body":{"components/AllordersComponent.html":{},"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["ibrand",{"_index":327,"title":{"interfaces/IBrand.html":{}},"body":{"components/BrandsComponent.html":{},"interfaces/IBrand.html":{},"coverage.html":{}}}],["icart",{"_index":300,"title":{"interfaces/ICart.html":{}},"body":{"interfaces/Brand-1.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["icategory",{"_index":670,"title":{"interfaces/Icategory.html":{}},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Icategory.html":{},"coverage.html":{}}}],["icon",{"_index":566,"title":{},"body":{"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/NavbarComponent.html":{},"components/WishlistComponent.html":{}}}],["id",{"_index":63,"title":{},"body":{"components/AllordersComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"injectables/ProductsService.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":430,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["if(localstorage.getitem('usertoken",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(req.url.includes('cart",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(res.message",{"_index":587,"title":{},"body":{"components/CartComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(res.status",{"_index":825,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{}}}],["if(res.statusmsg",{"_index":1095,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["if(this.loginform.valid",{"_index":1207,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.registerform.valid",{"_index":1501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["image",{"_index":271,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/DetailsComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["imagecover",{"_index":295,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["images",{"_index":309,"title":{},"body":{"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["img",{"_index":941,"title":{},"body":{"components/DetailsComponent.html":{}}}],["implements",{"_index":528,"title":{},"body":{"components/CartComponent.html":{},"guards/CartResolver.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["import('flowbite').then(flowbite",{"_index":1015,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["importprovidersfrom(paginationcontrolscomponent",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":14,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["includes",{"_index":1600,"title":{},"body":{"pipes/SearchPipe.html":{},"index.html":{}}}],["including",{"_index":1808,"title":{},"body":{"index.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":730,"title":{},"body":{"components/ChatComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["information",{"_index":1410,"title":{},"body":{"injectables/OrdersService.html":{},"index.html":{}}}],["initform",{"_index":795,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["initform():void",{"_index":814,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["initializes",{"_index":433,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["initiates",{"_index":1406,"title":{},"body":{"injectables/OrdersService.html":{}}}],["inject",{"_index":50,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["inject(activatedroute",{"_index":40,"title":{},"body":{"components/AllordersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{}}}],["inject(authservice",{"_index":1074,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(brandsservice",{"_index":324,"title":{},"body":{"components/BrandsComponent.html":{}}}],["inject(cartservice",{"_index":407,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/NavbarComponent.html":{},"components/WishlistComponent.html":{}}}],["inject(categoriseservice",{"_index":668,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["inject(formbuilder",{"_index":722,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["inject(mytranslateservice",{"_index":1333,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inject(ngxspinnerservice",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(ordersservice",{"_index":45,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["inject(platform_id",{"_index":1271,"title":{},"body":{"injectables/MytranslateService.html":{},"miscellaneous/variables.html":{}}}],["inject(productsservice",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["inject(rendererfactory2).createrenderer(null",{"_index":1267,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["inject(router",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(toastrservice",{"_index":410,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(translateservice",{"_index":1340,"title":{},"body":{"components/NavbarComponent.html":{}}}],["inject(wishlistservice",{"_index":413,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["injectable",{"_index":175,"title":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"coverage.html":{}}}],["injectables",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"overview.html":{}}}],["injecting",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"components/CardForOrdersComponent.html":{},"components/ChatComponent.html":{}}}],["input",{"_index":415,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{}}}],["input'},{'name",{"_index":149,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["input(true",{"_index":1352,"title":{},"body":{"components/NavbarComponent.html":{}}}],["input.component",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["input.component.html",{"_index":1559,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.scss",{"_index":1560,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts",{"_index":1558,"title":{},"body":{"components/SearchInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:13",{"_index":1568,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:15",{"_index":1566,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input.component.ts:18",{"_index":1567,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["input/search",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/SearchInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":391,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/NavbarComponent.html":{}}}],["inputsignal",{"_index":1310,"title":{},"body":{"components/NavbarComponent.html":{}}}],["insensitive",{"_index":1595,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["instance",{"_index":1017,"title":{},"body":{"injectables/FlowbiteService.html":{},"miscellaneous/functions.html":{}}}],["interceptor",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":266,"title":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":268,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/iproduct",{"_index":419,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["iproduct",{"_index":307,"title":{"interfaces/Iproduct.html":{}},"body":{"interfaces/Brand-2.html":{},"components/CardForOrdersComponent.html":{},"interfaces/Category-2.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"components/HomeComponent.html":{},"interfaces/Iproduct.html":{},"components/ProductsComponent.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["ipsum",{"_index":343,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["ischatopen",{"_index":702,"title":{},"body":{"components/ChatComponent.html":{}}}],["isdelivered",{"_index":281,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["isiteminwishlist",{"_index":387,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["isiteminwishlist(id",{"_index":395,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["isloading",{"_index":703,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["islogin",{"_index":1295,"title":{},"body":{"components/NavbarComponent.html":{}}}],["islogin:inputsignal",{"_index":1351,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ispaid",{"_index":279,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["isplatformbrowser",{"_index":1011,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{}}}],["isplatformbrowser(id",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isplatformbrowser(this.id",{"_index":1272,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1014,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["isscrolled",{"_index":1296,"title":{},"body":{"components/NavbarComponent.html":{}}}],["issystemdark",{"_index":914,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["item",{"_index":94,"title":{},"body":{"components/AllordersComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/WishlistComponent.html":{}}}],["item._id",{"_index":96,"title":{},"body":{"components/AllordersComponent.html":{}}}],["item.count",{"_index":99,"title":{},"body":{"components/AllordersComponent.html":{}}}],["item.price",{"_index":100,"title":{},"body":{"components/AllordersComponent.html":{}}}],["item.product.title",{"_index":97,"title":{},"body":{"components/AllordersComponent.html":{}}}],["item?.title?.tolowercase().includes(lowercasesearchvalue",{"_index":1602,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["items",{"_index":432,"title":{},"body":{"components/CardForOrdersComponent.html":{},"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["itemsperpage",{"_index":1431,"title":{},"body":{"components/ProductsComponent.html":{}}}],["iwishlist",{"_index":312,"title":{"interfaces/Iwishlist.html":{}},"body":{"interfaces/Brand-3.html":{},"interfaces/Category-3.html":{},"interfaces/Iwishlist.html":{},"interfaces/Subcategory-3.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["jwt",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwtdecode",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtdecode(token",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":1790,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1622,"title":{},"body":{"components/WishlistComponent.html":{}}}],["key",{"_index":970,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProductsComponent.html":{}}}],["keyframes",{"_index":518,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["keyof",{"_index":1457,"title":{},"body":{"components/ProductsComponent.html":{}}}],["kindly",{"_index":777,"title":{},"body":{"components/ChatComponent.html":{}}}],["l.e",{"_index":595,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{}}}],["lang",{"_index":1261,"title":{},"body":{"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{}}}],["language",{"_index":1252,"title":{},"body":{"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{}}}],["laptop",{"_index":1033,"title":{},"body":{"components/FooterComponent.html":{}}}],["layout",{"_index":170,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout'},{'name",{"_index":113,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["layout.component.html",{"_index":171,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.scss",{"_index":172,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["layout.component.ts",{"_index":169,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["layout/auth",{"_index":168,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["layout/blank",{"_index":265,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["leave",{"_index":902,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["left",{"_index":500,"title":{},"body":{"components/CardForOrdersComponent.html":{},"injectables/MytranslateService.html":{}}}],["legend",{"_index":101,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["library",{"_index":1003,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["light",{"_index":866,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["list",{"_index":366,"title":{},"body":{"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"index.html":{}}}],["listener",{"_index":1384,"title":{},"body":{"components/NavbarComponent.html":{}}}],["load",{"_index":431,"title":{},"body":{"components/CardForOrdersComponent.html":{},"miscellaneous/functions.html":{}}}],["loadcurrenttheme",{"_index":1302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loaded",{"_index":1009,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loader",{"_index":1373,"title":{},"body":{"components/NavbarComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loadflowbite",{"_index":994,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadflowbite(callback",{"_index":998,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loading",{"_index":458,"title":{},"body":{"components/CardForOrdersComponent.html":{},"guards/CartResolver.html":{},"components/ChatComponent.html":{},"guards/DetailsResolver.html":{},"miscellaneous/variables.html":{}}}],["loadinginterceptor",{"_index":1664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":1002,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["loadwishlist",{"_index":388,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["local",{"_index":645,"title":{},"body":{"injectables/CartService.html":{},"index.html":{}}}],["localstorage",{"_index":861,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem('lang",{"_index":1276,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["localstorage.getitem('usertoken",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"miscellaneous/variables.html":{}}}],["localstorage.getitem(ls_theme",{"_index":903,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["localstorage.removeitem('usertoken",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(ls_theme",{"_index":919,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["localstorage.setitem('lang",{"_index":1286,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["localstorage.setitem('usertoken",{"_index":1104,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem(ls_theme",{"_index":918,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["logedguard",{"_index":1657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":630,"title":{},"body":{"injectables/CartService.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":138,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["login.component.html",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.email",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.forgot_password",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.login",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.password",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.sign_in",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":137,"title":{"components/LoginComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform:formgroup",{"_index":1206,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logs",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":975,"title":{},"body":{"components/DetailsComponent.html":{}}}],["loop",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{}}}],["lorem",{"_index":342,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["lowercase",{"_index":1594,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["lowercasesearchvalue",{"_index":1596,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["ls_theme",{"_index":894,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ltr",{"_index":1285,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["ltr/rtl",{"_index":1251,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["made",{"_index":1413,"title":{},"body":{"injectables/OrdersService.html":{}}}],["main",{"_index":953,"title":{},"body":{"components/DetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["mainimage",{"_index":954,"title":{},"body":{"components/DetailsComponent.html":{}}}],["make",{"_index":1751,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manage",{"_index":1621,"title":{},"body":{"components/WishlistComponent.html":{}}}],["manipulation",{"_index":1270,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["matches",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxime",{"_index":351,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["maxx",{"_index":479,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["maxy",{"_index":482,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["means",{"_index":883,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["menu",{"_index":1388,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":720,"title":{},"body":{"components/ChatComponent.html":{},"miscellaneous/variables.html":{}}}],["messages.must_be_a_valid_egyptian_phone_number'|translate",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_a_valid_egyptian_phone_number\\'|translate",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_a_valid_email",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{}}}],["messages.must_be_a_valid_email_address'|translate",{"_index":1517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_a_valid_email_address\\'|translate",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_at_least_3_characters_long'|translate",{"_index":1512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_at_least_3_characters_long\\'|translate",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["messages.must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number'|translate",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number\\'|translate",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_at_most_20_characters_long'|translate",{"_index":1514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.must_be_at_most_20_characters_long\\'|translate",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.passwords_must_match'|translate",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.passwords_must_match\\'|translate",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.please_include_a_valid_email_address_so_we_can_get_back_to_you",{"_index":1112,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["messages.remember_your_password",{"_index":1109,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["messages.this_field_is_required",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["messages.this_field_is_required'|translate",{"_index":1510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["messages.this_field_is_required\\'|translate",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{}}}],["method",{"_index":87,"title":{},"body":{"components/AllordersComponent.html":{},"guards/CartResolver.html":{},"guards/DetailsResolver.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["minx",{"_index":477,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["miny",{"_index":481,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["miscellaneous",{"_index":1734,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1482,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mismatch:true",{"_index":1500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mobile",{"_index":1034,"title":{},"body":{"components/FooterComponent.html":{}}}],["mode",{"_index":864,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"miscellaneous/functions.html":{}}}],["modify",{"_index":1769,"title":{},"body":{"index.html":{}}}],["modules",{"_index":1573,"title":{"modules.html":{}},"body":{"components/SearchInputComponent.html":{},"modules.html":{}}}],["monday",{"_index":1026,"title":{},"body":{"components/FooterComponent.html":{}}}],["moon",{"_index":1378,"title":{},"body":{"components/NavbarComponent.html":{}}}],["more",{"_index":686,"title":{},"body":{"components/CategoriesComponent.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["mousedrag",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["mouseevent",{"_index":405,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["msgerror",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["mytoken",{"_index":616,"title":{},"body":{"injectables/CartService.html":{}}}],["mytranslateservice",{"_index":1241,"title":{"injectables/MytranslateService.html":{}},"body":{"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["n",{"_index":1463,"title":{},"body":{"components/ProductsComponent.html":{}}}],["nam",{"_index":350,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["name",{"_index":107,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/functions.html":{}}}],["name/display",{"_index":768,"title":{},"body":{"components/ChatComponent.html":{}}}],["namecontrol",{"_index":764,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["namecontrol?.errors",{"_index":1508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol?.haserror('maxlength",{"_index":1513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol?.haserror('minlength",{"_index":1511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol?.haserror('required",{"_index":766,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["namecontrol?.haserror(\\'maxlength",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol?.haserror(\\'minlength",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namecontrol?.haserror(\\'required",{"_index":783,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["namecontrol?.touched",{"_index":767,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["namefor",{"_index":1773,"title":{},"body":{"index.html":{}}}],["nav",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["navbar",{"_index":1290,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":140,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["navbar.brands",{"_index":1392,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.categories",{"_index":1391,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1292,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1293,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.home",{"_index":1389,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.login",{"_index":1394,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.products",{"_index":1390,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.register",{"_index":1393,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":174,"title":{},"body":{"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["navbarcomponent",{"_index":139,"title":{"components/NavbarComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["navspeed",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{}}}],["navtext",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{}}}],["necessary",{"_index":1571,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["need",{"_index":885,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["needs",{"_index":1805,"title":{},"body":{"index.html":{}}}],["new",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/SearchInputComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newcount",{"_index":636,"title":{},"body":{"injectables/CartService.html":{}}}],["newpassword",{"_index":1077,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["next",{"_index":439,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["next(req",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe(catcherror((err",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next:(param",{"_index":67,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["next:(res",{"_index":73,"title":{},"body":{"components/AllordersComponent.html":{},"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["ng",{"_index":1763,"title":{},"body":{"index.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/WishlistComponent.html":{}}}],["ngx",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["ngxpaginationmodule",{"_index":1427,"title":{},"body":{"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["ngxspinnercomponent",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["ngxspinnermodule",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.hide",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngxspinnerservice.show",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["none",{"_index":506,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/NavbarComponent.html":{}}}],["notfound",{"_index":1396,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound'},{'name",{"_index":142,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["notfound.component.html",{"_index":1397,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfound.component.scss",{"_index":1398,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["notfoundcomponent",{"_index":141,"title":{"components/NotfoundComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["notification",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notify",{"_index":1579,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["now",{"_index":1048,"title":{},"body":{"components/FooterComponent.html":{}}}],["null",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/MytranslateService.html":{},"components/RegisterComponent.html":{}}}],["null,[validators.required",{"_index":1491,"title":{},"body":{"components/RegisterComponent.html":{}}}],["number",{"_index":275,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/ForgotpasswordComponent.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["numhearts",{"_index":474,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["o",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["object",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":429,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["observable",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"guards/DetailsResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["once",{"_index":1008,"title":{},"body":{"injectables/FlowbiteService.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":1803,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":529,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishlistComponent.html":{}}}],["online",{"_index":762,"title":{},"body":{"components/ChatComponent.html":{},"components/FooterComponent.html":{}}}],["onsearchchange",{"_index":1562,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["onsearchinputchange",{"_index":1132,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["onsearchinputchange(query",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["onwindowscroll",{"_index":1303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["opacity",{"_index":512,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["open",{"_index":1387,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["open(res.session.url",{"_index":826,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["open/close",{"_index":742,"title":{},"body":{"components/ChatComponent.html":{}}}],["optimizes",{"_index":1785,"title":{},"body":{"index.html":{}}}],["optional",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":79,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/OrdersService.html":{}}}],["order.cartitems",{"_index":95,"title":{},"body":{"components/AllordersComponent.html":{}}}],["order.id",{"_index":81,"title":{},"body":{"components/AllordersComponent.html":{}}}],["order.isdelivered",{"_index":92,"title":{},"body":{"components/AllordersComponent.html":{}}}],["order.ispaid",{"_index":82,"title":{},"body":{"components/AllordersComponent.html":{}}}],["order.paymentmethodtype",{"_index":88,"title":{},"body":{"components/AllordersComponent.html":{}}}],["order.totalorderprice",{"_index":91,"title":{},"body":{"components/AllordersComponent.html":{}}}],["order.user.name",{"_index":85,"title":{},"body":{"components/AllordersComponent.html":{}}}],["orders",{"_index":70,"title":{},"body":{"components/AllordersComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{},"miscellaneous/variables.html":{}}}],["orders'},{'name",{"_index":120,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["orders.component",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["orders.component.html",{"_index":380,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.scss",{"_index":379,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts",{"_index":376,"title":{},"body":{"components/CardForOrdersComponent.html":{},"coverage.html":{}}}],["orders.component.ts:17",{"_index":408,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:18",{"_index":411,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:19",{"_index":414,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:22",{"_index":392,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:25",{"_index":409,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:28",{"_index":412,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:30",{"_index":398,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:36",{"_index":394,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:55",{"_index":397,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:66",{"_index":396,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:71",{"_index":406,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders.component.ts:91",{"_index":401,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["orders/card",{"_index":375,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"coverage.html":{}}}],["ordersservice",{"_index":25,"title":{"injectables/OrdersService.html":{}},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["original",{"_index":1590,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["otherwise",{"_index":922,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["out",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"components/CardForOrdersComponent.html":{}}}],["output",{"_index":1569,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["outputs",{"_index":1563,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["overview",{"_index":1812,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owl",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["owloptions",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{}}}],["package",{"_index":1704,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MytranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pages",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paginatepipe",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination",{"_index":1450,"title":{},"body":{"components/ProductsComponent.html":{},"dependencies.html":{}}}],["paid",{"_index":83,"title":{},"body":{"components/AllordersComponent.html":{}}}],["param",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["param.get('id",{"_index":69,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["parameters",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/HomeComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":424,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/SearchInputComponent.html":{}}}],["pass",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol?.errors",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol?.haserror('pattern",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol?.haserror('required",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol?.haserror(\\'pattern",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol?.haserror(\\'required",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordcontrol?.touched",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":1747,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pay",{"_index":841,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["paylater",{"_index":796,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["paylater():void",{"_index":830,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["payment",{"_index":86,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{},"injectables/OrdersService.html":{}}}],["paymentmethodtype",{"_index":278,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["performance",{"_index":1786,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1037,"title":{},"body":{"components/FooterComponent.html":{}}}],["phone",{"_index":289,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"components/RegisterComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["phonecontrol",{"_index":773,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["phonecontrol?.errors",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonecontrol?.haserror('pattern",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonecontrol?.haserror('required",{"_index":775,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["phonecontrol?.haserror(\\'pattern",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["phonecontrol?.haserror(\\'required",{"_index":787,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["phonecontrol?.touched",{"_index":776,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["pickup",{"_index":1044,"title":{},"body":{"components/FooterComponent.html":{}}}],["pipe",{"_index":1583,"title":{"pipes/SearchPipe.html":{}},"body":{"pipes/SearchPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":1584,"title":{},"body":{"pipes/SearchPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":1589,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["placed",{"_index":1419,"title":{},"body":{"injectables/OrdersService.html":{}}}],["places",{"_index":1418,"title":{},"body":{"injectables/OrdersService.html":{}}}],["plan",{"_index":1624,"title":{},"body":{"components/WishlistComponent.html":{}}}],["platform",{"_index":1005,"title":{},"body":{"injectables/FlowbiteService.html":{},"miscellaneous/variables.html":{}}}],["platform_id",{"_index":1010,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{}}}],["platformid",{"_index":997,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["pointer",{"_index":504,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["policy",{"_index":1052,"title":{},"body":{"components/FooterComponent.html":{}}}],["powerful",{"_index":1771,"title":{},"body":{"index.html":{}}}],["preference",{"_index":860,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{}}}],["preferences",{"_index":887,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["prefers",{"_index":921,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"miscellaneous/functions.html":{}}}],["prefix",{"_index":1748,"title":{},"body":{"miscellaneous/functions.html":{}}}],["previously",{"_index":895,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["price",{"_index":90,"title":{},"body":{"components/AllordersComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["privacy",{"_index":1051,"title":{},"body":{"components/FooterComponent.html":{}}}],["private",{"_index":22,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["processed",{"_index":1408,"title":{},"body":{"injectables/OrdersService.html":{}}}],["prod",{"_index":489,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["prod.category.name",{"_index":491,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["prod.count",{"_index":600,"title":{},"body":{"components/CartComponent.html":{}}}],["prod.id",{"_index":490,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["prod.price",{"_index":493,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["prod.product.category.name",{"_index":599,"title":{},"body":{"components/CartComponent.html":{}}}],["prod.product.id",{"_index":597,"title":{},"body":{"components/CartComponent.html":{}}}],["prod.product.title",{"_index":598,"title":{},"body":{"components/CartComponent.html":{}}}],["prod.ratingsaverage",{"_index":495,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["prod.title",{"_index":492,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["prod.title.split",{"_index":1626,"title":{},"body":{"components/WishlistComponent.html":{}}}],["product",{"_index":291,"title":{"interfaces/Product.html":{},"interfaces/Product-1.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"components/CardForOrdersComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"injectables/ProductsService.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{}}}],["product.id",{"_index":456,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["product2",{"_index":304,"title":{"interfaces/Product2.html":{}},"body":{"interfaces/Brand-1.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["productid",{"_index":648,"title":{},"body":{"injectables/CartService.html":{},"injectables/WishlistService.html":{}}}],["productimages",{"_index":929,"title":{},"body":{"components/DetailsComponent.html":{}}}],["production",{"_index":1784,"title":{},"body":{"index.html":{}}}],["products",{"_index":302,"title":{},"body":{"interfaces/Brand-1.html":{},"components/CardForOrdersComponent.html":{},"interfaces/Category-1.html":{},"components/HomeComponent.html":{},"interfaces/ICart.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"interfaces/Subcategory-1.html":{},"injectables/WishlistService.html":{}}}],["products'},{'name",{"_index":144,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["products.component.html",{"_index":1428,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products.component.scss",{"_index":1429,"title":{},"body":{"components/ProductsComponent.html":{}}}],["products:writablesignal",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["productscomponent",{"_index":143,"title":{"components/ProductsComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["productservice",{"_index":982,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["productsservice",{"_index":980,"title":{"injectables/ProductsService.html":{}},"body":{"guards/DetailsResolver.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["progressbar",{"_index":448,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["project",{"_index":1756,"title":{},"body":{"index.html":{}}}],["propagate",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"properties.html":{}}}],["property",{"_index":422,"title":{},"body":{"components/CardForOrdersComponent.html":{},"pipes/SearchPipe.html":{}}}],["protected",{"_index":1349,"title":{},"body":{"components/NavbarComponent.html":{}}}],["provide",{"_index":778,"title":{},"body":{"components/ChatComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1016,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["providedin",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["providehttpclient(withfetch",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetoastr",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pulldrag",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{}}}],["purchases",{"_index":1625,"title":{},"body":{"components/WishlistComponent.html":{}}}],["purpose",{"_index":886,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["quantity",{"_index":98,"title":{},"body":{"components/AllordersComponent.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"injectables/CartService.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["quas",{"_index":352,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["query",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["quia",{"_index":357,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["ratings",{"_index":1462,"title":{},"body":{"components/ProductsComponent.html":{}}}],["ratingsaverage",{"_index":297,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["ratingsquantity",{"_index":293,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["reactive",{"_index":733,"title":{},"body":{"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{}}}],["reactiveformsmodule",{"_index":697,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["receive",{"_index":423,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["redirect",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirecting",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["reference",{"_index":1813,"title":{},"body":{"index.html":{}}}],["references",{"_index":1810,"title":{},"body":{"index.html":{}}}],["register",{"_index":1474,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":146,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["register.component.html",{"_index":1475,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1476,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.confirm_password'|translate",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.confirm_password\\'|translate",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.email'|translate",{"_index":1515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.email\\'|translate",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.name'|translate",{"_index":1506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.name\\'|translate",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.password'|translate",{"_index":1518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.password\\'|translate",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.phone_number'|translate",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.phone_number\\'|translate",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.register'|translate",{"_index":1505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.register\\'|translate",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.sign_up'|translate",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.sign_up\\'|translate",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":145,"title":{"components/RegisterComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1477,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email",{"_index":1516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('name",{"_index":1507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('repassword')?.touched",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'name",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'repassword\\')?.touched",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.geterror('mismatch",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.geterror(\\'mismatch",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform:formgroup",{"_index":1496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":1768,"title":{},"body":{"index.html":{}}}],["remove",{"_index":461,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/DarkThemeSelectorService.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["removeclassfromhtml",{"_index":847,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["removeclassfromhtml(classname",{"_index":857,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["removed",{"_index":582,"title":{},"body":{"components/CartComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/WishlistComponent.html":{}}}],["removefromlocalstorage",{"_index":848,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["removefromwishlist",{"_index":1608,"title":{},"body":{"components/WishlistComponent.html":{}}}],["removefromwishlist(id",{"_index":1612,"title":{},"body":{"components/WishlistComponent.html":{}}}],["removeitem",{"_index":538,"title":{},"body":{"components/CartComponent.html":{}}}],["removeitem(id",{"_index":543,"title":{},"body":{"components/CartComponent.html":{}}}],["removeitem(id:string):void",{"_index":561,"title":{},"body":{"components/CartComponent.html":{}}}],["removeproductfromwishlist",{"_index":1630,"title":{},"body":{"injectables/WishlistService.html":{}}}],["removeproductfromwishlist(id",{"_index":1635,"title":{},"body":{"injectables/WishlistService.html":{}}}],["removes",{"_index":634,"title":{},"body":{"injectables/CartService.html":{},"injectables/WishlistService.html":{}}}],["removespecificcartitem",{"_index":620,"title":{},"body":{"injectables/CartService.html":{}}}],["removespecificcartitem(id",{"_index":632,"title":{},"body":{"injectables/CartService.html":{}}}],["removing",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"components/CardForOrdersComponent.html":{}}}],["render",{"_index":898,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["renderer",{"_index":710,"title":{},"body":{"components/ChatComponent.html":{},"components/DetailsComponent.html":{},"components/NavbarComponent.html":{}}}],["renderer2",{"_index":708,"title":{},"body":{"components/ChatComponent.html":{},"components/DetailsComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{}}}],["renderer2,signal",{"_index":1344,"title":{},"body":{"components/NavbarComponent.html":{}}}],["renderer:renderer2",{"_index":1348,"title":{},"body":{"components/NavbarComponent.html":{}}}],["rendererfactory2",{"_index":1268,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["rendermode",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repassword",{"_index":1490,"title":{},"body":{"components/RegisterComponent.html":{}}}],["replacing",{"_index":643,"title":{},"body":{"injectables/CartService.html":{}}}],["req",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('/cart",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('/wishlist",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('orders",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('wishlist",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reqhandler",{"_index":1700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1752,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":420,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/ChatComponent.html":{}}}],["res",{"_index":75,"title":{},"body":{"components/AllordersComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["res.data",{"_index":339,"title":{},"body":{"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"components/WishlistComponent.html":{}}}],["res.data.user",{"_index":832,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["res.message",{"_index":1215,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["res.status",{"_index":580,"title":{},"body":{"components/CartComponent.html":{}}}],["res.token",{"_index":1105,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["res['cart'].data",{"_index":560,"title":{},"body":{"components/CartComponent.html":{}}}],["researched",{"_index":1032,"title":{},"body":{"components/FooterComponent.html":{}}}],["reserved",{"_index":1058,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{}}}],["resetcode",{"_index":1084,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpassword",{"_index":1063,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpasswordsubmit",{"_index":1068,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resetpasswordsubmit():void",{"_index":1102,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["resets",{"_index":758,"title":{},"body":{"components/ChatComponent.html":{}}}],["resolve",{"_index":607,"title":{},"body":{"guards/CartResolver.html":{},"guards/DetailsResolver.html":{}}}],["resolve(route",{"_index":983,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["resolve(serverdistfolder",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolver",{"_index":951,"title":{},"body":{"components/DetailsComponent.html":{}}}],["resources",{"_index":1807,"title":{},"body":{"index.html":{}}}],["response",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/CardForOrdersComponent.html":{},"injectables/CartService.html":{},"injectables/WishlistService.html":{}}}],["response.data",{"_index":465,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["response.data.map((product",{"_index":455,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["responsive",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["result.isconfirmed",{"_index":578,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1274,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["retrieves",{"_index":629,"title":{},"body":{"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["return",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"guards/DetailsResolver.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"pipes/SearchPipe.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{}}}],["reverse",{"_index":1432,"title":{},"body":{"components/ProductsComponent.html":{}}}],["revert",{"_index":565,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["reviews",{"_index":966,"title":{},"body":{"components/DetailsComponent.html":{}}}],["right",{"_index":1282,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["rights",{"_index":1057,"title":{},"body":{"components/FooterComponent.html":{}}}],["root",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"injectables/DarkThemeSelectorService.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{}}}],["root'},{'name",{"_index":110,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["roter",{"_index":1064,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["rotter",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["route",{"_index":987,"title":{},"body":{"guards/DetailsResolver.html":{},"miscellaneous/variables.html":{}}}],["route.parammap.get('id",{"_index":989,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["router",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":377,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["routerlinkactive",{"_index":1291,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routermodule",{"_index":1604,"title":{},"body":{"components/WishlistComponent.html":{}}}],["routeroutlet",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{}}}],["routerstatesnapshot",{"_index":985,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["rtl",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MytranslateService.html":{}}}],["rules",{"_index":736,"title":{},"body":{"components/ChatComponent.html":{}}}],["run",{"_index":1761,"title":{},"body":{"index.html":{}}}],["runner",{"_index":1792,"title":{},"body":{"index.html":{}}}],["running",{"_index":1013,"title":{},"body":{"injectables/FlowbiteService.html":{},"injectables/MytranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"injectables/CategoriseService.html":{},"guards/DetailsResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"dependencies.html":{}}}],["safe",{"_index":1269,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["save",{"_index":875,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{}}}],["saved",{"_index":1255,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["savedlang",{"_index":1275,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["saves",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveuserdata",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":1770,"title":{},"body":{"index.html":{}}}],["scale(0",{"_index":526,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["scale(1",{"_index":521,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["scale(1.2",{"_index":524,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["schematics",{"_index":1775,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":871,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["screen",{"_index":502,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["scroll",{"_index":1383,"title":{},"body":{"components/NavbarComponent.html":{}}}],["scrollpositionrestoration",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":148,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{}}}],["searchchange",{"_index":1564,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["searchinputcomponent",{"_index":147,"title":{"components/SearchInputComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["searchpipe",{"_index":1124,"title":{"pipes/SearchPipe.html":{}},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"coverage.html":{}}}],["searchquery",{"_index":1130,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["searchvalue",{"_index":1561,"title":{},"body":{"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{}}}],["searchvalue.tolowercase",{"_index":1597,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["selected",{"_index":876,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"injectables/MytranslateService.html":{}}}],["selectedtheme",{"_index":896,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedthemeicon",{"_index":1297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["selector.service",{"_index":1347,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selector.service.ts",{"_index":844,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selector.service.ts:25",{"_index":878,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:30",{"_index":865,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:39",{"_index":862,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:48",{"_index":867,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:64",{"_index":854,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:75",{"_index":858,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:85",{"_index":874,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["selector.service.ts:94",{"_index":859,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["sending",{"_index":746,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendloginform",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendloginform(data",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendmessage",{"_index":705,"title":{},"body":{"components/ChatComponent.html":{}}}],["sendregesterform",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["sendregesterform(data",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["sends",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["serveonce",{"_index":1764,"title":{},"body":{"index.html":{}}}],["server",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"injectables/CategoriseService.html":{},"injectables/FlowbiteService.html":{},"injectables/WishlistService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":1648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":1701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":1652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":990,"title":{},"body":{"guards/DetailsResolver.html":{},"components/FooterComponent.html":{}}}],["services",{"_index":421,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["services/cart/cart.service",{"_index":611,"title":{},"body":{"guards/CartResolver.html":{}}}],["services/products/products.service",{"_index":988,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["session",{"_index":1407,"title":{},"body":{"injectables/OrdersService.html":{}}}],["session/${id}?url=http://localhost:4200",{"_index":1422,"title":{},"body":{"injectables/OrdersService.html":{}}}],["set",{"_index":639,"title":{},"body":{"injectables/CartService.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{}}}],["setcodeverified",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["setcodeverified(data",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["setdarktheme",{"_index":849,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["setemailverified",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemailverified(data",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["setheaders",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setlighttheme",{"_index":850,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["setmainimage",{"_index":932,"title":{},"body":{"components/DetailsComponent.html":{}}}],["setmainimage(img",{"_index":939,"title":{},"body":{"components/DetailsComponent.html":{}}}],["setresetpass",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["setresetpass(data",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["setsystemtheme",{"_index":851,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["settheme",{"_index":1304,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settheme(theme",{"_index":1324,"title":{},"body":{"components/NavbarComponent.html":{}}}],["settimeout",{"_index":1211,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["settolocalstorage",{"_index":852,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["settolocalstorage(theme",{"_index":872,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["setup",{"_index":734,"title":{},"body":{"components/ChatComponent.html":{}}}],["shared/components/ui/card",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["shared/components/ui/search",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["shared/interfaces/iallorders",{"_index":54,"title":{},"body":{"components/AllordersComponent.html":{}}}],["shared/interfaces/ibrands",{"_index":328,"title":{},"body":{"components/BrandsComponent.html":{}}}],["shared/interfaces/icart",{"_index":551,"title":{},"body":{"components/CartComponent.html":{},"guards/CartResolver.html":{}}}],["shared/interfaces/icategory",{"_index":671,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["shared/interfaces/iproduct",{"_index":948,"title":{},"body":{"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["shared/interfaces/iwishlist",{"_index":1618,"title":{},"body":{"components/WishlistComponent.html":{}}}],["shipping",{"_index":1409,"title":{},"body":{"injectables/OrdersService.html":{}}}],["shippingaddress",{"_index":273,"title":{"interfaces/ShippingAddress.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["shippingprice",{"_index":276,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["shopping",{"_index":436,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{}}}],["show",{"_index":466,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/ProductsComponent.html":{},"miscellaneous/variables.html":{}}}],["showcancelbutton",{"_index":569,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["showconfirmbutton",{"_index":750,"title":{},"body":{"components/ChatComponent.html":{}}}],["showmultiplehearts",{"_index":389,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["showmultiplehearts(x",{"_index":399,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["side",{"_index":901,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"injectables/FlowbiteService.html":{}}}],["signal",{"_index":323,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{}}}],["signal(0",{"_index":640,"title":{},"body":{"injectables/CartService.html":{}}}],["signal(1",{"_index":1439,"title":{},"body":{"components/ProductsComponent.html":{}}}],["signal(null",{"_index":944,"title":{},"body":{"components/DetailsComponent.html":{}}}],["signal(selectedtheme",{"_index":877,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["sit",{"_index":345,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["sku",{"_index":961,"title":{},"body":{"components/DetailsComponent.html":{}}}],["sky",{"_index":1381,"title":{},"body":{"components/NavbarComponent.html":{}}}],["slug",{"_index":272,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["sold",{"_index":308,"title":{},"body":{"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}}}],["soon",{"_index":749,"title":{},"body":{"components/ChatComponent.html":{}}}],["sort",{"_index":1451,"title":{},"body":{"components/ProductsComponent.html":{}}}],["sorted",{"_index":1452,"title":{},"body":{"components/ProductsComponent.html":{}}}],["sorted.sort((a",{"_index":1454,"title":{},"body":{"components/ProductsComponent.html":{}}}],["sortedproducts",{"_index":1435,"title":{},"body":{"components/ProductsComponent.html":{}}}],["sortkey",{"_index":1433,"title":{},"body":{"components/ProductsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/BlankLayoutComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"index.html":{}}}],["specific",{"_index":369,"title":{},"body":{"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"guards/DetailsResolver.html":{},"injectables/OrdersService.html":{},"injectables/ProductsService.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":1787,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":957,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dark",{"_index":1736,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../errors.interceptor.ts",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../headers.interceptor.ts",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../httploadfils.ts",{"_index":1738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loading.interceptor.ts",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../loged.guard.ts",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":1651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/environment/environment.ts",{"_index":1653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":1654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/loged.guard.ts",{"_index":1656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/errors/errors.interceptor.ts",{"_index":1658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/headers/headers.interceptor.ts",{"_index":1660,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/loading/loading.interceptor.ts",{"_index":1663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/pipes/search.pipe.ts",{"_index":1585,"title":{},"body":{"pipes/SearchPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/search.pipe.ts:9",{"_index":1587,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["src/app/core/resolvers/cartresolver/cart.resolver.ts",{"_index":606,"title":{},"body":{"guards/CartResolver.html":{},"coverage.html":{}}}],["src/app/core/resolvers/cartresolver/cart.resolver.ts:11",{"_index":609,"title":{},"body":{"guards/CartResolver.html":{}}}],["src/app/core/resolvers/cartresolver/cart.resolver.ts:15",{"_index":610,"title":{},"body":{"guards/CartResolver.html":{}}}],["src/app/core/resolvers/productresolver/details.resolver.ts",{"_index":978,"title":{},"body":{"guards/DetailsResolver.html":{},"coverage.html":{}}}],["src/app/core/resolvers/productresolver/details.resolver.ts:11",{"_index":981,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["src/app/core/resolvers/productresolver/details.resolver.ts:15",{"_index":986,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["src/app/core/services/auth/auth.service.ts",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth/auth.service.ts:12",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:17",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:20",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:27",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:36",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:43",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:54",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:67",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:76",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth/auth.service.ts:85",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/brands/brands.service.ts",{"_index":360,"title":{},"body":{"injectables/BrandsService.html":{},"coverage.html":{}}}],["src/app/core/services/brands/brands.service.ts:10",{"_index":362,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:18",{"_index":363,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/brands/brands.service.ts:27",{"_index":368,"title":{},"body":{"injectables/BrandsService.html":{}}}],["src/app/core/services/cart/cart.service.ts",{"_index":614,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/core/services/cart/cart.service.ts:10",{"_index":622,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:15",{"_index":641,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:18",{"_index":642,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:25",{"_index":624,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:42",{"_index":628,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:57",{"_index":633,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:71",{"_index":626,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/cart/cart.service.ts:81",{"_index":637,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/core/services/categorise/categorise.service.ts",{"_index":688,"title":{},"body":{"injectables/CategoriseService.html":{},"coverage.html":{}}}],["src/app/core/services/categorise/categorise.service.ts:10",{"_index":689,"title":{},"body":{"injectables/CategoriseService.html":{}}}],["src/app/core/services/categorise/categorise.service.ts:18",{"_index":690,"title":{},"body":{"injectables/CategoriseService.html":{}}}],["src/app/core/services/categorise/categorise.service.ts:27",{"_index":692,"title":{},"body":{"injectables/CategoriseService.html":{}}}],["src/app/core/services/darkmood/dark",{"_index":843,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts",{"_index":993,"title":{},"body":{"injectables/FlowbiteService.html":{},"coverage.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:14",{"_index":1000,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/flowbite/flowbite.service.ts:7",{"_index":996,"title":{},"body":{"injectables/FlowbiteService.html":{}}}],["src/app/core/services/mytranslate/mytranslate.service.ts",{"_index":1242,"title":{},"body":{"injectables/MytranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/mytranslate/mytranslate.service.ts:11",{"_index":1247,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["src/app/core/services/mytranslate/mytranslate.service.ts:40",{"_index":1248,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["src/app/core/services/mytranslate/mytranslate.service.ts:57",{"_index":1257,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["src/app/core/services/orders/orders.service.ts",{"_index":1400,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/app/core/services/orders/orders.service.ts:10",{"_index":1403,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:21",{"_index":1405,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:35",{"_index":1417,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/orders/orders.service.ts:48",{"_index":1412,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/core/services/products/products.service.ts",{"_index":1464,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/app/core/services/products/products.service.ts:10",{"_index":1466,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:19",{"_index":1467,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/products/products.service.ts:29",{"_index":1470,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts",{"_index":1628,"title":{},"body":{"injectables/WishlistService.html":{},"coverage.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:19",{"_index":1633,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:31",{"_index":1636,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:40",{"_index":1634,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/services/wishlist/wishlist.service.ts:9",{"_index":1631,"title":{},"body":{"injectables/WishlistService.html":{}}}],["src/app/core/utils/httploadfils.ts",{"_index":1678,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/layouts/auth",{"_index":167,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/blank",{"_index":264,"title":{},"body":{"components/BlankLayoutComponent.html":{},"coverage.html":{}}}],["src/app/layouts/chat/chat.component.ts",{"_index":695,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/layouts/chat/chat.component.ts:14",{"_index":709,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:19",{"_index":723,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:22",{"_index":726,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:25",{"_index":721,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:33",{"_index":725,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:36",{"_index":713,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:41",{"_index":712,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/chat/chat.component.ts:57",{"_index":711,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/layouts/footer/footer.component.ts",{"_index":1019,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layouts/navbar/navbar.component.ts",{"_index":1289,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:101",{"_index":1326,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:114",{"_index":1312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:17",{"_index":1309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:24",{"_index":1327,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:25",{"_index":1334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:26",{"_index":1341,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:27",{"_index":1331,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:29",{"_index":1311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:30",{"_index":1335,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:31",{"_index":1339,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:32",{"_index":1330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:33",{"_index":1332,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:35",{"_index":1321,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:41",{"_index":1318,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:46",{"_index":1313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:54",{"_index":1320,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:59",{"_index":1315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:68",{"_index":1317,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:74",{"_index":1325,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layouts/navbar/navbar.component.ts:95",{"_index":1319,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts",{"_index":9,"title":{},"body":{"components/AllordersComponent.html":{},"coverage.html":{}}}],["src/app/pages/allorders/allorders.component.ts:16",{"_index":46,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts:17",{"_index":41,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts:19",{"_index":48,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts:20",{"_index":44,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts:23",{"_index":37,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts:29",{"_index":36,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/allorders/allorders.component.ts:37",{"_index":32,"title":{},"body":{"components/AllordersComponent.html":{}}}],["src/app/pages/brands/brands.component.ts",{"_index":313,"title":{},"body":{"components/BrandsComponent.html":{},"coverage.html":{}}}],["src/app/pages/brands/brands.component.ts:14",{"_index":325,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:16",{"_index":319,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:20",{"_index":321,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/brands/brands.component.ts:24",{"_index":320,"title":{},"body":{"components/BrandsComponent.html":{}}}],["src/app/pages/cart/cart.component.ts",{"_index":527,"title":{},"body":{"components/CartComponent.html":{},"coverage.html":{}}}],["src/app/pages/cart/cart.component.ts:102",{"_index":546,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:18",{"_index":549,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:19",{"_index":550,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:20",{"_index":547,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:22",{"_index":548,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:27",{"_index":542,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:31",{"_index":541,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:45",{"_index":544,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/cart/cart.component.ts:86",{"_index":540,"title":{},"body":{"components/CartComponent.html":{}}}],["src/app/pages/categories/categories.component.ts",{"_index":655,"title":{},"body":{"components/CategoriesComponent.html":{},"coverage.html":{}}}],["src/app/pages/categories/categories.component.ts:14",{"_index":669,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:16",{"_index":667,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:19",{"_index":666,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:23",{"_index":663,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/categories/categories.component.ts:35",{"_index":665,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts",{"_index":788,"title":{},"body":{"components/CheckoutComponent.html":{},"coverage.html":{}}}],["src/app/pages/checkout/checkout.component.ts:17",{"_index":807,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:18",{"_index":803,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:19",{"_index":808,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:20",{"_index":809,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:21",{"_index":805,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:23",{"_index":806,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:24",{"_index":804,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:25",{"_index":810,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:27",{"_index":799,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:35",{"_index":800,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:40",{"_index":798,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:50",{"_index":802,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/checkout/checkout.component.ts:66",{"_index":801,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/details/details.component.ts",{"_index":925,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/pages/details/details.component.ts:18",{"_index":942,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:19",{"_index":943,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:20",{"_index":946,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:21",{"_index":947,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:24",{"_index":945,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:25",{"_index":933,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:29",{"_index":938,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:36",{"_index":937,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:50",{"_index":940,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:56",{"_index":934,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/details/details.component.ts:74",{"_index":936,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts",{"_index":1059,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"coverage.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:15",{"_index":1075,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:16",{"_index":1082,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:18",{"_index":1083,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:21",{"_index":1088,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:26",{"_index":1087,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:31",{"_index":1081,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:37",{"_index":1073,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:54",{"_index":1072,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/forgotpassword/forgotpassword.component.ts:76",{"_index":1071,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":1121,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:22",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:23",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:25",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:26",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:27",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:29",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:34",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:48",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:78",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:83",{"_index":1133,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:95",{"_index":1134,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/login/login.component.ts",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/pages/login/login.component.ts:16",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:17",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:20",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:26",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:27",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:28",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/login/login.component.ts:29",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/notfound/notfound.component.ts",{"_index":1395,"title":{},"body":{"components/NotfoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts",{"_index":1426,"title":{},"body":{"components/ProductsComponent.html":{},"coverage.html":{}}}],["src/app/pages/products/products.component.ts:20",{"_index":1444,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:22",{"_index":1443,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:23",{"_index":1440,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:24",{"_index":1442,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:25",{"_index":1446,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:26",{"_index":1447,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:27",{"_index":1445,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:29",{"_index":1437,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:34",{"_index":1438,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:38",{"_index":1449,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/products/products.component.ts:51",{"_index":1436,"title":{},"body":{"components/ProductsComponent.html":{}}}],["src/app/pages/register/register.component.ts",{"_index":1473,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/pages/register/register.component.ts:15",{"_index":1484,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:16",{"_index":1485,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:17",{"_index":1494,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:19",{"_index":1486,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:20",{"_index":1487,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:21",{"_index":1495,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:24",{"_index":1493,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:34",{"_index":1480,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/register/register.component.ts:41",{"_index":1483,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts",{"_index":1603,"title":{},"body":{"components/WishlistComponent.html":{},"coverage.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:23",{"_index":1617,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:24",{"_index":1614,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:25",{"_index":1615,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:27",{"_index":1616,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:29",{"_index":1611,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:33",{"_index":1610,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:45",{"_index":1609,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/pages/wishlist/wishlist.component.ts:67",{"_index":1613,"title":{},"body":{"components/WishlistComponent.html":{}}}],["src/app/shared/components/ui/card",{"_index":374,"title":{},"body":{"components/CardForOrdersComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/ui/search",{"_index":1557,"title":{},"body":{"components/SearchInputComponent.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iallorders.ts",{"_index":269,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/ibrands.ts",{"_index":1189,"title":{},"body":{"interfaces/IBrand.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icart.ts",{"_index":299,"title":{},"body":{"interfaces/Brand-1.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory-1.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/icategory.ts",{"_index":1190,"title":{},"body":{"interfaces/Icategory.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iproduct.ts",{"_index":306,"title":{},"body":{"interfaces/Brand-2.html":{},"interfaces/Category-2.html":{},"interfaces/Iproduct.html":{},"interfaces/Subcategory-2.html":{},"coverage.html":{}}}],["src/app/shared/interfaces/iwishlist.ts",{"_index":311,"title":{},"body":{"interfaces/Brand-3.html":{},"interfaces/Category-3.html":{},"interfaces/Iwishlist.html":{},"interfaces/Subcategory-3.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":1695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":1697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssg",{"_index":890,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["ssr",{"_index":889,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["start",{"_index":780,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["started",{"_index":1754,"title":{"index.html":{}},"body":{}}],["state",{"_index":731,"title":{},"body":{"components/ChatComponent.html":{},"guards/DetailsResolver.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":1065,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["step:number",{"_index":1091,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["stock",{"_index":685,"title":{},"body":{"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{}}}],["storage",{"_index":646,"title":{},"body":{"injectables/CartService.html":{}}}],["store",{"_index":426,"title":{},"body":{"components/CardForOrdersComponent.html":{},"injectables/CartService.html":{},"injectables/DarkThemeSelectorService.html":{},"components/FooterComponent.html":{},"index.html":{}}}],["stores",{"_index":1045,"title":{},"body":{"components/FooterComponent.html":{}}}],["string",{"_index":47,"title":{},"body":{"components/AllordersComponent.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":373,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["stylesheet",{"_index":1574,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["styleurl",{"_index":18,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["styleurls",{"_index":378,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["subcategory",{"_index":292,"title":{"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{}},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["submission",{"_index":745,"title":{},"body":{"components/ChatComponent.html":{}}}],["submit",{"_index":820,"title":{},"body":{"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform",{"_index":797,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitform():void",{"_index":822,"title":{},"body":{"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe",{"_index":337,"title":{},"body":{"components/BrandsComponent.html":{}}}],["subscriber",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":443,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{}}}],["successful",{"_index":341,"title":{},"body":{"components/BrandsComponent.html":{}}}],["successfully",{"_index":442,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["such",{"_index":1776,"title":{},"body":{"index.html":{}}}],["suffix",{"_index":1749,"title":{},"body":{"miscellaneous/functions.html":{}}}],["suits",{"_index":1804,"title":{},"body":{"index.html":{}}}],["sun",{"_index":1376,"title":{},"body":{"components/NavbarComponent.html":{}}}],["support",{"_index":763,"title":{},"body":{"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{}}}],["sure",{"_index":563,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["swal",{"_index":554,"title":{},"body":{"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/WishlistComponent.html":{}}}],["swal.fire",{"_index":562,"title":{},"body":{"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/WishlistComponent.html":{}}}],["sweetalert2",{"_index":553,"title":{},"body":{"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/WishlistComponent.html":{},"dependencies.html":{}}}],["sweetalert2/ngx",{"_index":552,"title":{},"body":{"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/WishlistComponent.html":{},"dependencies.html":{}}}],["sweetalert2module",{"_index":531,"title":{},"body":{"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/WishlistComponent.html":{}}}],["sweetalert2module.forroot",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":1363,"title":{},"body":{"components/NavbarComponent.html":{}}}],["system",{"_index":913,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["system's",{"_index":869,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["table",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["targeting",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taxprice",{"_index":274,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["templates",{"_index":1570,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["templateurl",{"_index":16,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["tempore",{"_index":354,"title":{},"body":{"components/BrandsComponent.html":{},"components/CategoriesComponent.html":{},"components/ProductsComponent.html":{}}}],["terms",{"_index":1049,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":1791,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1798,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":1795,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1789,"title":{},"body":{"index.html":{}}}],["text",{"_index":510,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/NavbarComponent.html":{},"components/WishlistComponent.html":{}}}],["theme",{"_index":753,"title":{},"body":{"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["theme:'auto",{"_index":568,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["themes",{"_index":881,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["then((result",{"_index":577,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["this.activatedroute.parammap.subscribe",{"_index":66,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.activateroute.data.subscribe",{"_index":558,"title":{},"body":{"components/CartComponent.html":{},"components/DetailsComponent.html":{}}}],["this.addclasstohtml('dark",{"_index":910,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.allorders",{"_index":74,"title":{},"body":{"components/AllordersComponent.html":{}}}],["this.authservice.logout",{"_index":1357,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.authservice.saveuserdata",{"_index":1106,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.sendloginform(this.loginform.value).subscribe",{"_index":1209,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.sendregesterform(this.registerform.value).subscribe",{"_index":1502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.setcodeverified(this.verifycode.value).subscribe",{"_index":1101,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.authservice.setemailverified(this.verifyemail.value).subscribe",{"_index":1094,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.authservice.setresetpass(this.resetpassword.value).subscribe",{"_index":1103,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.brands.set",{"_index":338,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.brandsservice.getallbrands().pipe",{"_index":333,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.cartcountnumber",{"_index":1354,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cartdetails",{"_index":559,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartid",{"_index":819,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cartservice.addproducttocart(id).subscribe",{"_index":438,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["this.cartservice.cartnumber",{"_index":1329,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cartservice.cartnumber.set(0",{"_index":588,"title":{},"body":{"components/CartComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.cartservice.cartnumber.set(res.numofcartitems",{"_index":450,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/NavbarComponent.html":{},"components/WishlistComponent.html":{}}}],["this.cartservice.clearcart().subscribe",{"_index":586,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.getloggedusercart",{"_index":613,"title":{},"body":{"guards/CartResolver.html":{}}}],["this.cartservice.getloggedusercart().subscribe",{"_index":1356,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.cartservice.removespecificcartitem(id).subscribe",{"_index":579,"title":{},"body":{"components/CartComponent.html":{}}}],["this.cartservice.updateproductquantity(id",{"_index":591,"title":{},"body":{"components/CartComponent.html":{}}}],["this.categories.set",{"_index":677,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.categoriseservice.getallcategories().subscribe",{"_index":676,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.categoriseservice.getspecificcategories(id).subscribe",{"_index":679,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["this.changedirection",{"_index":1281,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["this.chatform.reset",{"_index":757,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chatform.valid",{"_index":747,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.checkoutform",{"_index":815,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.checkoutform.value).subscribe",{"_index":824,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.cofirmpassword",{"_index":1492,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.currenttheme.set(apptheme.dark",{"_index":908,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.currenttheme.set(apptheme.light",{"_index":905,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.currenttheme.set(undefined",{"_index":911,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.darkthemeselectorservice.currenttheme",{"_index":1374,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.darkthemeselectorservice.setdarktheme",{"_index":1369,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.darkthemeselectorservice.setlighttheme",{"_index":1365,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.darkthemeselectorservice.setsystemtheme",{"_index":1371,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.detailsproduct.set(res['product'].data",{"_index":950,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.flowbiteloaded",{"_index":1353,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.flowbiteservice.loadflowbite(flowbite",{"_index":1355,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.formbuilder.group",{"_index":715,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getallbrands",{"_index":331,"title":{},"body":{"components/BrandsComponent.html":{}}}],["this.getallcategories",{"_index":674,"title":{},"body":{"components/CategoriesComponent.html":{},"components/HomeComponent.html":{}}}],["this.getallproducts",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.getalluserorders",{"_index":61,"title":{},"body":{"components/AllordersComponent.html":{}}}],["this.getcartdata",{"_index":556,"title":{},"body":{"components/CartComponent.html":{}}}],["this.getcartid",{"_index":817,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.getproductdetails",{"_index":949,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.getuserid",{"_index":60,"title":{},"body":{"components/AllordersComponent.html":{}}}],["this.getwishlist",{"_index":1619,"title":{},"body":{"components/WishlistComponent.html":{}}}],["this.hearts",{"_index":486,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["this.hearts.filter((h",{"_index":487,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["this.httpclient.delete(`${environment.baseurl}/api/v1/cart",{"_index":653,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.delete(`${environment.baseurl}/api/v1/cart/${id",{"_index":652,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.delete(`${environment.baseurl}/api/v1/wishlist/${id",{"_index":1638,"title":{},"body":{"injectables/WishlistService.html":{}}}],["this.httpclient.get",{"_index":1424,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/brands",{"_index":371,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/brands/${id",{"_index":372,"title":{},"body":{"injectables/BrandsService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/cart",{"_index":651,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/categories",{"_index":693,"title":{},"body":{"injectables/CategoriseService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/categories/${id",{"_index":694,"title":{},"body":{"injectables/CategoriseService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/products",{"_index":1471,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/products/${id",{"_index":1472,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.httpclient.get(`${environment.baseurl}/api/v1/wishlist",{"_index":1639,"title":{},"body":{"injectables/WishlistService.html":{}}}],["this.httpclient.post",{"_index":1420,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/forgotpasswords",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/signin",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/signup",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/auth/verifyresetcode",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/cart",{"_index":647,"title":{},"body":{"injectables/CartService.html":{}}}],["this.httpclient.post(`${environment.baseurl}/api/v1/wishlist",{"_index":1637,"title":{},"body":{"injectables/WishlistService.html":{}}}],["this.httpclient.put(`${environment.baseurl}/api/v1/auth/resetpassword",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpclient.put(`${environment.baseurl}/api/v1/cart/${id",{"_index":654,"title":{},"body":{"injectables/CartService.html":{}}}],["this.initform",{"_index":816,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.ischatopen",{"_index":743,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.isiteminwishlist(id",{"_index":462,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["this.isloading",{"_index":1208,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.isscrolled",{"_index":1385,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadcurrenttheme",{"_index":1350,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadwishlist",{"_index":434,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["this.loginform.markastouched",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.msgerror",{"_index":1210,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.mytoken",{"_index":650,"title":{},"body":{"injectables/CartService.html":{}}}],["this.mytranslateservice.changelangtranslate(lang",{"_index":1358,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.ordersservice.cheakoutpayment(this.cartid",{"_index":823,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.ordersservice.getalluserorders(this.userid).subscribe",{"_index":72,"title":{},"body":{"components/AllordersComponent.html":{}}}],["this.ordersservice.getorderscash(this.cartid",{"_index":831,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.productimages.set(res['product'].data.images",{"_index":952,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.products",{"_index":1453,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.products.set",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.productservice.getspecificproducts(id",{"_index":991,"title":{},"body":{"guards/DetailsResolver.html":{}}}],["this.productsservice.getallproducts().subscribe",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.registerform.markallastouched",{"_index":1504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.removeclassfromhtml('dark",{"_index":907,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.removeclassfromhtml(classname",{"_index":915,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.removefromlocalstorage",{"_index":912,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.renderer.selectrootelement('#mainimage",{"_index":955,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.renderer.setattribute(mainimage",{"_index":956,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.renderer.setstyle(dropdown",{"_index":1361,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.renderer2.setattribute(document.documentelement",{"_index":1283,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["this.resetpassword.get('email')?.patchvalue(emailvalue",{"_index":1100,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.reverse",{"_index":1460,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.roter.navigate(['/home",{"_index":1107,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.rotter.navigate(['/home",{"_index":1212,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.rotter.navigate(['/login",{"_index":1503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/allorders",{"_index":833,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.router.navigate(['/login",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.searchchange.emit(this.searchvalue",{"_index":1580,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["this.searchquery",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["this.selectedtheme",{"_index":1366,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.selectedthemeicon",{"_index":1375,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.settolocalstorage(apptheme.dark",{"_index":909,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.settolocalstorage(apptheme.light",{"_index":906,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["this.showmultiplehearts(event.clientx",{"_index":469,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["this.sortkey",{"_index":1456,"title":{},"body":{"components/ProductsComponent.html":{}}}],["this.step",{"_index":1096,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.success",{"_index":1214,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.toastrservice.success",{"_index":1620,"title":{},"body":{"components/WishlistComponent.html":{}}}],["this.toastrservice.success(\"product",{"_index":581,"title":{},"body":{"components/CartComponent.html":{}}}],["this.toastrservice.success('product",{"_index":440,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{}}}],["this.translateservice.currentlang",{"_index":1362,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":1273,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["this.translateservice.use(lang",{"_index":1288,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["this.translateservice.use(savedlang",{"_index":1279,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["this.updateicon",{"_index":1372,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userdata",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userid",{"_index":68,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["this.verifyemail.get('email')?.value",{"_index":1099,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["this.wishlistitems",{"_index":454,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["this.wishlistitems.includes(id",{"_index":460,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["this.wishlistservice.addproducttowishlist(id).subscribe",{"_index":468,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{}}}],["this.wishlistservice.getwishlist().subscribe",{"_index":452,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["this.wishlistservice.removeproductfromwishlist(id).subscribe",{"_index":464,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["those",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throw",{"_index":335,"title":{},"body":{"components/BrandsComponent.html":{}}}],["throwerror(()=>err",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timeout",{"_index":444,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{}}}],["timer",{"_index":751,"title":{},"body":{"components/ChatComponent.html":{}}}],["titel",{"_index":1461,"title":{},"body":{"components/ProductsComponent.html":{}}}],["title",{"_index":294,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{}}}],["toastr",{"_index":417,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["toastrservice",{"_index":383,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/ChatComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["toastrservice.error(err.error.message",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["togglechat",{"_index":706,"title":{},"body":{"components/ChatComponent.html":{}}}],["toggleiteminwishlist",{"_index":390,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["toggleiteminwishlist(id",{"_index":403,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["toggles",{"_index":740,"title":{},"body":{"components/ChatComponent.html":{}}}],["token",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"miscellaneous/variables.html":{}}}],["tools",{"_index":1772,"title":{},"body":{"index.html":{}}}],["top",{"_index":499,"title":{},"body":{"components/CardForOrdersComponent.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":89,"title":{},"body":{"components/AllordersComponent.html":{},"components/CartComponent.html":{}}}],["totalcartprice",{"_index":303,"title":{},"body":{"interfaces/Brand-1.html":{},"interfaces/Category-1.html":{},"interfaces/ICart.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/Subcategory-1.html":{}}}],["totalorderprice",{"_index":277,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/IallOrders.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{}}}],["touchdrag",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{}}}],["track",{"_index":80,"title":{},"body":{"components/AllordersComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/WishlistComponent.html":{}}}],["transform",{"_index":519,"title":{},"body":{"components/CardForOrdersComponent.html":{},"pipes/SearchPipe.html":{}}}],["transform(arrayofobject",{"_index":1586,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["translate",{"_index":835,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":811,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1717,"title":{},"body":{"dependencies.html":{}}}],["translatehttploader",{"_index":1742,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translateloader",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule.forroot",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":789,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{}}}],["translateservice",{"_index":1246,"title":{},"body":{"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{}}}],["translatey",{"_index":522,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["translatey(0",{"_index":520,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["translation",{"_index":1744,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translations",{"_index":1287,"title":{},"body":{"injectables/MytranslateService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["true",{"_index":447,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/WishlistComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["tv",{"_index":1039,"title":{},"body":{"components/FooterComponent.html":{}}}],["two",{"_index":1575,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"components/BrandsComponent.html":{},"injectables/BrandsService.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"interfaces/CartItem.html":{},"guards/CartResolver.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"injectables/CategoriseService.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"guards/DetailsResolver.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"components/ProductsComponent.html":{},"injectables/ProductsService.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":892,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":888,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1788,"title":{},"body":{"index.html":{}}}],["update",{"_index":449,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{}}}],["updatecount",{"_index":539,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecount(id",{"_index":545,"title":{},"body":{"components/CartComponent.html":{}}}],["updatecount(id:string",{"_index":589,"title":{},"body":{"components/CartComponent.html":{}}}],["updated",{"_index":682,"title":{},"body":{"components/CategoriesComponent.html":{}}}],["updatedat",{"_index":285,"title":{},"body":{"interfaces/Brand.html":{},"interfaces/Brand-1.html":{},"interfaces/Brand-2.html":{},"interfaces/Brand-3.html":{},"interfaces/CartItem.html":{},"interfaces/Category.html":{},"interfaces/Category-1.html":{},"interfaces/Category-2.html":{},"interfaces/Category-3.html":{},"interfaces/IBrand.html":{},"interfaces/ICart.html":{},"interfaces/IallOrders.html":{},"interfaces/Icategory.html":{},"interfaces/Iproduct.html":{},"interfaces/Iwishlist.html":{},"interfaces/Product.html":{},"interfaces/Product-1.html":{},"interfaces/Product2.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/Subcategory-1.html":{},"interfaces/Subcategory-2.html":{},"interfaces/Subcategory-3.html":{},"interfaces/User.html":{}}}],["updateicon",{"_index":1305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["updateproductquantity",{"_index":621,"title":{},"body":{"injectables/CartService.html":{}}}],["updateproductquantity(id",{"_index":635,"title":{},"body":{"injectables/CartService.html":{}}}],["updates",{"_index":638,"title":{},"body":{"injectables/CartService.html":{},"injectables/MytranslateService.html":{}}}],["url",{"_index":64,"title":{},"body":{"components/AllordersComponent.html":{},"miscellaneous/variables.html":{}}}],["us@if",{"_index":781,"title":{},"body":{"components/ChatComponent.html":{}}}],["use",{"_index":1277,"title":{},"body":{"injectables/MytranslateService.html":{},"index.html":{}}}],["used",{"_index":1743,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":62,"title":{"interfaces/User.html":{}},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"interfaces/Brand.html":{},"interfaces/CartItem.html":{},"injectables/CartService.html":{},"interfaces/Category.html":{},"injectables/DarkThemeSelectorService.html":{},"interfaces/IallOrders.html":{},"injectables/OrdersService.html":{},"interfaces/Product.html":{},"interfaces/ShippingAddress.html":{},"interfaces/Subcategory.html":{},"interfaces/User.html":{},"components/WishlistComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":631,"title":{},"body":{"injectables/CartService.html":{}}}],["userdata",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":26,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["userid:string",{"_index":58,"title":{},"body":{"components/AllordersComponent.html":{},"components/CheckoutComponent.html":{}}}],["using",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MytranslateService.html":{},"components/SearchInputComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":1591,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["validation",{"_index":735,"title":{},"body":{"components/ChatComponent.html":{}}}],["validators",{"_index":727,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":717,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(20",{"_index":1489,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1488,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^(?=.*\\d)(?=.*[a",{"_index":1078,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^01[0125][0",{"_index":718,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^[0",{"_index":1085,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["validators.required",{"_index":716,"title":{},"body":{"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":39,"title":{},"body":{"components/AllordersComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"pipes/SearchPipe.html":{},"components/WishlistComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":105,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["variable",{"_index":893,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{},"coverage.html":{}}}],["variables",{"_index":1818,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":1092,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycode",{"_index":1066,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycodesubmit",{"_index":1069,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifycodesubmit():void",{"_index":1097,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemail",{"_index":1067,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemailsubmit",{"_index":1070,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["verifyemailsubmit():void",{"_index":1093,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["version",{"_index":1759,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":1119,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["visa",{"_index":821,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["visibility",{"_index":739,"title":{},"body":{"components/ChatComponent.html":{}}}],["visit",{"_index":1811,"title":{},"body":{"index.html":{}}}],["void",{"_index":35,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"injectables/DarkThemeSelectorService.html":{},"components/DetailsComponent.html":{},"injectables/FlowbiteService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MytranslateService.html":{},"components/NavbarComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{}}}],["w",{"_index":501,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["warning",{"_index":567,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["way",{"_index":1576,"title":{},"body":{"components/SearchInputComponent.html":{}}}],["wearables",{"_index":1036,"title":{},"body":{"components/FooterComponent.html":{}}}],["weekend",{"_index":1030,"title":{},"body":{"components/FooterComponent.html":{}}}],["whenever",{"_index":1582,"title":{},"body":{"components/SearchInputComponent.html":{},"index.html":{}}}],["whether",{"_index":1599,"title":{},"body":{"pipes/SearchPipe.html":{}}}],["whose",{"_index":1414,"title":{},"body":{"injectables/OrdersService.html":{}}}],["window",{"_index":741,"title":{},"body":{"components/ChatComponent.html":{},"injectables/DarkThemeSelectorService.html":{}}}],["window's",{"_index":738,"title":{},"body":{"components/ChatComponent.html":{}}}],["window.innerheight",{"_index":483,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["window.innerwidth",{"_index":480,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["window.matchmedia('(prefers",{"_index":923,"title":{},"body":{"injectables/DarkThemeSelectorService.html":{}}}],["window.scrolly",{"_index":1386,"title":{},"body":{"components/NavbarComponent.html":{}}}],["window:scroll",{"_index":1307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["wishlist",{"_index":151,"title":{},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"miscellaneous/variables.html":{}}}],["wishlist.component.html",{"_index":1605,"title":{},"body":{"components/WishlistComponent.html":{}}}],["wishlist.component.scss",{"_index":1606,"title":{},"body":{"components/WishlistComponent.html":{}}}],["wishlistcomponent",{"_index":150,"title":{"components/WishlistComponent.html":{}},"body":{"components/AllordersComponent.html":{},"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/BlankLayoutComponent.html":{},"components/BrandsComponent.html":{},"components/CardForOrdersComponent.html":{},"components/CartComponent.html":{},"components/CategoriesComponent.html":{},"components/ChatComponent.html":{},"components/CheckoutComponent.html":{},"components/DetailsComponent.html":{},"components/FooterComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotfoundComponent.html":{},"components/ProductsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchInputComponent.html":{},"components/WishlistComponent.html":{},"coverage.html":{}}}],["wishlistitems",{"_index":384,"title":{},"body":{"components/CardForOrdersComponent.html":{},"components/WishlistComponent.html":{}}}],["wishlistservice",{"_index":385,"title":{"injectables/WishlistService.html":{}},"body":{"components/CardForOrdersComponent.html":{},"components/DetailsComponent.html":{},"components/WishlistComponent.html":{},"injectables/WishlistService.html":{},"coverage.html":{}}}],["withhashlocation",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinmemoryscrolling",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withinterceptors([headersinterceptor",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":760,"title":{},"body":{"components/ChatComponent.html":{}}}],["withviewtransitions",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["won't",{"_index":564,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["works",{"_index":1399,"title":{},"body":{"components/NotfoundComponent.html":{}}}],["writablesignal",{"_index":322,"title":{},"body":{"components/BrandsComponent.html":{},"injectables/CartService.html":{},"components/CategoriesComponent.html":{},"components/HomeComponent.html":{},"components/ProductsComponent.html":{}}}],["x",{"_index":402,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["y",{"_index":400,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["yellow",{"_index":1377,"title":{},"body":{"components/NavbarComponent.html":{}}}],["yes",{"_index":575,"title":{},"body":{"components/CartComponent.html":{},"components/WishlistComponent.html":{}}}],["z",{"_index":507,"title":{},"body":{"components/CardForOrdersComponent.html":{}}}],["z])(?=.*[\\w_]).{8",{"_index":1080,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["z])(?=.*[a",{"_index":1079,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AllordersComponent.html":{"url":"components/AllordersComponent.html","title":"component - AllordersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AllordersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/allorders/allorders.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-allorders\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./allorders.component.html\n            \n\n\n\n            \n                styleUrl\n                ./allorders.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                allOrders\n                            \n                            \n                                    Private\n                                    Readonly\n                                ordersService\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUserOrders\n                            \n                            \n                                getUserId\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserOrders\n                        \n                    \n                \n            \n            \n                \ngetAllUserOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/allorders/allorders.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/allorders/allorders.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/allorders/allorders.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/allorders/allorders.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allOrders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IallOrders[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/allorders/allorders.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ordersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrdersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/allorders/allorders.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/allorders/allorders.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { OrdersService } from '../../core/services/orders/orders.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { IallOrders } from '../../shared/interfaces/iallorders';\nimport { CommonModule } from '@angular/common';\n\n\n@Component({\n  selector: 'app-allorders',\n  imports: [CommonModule],\n  templateUrl: './allorders.component.html',\n  styleUrl: './allorders.component.scss'\n})\nexport class AllordersComponent {\n\n  private readonly ordersService = inject(OrdersService);\n  private readonly activatedRoute = inject(ActivatedRoute);\n\n  userId:string = '';\n  allOrders:IallOrders[] = [];\n\n\n  ngOnInit(): void {\n    this.getUserId();\n    this.getAllUserOrders();\n  }\n\n  // get user id from url\n  getUserId():void{\n    this.activatedRoute.paramMap.subscribe({\n      next:(param)=>{\n        this.userId = param.get('id') !;\n      }\n    })\n  }\n// get all user orders\n  getAllUserOrders():void{\n    this.ordersService.getAllUserOrders(this.userId).subscribe({\n      next:(res)=>{\n        this.allOrders = res;\n        console.log(res);\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        Your Orders\n      \n    \n\n    @for (order of allOrders; track order.id) {\n    \n    \n      \n        \n          Order# {{ order.id }}\n        \n        \n          {{ order.isPaid ? \"Paid\" : \"Not Paid\" }}\n        \n      \n      \n        Customer: {{ order.user.name }}\n      \n      \n        Payment Method: {{ order.paymentMethodType }}\n      \n      \n        Total Price: {{ order.totalOrderPrice }}\n      \n      \n        {{ order.isDelivered ? \"Delivered\" : \"Not Delivered\" }}\n      \n      \n      \n        @for (item of order.cartItems; track item._id ) {\n        \n          \n          \n            \n              {{ item.product.title }}\n            \n            \n              Quantity: {{ item.count }} - Price: {{ item.price }}\n            \n          \n        \n        }\n      \n    \n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Your Orders              @for (order of allOrders; track order.id) {                                Order# {{ order.id }}                          {{ order.isPaid ? \"Paid\" : \"Not Paid\" }}                            Customer: {{ order.user.name }}                    Payment Method: {{ order.paymentMethodType }}                    Total Price: {{ order.totalOrderPrice }}                    {{ order.isDelivered ? \"Delivered\" : \"Not Delivered\" }}                          @for (item of order.cartItems; track item._id ) {                                                      {{ item.product.title }}                                      Quantity: {{ item.count }} - Price: {{ item.price }}                                      }              }  '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllordersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            NgxSpinnerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {  RouterOutlet } from '@angular/router';\nimport { NgxSpinnerComponent } from 'ngx-spinner';\n\n\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet, NgxSpinnerComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  constructor(){}\n  ngOnInit() {\n\n  }\n\n}\n \n    \n\n    \n        \n\n\n\n\n\"\n>\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\">'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/auth-layout/auth-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                FooterComponent\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from \"../footer/footer.component\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-auth-layout',\n  imports: [RouterOutlet, FooterComponent, NavbarComponent],\n  templateUrl: './auth-layout.component.html',\n  styleUrl: './auth-layout.component.scss'\n})\nexport class AuthLayoutComponent {\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                userData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                saveUserData\n                            \n                            \n                                sendLoginForm\n                            \n                            \n                                sendRegesterForm\n                            \n                            \n                                setCodeVerified\n                            \n                            \n                                setEmailVerified\n                            \n                            \n                                setResetPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Logs out the user by removing the token and redirecting to the login page\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserData\n                        \n                    \n                \n            \n            \n                \nsaveUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Saves the user data after decoding the JWT token\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendLoginForm\n                        \n                    \n                \n            \n            \n                \nsendLoginForm(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n                        Sends the login form data to the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user login data as an object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the server response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendRegesterForm\n                        \n                    \n                \n            \n            \n                \nsendRegesterForm(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Sends the registration form data to the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user registration data as an object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the server response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCodeVerified\n                        \n                    \n                \n            \n            \n                \nsetCodeVerified(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Sends a code verification request to the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The verification code data as an object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the server response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEmailVerified\n                        \n                    \n                \n            \n            \n                \nsetEmailVerified(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Sends an email verification request to the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The email data as an object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the server response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResetPass\n                        \n                    \n                \n            \n            \n                \nsetResetPass(data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth/auth.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Sends a password reset request to the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new password data as an object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the server response\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\nimport { jwtDecode } from \"jwt-decode\";\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // Injecting Router using Angular's inject function\n  private readonly router = inject(Router);\n\n  // Holds the decoded user data\n  userData: any = null;\n\n  /**\n   * Sends the registration form data to the server\n   * @param data The user registration data as an object\n   * @returns An Observable with the server response\n   */\n  sendRegesterForm(data: object): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/signup`, data);\n  }\n\n  /**\n   * Sends the login form data to the server\n   * @param data The user login data as an object\n   * @returns An Observable with the server response\n   */\n  sendLoginForm(data: object): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/signin`, data);\n  }\n\n  /**\n   * Saves the user data after decoding the JWT token\n   */\n  saveUserData(): void {\n    const token = localStorage.getItem('userToken');\n    if (token !== null) {\n      this.userData = jwtDecode(token);\n      console.log(this.userData);\n    }\n  }\n\n  /**\n   * Logs out the user by removing the token and redirecting to the login page\n   */\n  logOut(): void {\n    localStorage.removeItem('userToken');\n    this.userData = null;\n\n    // Navigate to the login page\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Sends an email verification request to the server\n   * @param data The email data as an object\n   * @returns An Observable with the server response\n   */\n  setEmailVerified(data: object): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/forgotPasswords`, data);\n  }\n\n  /**\n   * Sends a code verification request to the server\n   * @param data The verification code data as an object\n   * @returns An Observable with the server response\n   */\n  setCodeVerified(data: object): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/auth/verifyResetCode`, data);\n  }\n\n  /**\n   * Sends a password reset request to the server\n   * @param data The new password data as an object\n   * @returns An Observable with the server response\n   */\n  setResetPass(data: object): Observable {\n    return this.httpClient.put(`${environment.baseUrl}/api/v1/auth/resetPassword`, data);\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlankLayoutComponent.html":{"url":"components/BlankLayoutComponent.html","title":"component - BlankLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlankLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/blank-layout/blank-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blank-layout\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                                FooterComponent\n                                NavbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blank-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./blank-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from \"../footer/footer.component\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\n\n@Component({\n  selector: 'app-blank-layout',\n  imports: [RouterOutlet, FooterComponent, NavbarComponent],\n  templateUrl: './blank-layout.component.html',\n  styleUrl: './blank-layout.component.scss'\n})\nexport class BlankLayoutComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlankLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand.html":{"url":"interfaces/Brand.html","title":"interface - Brand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand-1.html":{"url":"interfaces/Brand-1.html","title":"interface - Brand-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string\n  cartOwner: string\n  products: Product[]\n  createdAt: string\n  updatedAt: string\n  __v: number\n  totalCartPrice: number\n}\n\nexport interface Product {\n  count: number\n  _id: string\n  product: Product2\n  price: number\n}\n\nexport interface Product2 {\n  subcategory: Subcategory[]\n  _id: string\n  title: string\n  quantity: number\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand-2.html":{"url":"interfaces/Brand-2.html","title":"interface - Brand-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Brand-3.html":{"url":"interfaces/Brand-3.html","title":"interface - Brand-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Brand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwishlist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwishlist {\n        sold: number\n        images: string[]\n        subcategory: Subcategory[]\n        ratingsQuantity: number\n        _id: string\n        title: string\n        slug: string\n        description: string\n        quantity: number\n        price: number\n        imageCover: string\n        category: Category\n        brand: Brand\n        ratingsAverage: number\n        createdAt: string\n        updatedAt: string\n        __v: number\n        id: string\n      }\n      \n      export interface Subcategory {\n        _id: string\n        name: string\n        slug: string\n        category: string\n      }\n      \n      export interface Category {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      }\n      \n      export interface Brand {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      \n      \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BrandsComponent.html":{"url":"components/BrandsComponent.html","title":"component - BrandsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BrandsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/brands/brands.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-brands\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./brands.component.html\n            \n\n\n\n            \n                styleUrl\n                ./brands.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                brands\n                            \n                            \n                                    Private\n                                    Readonly\n                                brandsService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBrands\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/brands/brands.component.ts:16\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/brands/brands.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        brands\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        brandsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(BrandsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/brands/brands.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { catchError } from 'rxjs';\nimport { IBrand } from '../../shared/interfaces/ibrands';\nimport { BrandsService } from './../../core/services/brands/brands.service';\nimport { Component, inject, signal, WritableSignal } from '@angular/core';\n\n@Component({\n  selector: 'app-brands',\n  imports: [],\n  templateUrl: './brands.component.html',\n  styleUrl: './brands.component.scss'\n})\nexport class BrandsComponent {\n\n  private readonly brandsService = inject(BrandsService);\n\n  brands:WritableSignal = signal([]);\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.getAllBrands();\n  }\n  // get all brands\n  getAllBrands():void{\n    this.brandsService.getAllBrands().pipe(\n      catchError((err) =>{\n        console.log(err);\n        throw err;\n      })\n    ).subscribe( (res) => {\n        this.brands.set( res.data)\n        console.log(res.data);\n      },\n    )\n  }\n\n  \n\n}\n\n    \n\n    \n        \n\n    \n        Our Successful Brands\n        \n            Lorem ipsum dolor sit amet consectetur adipisicing elit nam maxime quas fugiat tempore blanditiis, eveniet quia accusantium.\n        \n    \n\n    \n        @for (brand of brands(); track $index) {\n         \n              \n                     {{brand.name}}\n         \n              \n           \n        }\n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Our Successful Brands                    Lorem ipsum dolor sit amet consectetur adipisicing elit nam maxime quas fugiat tempore blanditiis, eveniet quia accusantium.                        @for (brand of brands(); track $index) {                                            {{brand.name}}                                          }    '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BrandsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BrandsService.html":{"url":"injectables/BrandsService.html","title":"injectable - BrandsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BrandsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/brands/brands.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBrands\n                            \n                            \n                                getSpecificBrands\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/brands/brands.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBrands\n                        \n                    \n                \n            \n            \n                \ngetAllBrands()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/brands/brands.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Fetches all brands from the server\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the list of all brands\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificBrands\n                        \n                    \n                \n            \n            \n                \ngetSpecificBrands(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/brands/brands.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Fetches a specific brand by its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the brand to fetch\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the brand data\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Fetches all brands from the server\n   * @returns An Observable containing the list of all brands\n   */\n  getAllBrands(): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/brands`);\n  }\n\n  /**\n   * Fetches a specific brand by its ID\n   * @param id The ID of the brand to fetch\n   * @returns An Observable containing the brand data\n   */\n  getSpecificBrands(id: string): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/brands/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardForOrdersComponent.html":{"url":"components/CardForOrdersComponent.html","title":"component - CardForOrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardForOrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card-for-orders\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                \n            \n\n            \n                styleUrls\n                ./card-for-orders.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-for-orders.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                hearts\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                wishlistItems\n                            \n                            \n                                    Private\n                                    Readonly\n                                wishlistService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                isItemInWishlist\n                            \n                            \n                                loadWishlist\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showMultipleHearts\n                            \n                            \n                                toggleItemInWishlist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        products\n                    \n                \n                \n                    \n                        Type :         Iproduct[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isItemInWishlist\n                        \n                    \n                \n            \n            \n                \nisItemInWishlist(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadWishlist\n                        \n                    \n                \n            \n            \n                \nloadWishlist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMultipleHearts\n                        \n                    \n                \n            \n            \n                \nshowMultipleHearts(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleItemInWishlist\n                        \n                    \n                \n            \n            \n                \ntoggleItemInWishlist(id: string, event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hearts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wishlistItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wishlistService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WishlistService)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject, Input } from '@angular/core';\nimport { CartService } from '../../../../core/services/cart/cart.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { WishlistService } from '../../../../core/services/wishlist/wishlist.service';\nimport { RouterLink } from '@angular/router';\nimport { Iproduct } from '../../../interfaces/iproduct';\n\n@Component({\n  selector: 'app-card-for-orders',\n  imports: [CommonModule, RouterLink],\n  templateUrl: './card-for-orders.component.html',\n  styleUrls: ['./card-for-orders.component.scss'],\n})\nexport class CardForOrdersComponent {\n  // Injecting required services\n  private readonly cartService = inject(CartService);\n  private readonly toastrService = inject(ToastrService);\n  private readonly wishlistService = inject(WishlistService);\n\n  // Input property to receive the list of products from the parent component\n  @Input() products: Iproduct[] = [];\n  \n  // Array to store animated heart objects\n  hearts: any[] = [];\n  \n  // Array to store IDs of products in the wishlist\n  wishlistItems: string[] = [];\n\n  ngOnInit(): void {\n    // Load wishlist items when the component initializes\n    this.loadWishlist();\n  }\n\n  // Function to add a product to the shopping cart\n  addToCart(id: string): void {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.toastrService.success('Product added to cart successfully', 'Success', {\n          timeOut: 3000,\n          closeButton: true,\n          progressBar: true,\n        });\n        // Update the cart item count\n        this.cartService.cartNumber.set(res.numOfCartItems);\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  // Function to load the wishlist items from the server\n  loadWishlist(): void {\n    this.wishlistService.getWishlist().subscribe({\n      next: (response) => {\n        // Extract product IDs from the response and store them in the wishlist array\n        this.wishlistItems = response.data.map((product: any) => product.id);\n      },\n      error: (error) => console.error('Error loading wishlist:', error),\n    });\n  }\n\n  // Check if a specific product is in the wishlist\n  isItemInWishlist(id: string): boolean {\n    return this.wishlistItems.includes(id);\n  }\n\n  // Function to add or remove a product from the wishlist\n  toggleItemInWishlist(id: string, event: MouseEvent): void {\n    if (this.isItemInWishlist(id)) {\n      // If the product is already in the wishlist, remove it\n      this.wishlistService.removeProductFromWishlist(id).subscribe({\n        next: (response) => (this.wishlistItems = response.data),\n        error: (error) => console.error('Error removing from wishlist:', error),\n      });\n    } else {\n      // If not in wishlist, add the product and show the heart animation\n      this.wishlistService.addProductToWishlist(id).subscribe({\n        next: (response) => {\n          this.wishlistItems = response.data;\n          this.showMultipleHearts(event.clientX, event.clientY);\n        },\n        error: (error) => console.error('Error adding to wishlist:', error),\n      });\n    }\n  }\n\n  // Function to generate and display animated hearts when adding to the wishlist\n  showMultipleHearts(x: number, y: number): void {\n    const numHearts = 15; // Number of hearts to display\n    const boundary = { minX: 0, maxX: window.innerWidth, minY: 0, maxY: window.innerHeight };\n\n    for (let i = 0; i  {\n      const currentTime = Date.now();\n      this.hearts = this.hearts.filter((h: any) => h.id > currentTime);\n    }, 3000);\n  }\n}\n\n\n    \n\n    \n        \n\n\n  \n  @for (prod of products; track prod.id) {\n  \n    \n    \n      \n      \n    \n\n    \n    \n      @for (heart of hearts; track $index) {\n      \n        ❤️\n      \n      }\n    \n\n    \n    \n      \n        \n      \n      \n        \n        \n          {{ prod.category.name }}\n        \n        \n        \n          {{ prod.title }}\n        \n        \n        \n          \n            {{ prod.price }} EGP\n          \n          \n            \n            \n              {{ prod.ratingsAverage }}\n            \n          \n        \n      \n    \n\n    \n    \n      \n        \n       Add to Cart\n    \n  \n  }\n\n\n    \n\n    \n                \n                    ./card-for-orders.component.scss\n                \n                .hearts-container {\n    @apply fixed top-0 left-0 w-screen h-screen pointer-events-none z-50;\n  }\n  \n  .heart {\n    @apply absolute text-2xl opacity-100;\n    animation: floatUp 2s ease-out forwards;\n  }\n  \n  @keyframes floatUp {\n    0% {\n      transform: translateY(0) scale(1);\n      opacity: 1;\n    }\n    50% {\n      transform: translateY(-50px) scale(1.2);\n    }\n    100% {\n      transform: translateY(-100px) scale(0);\n      opacity: 0;\n    }\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (prod of products; track prod.id) {                                        @for (heart of hearts; track $index) {              ❤️            }                                                                {{ prod.category.name }}                                  {{ prod.title }}                                              {{ prod.price }} EGP                                                          {{ prod.ratingsAverage }}                                                                     Add to Cart        }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardForOrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartComponent.html":{"url":"components/CartComponent.html","title":"component - CartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cart/cart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart\n            \n\n\n            \n                imports\n                \n                            CurrencyPipe\n                            RouterLink\n                            SweetAlert2Module\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cart.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cart.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activateRoute\n                            \n                            \n                                cartDetails\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearItems\n                            \n                            \n                                getCartData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearItems\n                        \n                    \n                \n            \n            \n                \nclearItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCartData\n                        \n                    \n                \n            \n            \n                \ngetCartData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCount\n                        \n                    \n                \n            \n            \n                \nupdateCount(id: string, count: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/cart/cart.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                count\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activateRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICart\n\n                    \n                \n                \n                    \n                        Default value : {} as ICart\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/cart/cart.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CartService } from './../../core/services/cart/cart.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { ICart } from '../../shared/interfaces/icart';\nimport { CurrencyPipe } from '@angular/common';\nimport { ActivatedRoute, RouterLink } from '@angular/router';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-cart',\n  imports: [CurrencyPipe, RouterLink, SweetAlert2Module],\n  templateUrl: './cart.component.html',\n  styleUrl: './cart.component.scss'\n})\nexport class CartComponent implements OnInit {\n  private readonly cartService = inject(CartService);\n  private readonly toastrService= inject(ToastrService);\n  private readonly activateRoute = inject(ActivatedRoute);\n  \n  cartDetails:ICart = {} as ICart\n\n\n\n\n  ngOnInit(): void {\n    this.getCartData();\n  }\n// get cart data\n  getCartData():void{\n    this.activateRoute.data.subscribe({\n      next: (res) => {\n        console.log(res);\n        this.cartDetails = res['cart'].data;\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    });\n\n  }\n\n// remove item\n  removeItem(id:string):void{\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      theme:'auto',\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\"\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.cartService.removeSpecificCartItem(id).subscribe({\n          next: (res) => {\n            console.log(res);\n            this.cartDetails = res.data;\n            if (res.status === 'success') {\n              this.toastrService.success(\"Product removed successfully\", 'Success', {\n                timeOut: 3000,\n                closeButton: true,\n                progressBar: true\n              });\n            }\n            this.cartService.cartNumber.set(res.numOfCartItems);\n          },\n          error: (err) => {\n            console.log(err);\n          }\n        });\n        Swal.fire({\n          title: \"Deleted!\",\n          text: \"Your file has been deleted.\",\n          icon: \"success\",\n          theme:'auto',\n        });\n      }\n    });\n\n  }\n\n// clear cart\n  clearItems():void{\n    this.cartService.clearCart().subscribe({\n      next:(res)=>{\n        console.log(res);\n        if(res.message === 'success'){\n          this.cartDetails = {} as ICart;\n          this.cartService.cartNumber.set(0);\n        }\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n  }\n\n// update count\n  updateCount(id:string, count:number):void{\n    this.cartService.updateProductQuantity(id, count).subscribe({\n      next:(res)=>{\n        console.log(res);\n        this.cartDetails = res.data;\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n    \n    \n    Shopping Cart\n    \n    @if (cartDetails.totalCartPrice) {\n        \n            Total Price: {{cartDetails.totalCartPrice | currency:' EGP'}} L.E\n        \n            @for (prod of cartDetails.products ; track prod.product.id) {\n                \n                \n                    \n                        \n                            \n                                \n                            \n        \n                            \n                                {{prod.product.title}}\n                                {{prod.product.category.name}}\n        \n                                \n                                     \n                                    REMOVE\n                                \n                            \n                        \n        \n                        \n                              {{prod.price * prod.count  | currency:' EGP '}} L.E\n        \n                            \n                                \n                                    \n                                \n        \n                                {{prod.count}}\n    \n                                \n                                    \n                                \n                            \n                        \n                    \n        \n                    \n        \n                \n            }\n    \n            \n                \n                      \n                    Checkout\n                \n                \n                      \n                    Clear Cart \n                \n            \n         \n    }\n    @else{\n        \n            Your Cart is Empty\n        \n    }\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Shopping Cart        @if (cartDetails.totalCartPrice) {                    Total Price: {{cartDetails.totalCartPrice | currency:\\' EGP\\'}} L.E                    @for (prod of cartDetails.products ; track prod.product.id) {                                                                                                                                                                                                                                        {{prod.product.title}}                                {{prod.product.category.name}}                                                                                                                 REMOVE                                                                                                                                                  {{prod.price * prod.count  | currency:\\' EGP \\'}} L.E                                                                                                                                                                                {{prod.count}}                                                                                                                                                                                                                                                }                                                                          Checkout                                                                          Clear Cart                                          }    @else{                    Your Cart is Empty            }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartItem.html":{"url":"interfaces/CartItem.html","title":"interface - CartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CartResolver.html":{"url":"guards/CartResolver.html","title":"guard - CartResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    CartResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/resolvers/cartresolver/cart.resolver.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resolvers/cartresolver/cart.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resolvers/cartresolver/cart.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CartService } from '../../services/cart/cart.service';\nimport { ICart } from '../../../shared/interfaces/icart';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartResolver implements Resolve {\n  constructor(private cartService: CartService) {}\n\n  // The resolve method fetches data before loading the component\n  resolve(): Observable {\n    // Returns the cart data from the CartService\n    return this.cartService.getLoggedUserCart(); \n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartNumber\n                            \n                            \n                                myToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                clearCart\n                            \n                            \n                                getLoggedUserCart\n                            \n                            \n                                removeSpecificCartItem\n                            \n                            \n                                updateProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/cart/cart.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToCart\n                        \n                    \n                \n            \n            \n                \naddProductToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Adds a product to the cart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The product ID to add to the cart\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the response data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Clears all items from the cart\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the response data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedUserCart\n                        \n                    \n                \n            \n            \n                \ngetLoggedUserCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Retrieves the logged-in user's cart data\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the cart data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSpecificCartItem\n                        \n                    \n                \n            \n            \n                \nremoveSpecificCartItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Removes a specific item from the cart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the cart item to remove\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the response data\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProductQuantity\n                        \n                    \n                \n            \n            \n                \nupdateProductQuantity(id: string, newCount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/cart/cart.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Updates the quantity of a specific product in the cart\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the product to update\n\n                                            \n                                        \n                                        \n                                                newCount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new quantity to set for the product\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable with the response data\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cart/cart.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : localStorage.getItem('userToken')\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/cart/cart.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, signal, WritableSignal } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // Signal to store the cart item count, replacing the BehaviorSubject\n  cartNumber: WritableSignal = signal(0);\n\n  // Store the user token from local storage\n  myToken: any = localStorage.getItem('userToken');\n\n  /**\n   * Adds a product to the cart\n   * @param id The product ID to add to the cart\n   * @returns An Observable with the response data\n   */\n  addProductToCart(id: string): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/cart`,\n      {\n        \"productId\": id\n      },\n      {\n        headers: {\n          token: this.myToken\n        }\n      }\n    );\n  }\n\n  /**\n   * Retrieves the logged-in user's cart data\n   * @returns An Observable with the cart data\n   */\n  getLoggedUserCart(): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/cart`,\n      {\n        headers: {\n          token: this.myToken\n        }\n      }\n    );\n  }\n\n  /**\n   * Removes a specific item from the cart\n   * @param id The ID of the cart item to remove\n   * @returns An Observable with the response data\n   */\n  removeSpecificCartItem(id: string): Observable {\n    return this.httpClient.delete(`${environment.baseUrl}/api/v1/cart/${id}`,\n      {\n        headers: {\n          token: this.myToken\n        }\n      }\n    );\n  }\n\n  /**\n   * Clears all items from the cart\n   * @returns An Observable with the response data\n   */\n  clearCart(): Observable {\n    return this.httpClient.delete(`${environment.baseUrl}/api/v1/cart`);\n  }\n\n  /**\n   * Updates the quantity of a specific product in the cart\n   * @param id The ID of the product to update\n   * @param newCount The new quantity to set for the product\n   * @returns An Observable with the response data\n   */\n  updateProductQuantity(id: string, newCount: number): Observable {\n    return this.httpClient.put(`${environment.baseUrl}/api/v1/cart/${id}`,\n      {\n        \"count\": newCount\n      },\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesComponent.html":{"url":"components/CategoriesComponent.html","title":"component - CategoriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/categories/categories.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories\n            \n\n\n            \n                imports\n                \n                            DatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./categories.component.html\n            \n\n\n\n            \n                styleUrl\n                ./categories.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategories\n                            \n                            \n                                getSpecificCategories\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificCategories\n                        \n                    \n                \n            \n            \n                \ngetSpecificCategories(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/categories/categories.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriseService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/categories/categories.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Icategory } from '../../shared/interfaces/icategory';\nimport { CategoriseService } from './../../core/services/categorise/categorise.service';\nimport { Component, inject, signal, WritableSignal } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-categories',\n  imports: [DatePipe],\n  templateUrl: './categories.component.html',\n  styleUrl: './categories.component.scss'\n})\nexport class CategoriesComponent {\n  \n  private readonly categoriseService = inject(CategoriseService);\n\n  categories:WritableSignal = signal([]);\n  \n  \n  ngOnInit(): void {\n    this.getAllCategories();\n  }\n  // all categories\n  getAllCategories():void{\n    this.categoriseService.getAllCategories().subscribe({\n      next: (res) => {\n        this.categories.set( res.data)\n        console.log(res.data);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n// specific categories\n  getSpecificCategories(id:string):void{\n    this.categoriseService.getSpecificCategories(id).subscribe({\n      next: (res) => {\n        this.categories.set( res.data)\n        console.log(res.data);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            Our Categories\n        \n            Lorem ipsum dolor sit amet\n            consectetur adipisicing elit nam maxime quas fugiat tempore blanditiis, eveniet quia accusantium.\n        \n            \n                @for (categ of categories(); track $index) {\n    \n                    \n                        \n                        \n                            {{categ.name}}\n                            \n                                 Updated At: {{categ.updatedAt |date:'mm/dd/yyyy' }}\n                            \n                            In Stock\n\n                            More Details\n                        \n                    \n\n                }\n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Our Categories                    Lorem ipsum dolor sit amet            consectetur adipisicing elit nam maxime quas fugiat tempore blanditiis, eveniet quia accusantium.                                    @for (categ of categories(); track $index) {                                                                                                    {{categ.name}}                                                             Updated At: {{categ.updatedAt |date:\\'mm/dd/yyyy\\' }}                                                        In Stock                            More Details                                                            }                        '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriseService.html":{"url":"injectables/CategoriseService.html","title":"injectable - CategoriseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/categorise/categorise.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategories\n                            \n                            \n                                getSpecificCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/categorise/categorise.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/categorise/categorise.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Fetches all available categories from the server\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the list of categories\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificCategories\n                        \n                    \n                \n            \n            \n                \ngetSpecificCategories(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/categorise/categorise.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Retrieves details of a specific category by its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the category to fetch\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the category data\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriseService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Fetches all available categories from the server\n   * @returns An Observable containing the list of categories\n   */\n  getAllCategories(): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/categories`);\n  }\n\n  /**\n   * Retrieves details of a specific category by its ID\n   * @param id The ID of the category to fetch\n   * @returns An Observable containing the category data\n   */\n  getSpecificCategories(id: string): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/categories/${id}`);\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-1.html":{"url":"interfaces/Category-1.html","title":"interface - Category-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string\n  cartOwner: string\n  products: Product[]\n  createdAt: string\n  updatedAt: string\n  __v: number\n  totalCartPrice: number\n}\n\nexport interface Product {\n  count: number\n  _id: string\n  product: Product2\n  price: number\n}\n\nexport interface Product2 {\n  subcategory: Subcategory[]\n  _id: string\n  title: string\n  quantity: number\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-2.html":{"url":"interfaces/Category-2.html","title":"interface - Category-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category-3.html":{"url":"interfaces/Category-3.html","title":"interface - Category-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwishlist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwishlist {\n        sold: number\n        images: string[]\n        subcategory: Subcategory[]\n        ratingsQuantity: number\n        _id: string\n        title: string\n        slug: string\n        description: string\n        quantity: number\n        price: number\n        imageCover: string\n        category: Category\n        brand: Brand\n        ratingsAverage: number\n        createdAt: string\n        updatedAt: string\n        __v: number\n        id: string\n      }\n      \n      export interface Subcategory {\n        _id: string\n        name: string\n        slug: string\n        category: string\n      }\n      \n      export interface Category {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      }\n      \n      export interface Brand {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      \n      \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/chat/chat.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat\n            \n\n\n            \n                imports\n                \n                            SweetAlert2Module\n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chat.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isChatOpen\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeChat\n                            \n                            \n                                sendMessage\n                            \n                            \n                                toggleChat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, toastrService: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/chat/chat.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeChat\n                        \n                    \n                \n            \n            \n                \ncloseChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/chat/chat.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/chat/chat.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleChat\n                        \n                    \n                \n            \n            \n                \ntoggleChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/chat/chat.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chatForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: [null, [Validators.required]],\n    email: [null, [Validators.required, Validators.email]],\n    phone: [null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]],\n    message: [null, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/chat/chat.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/chat/chat.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isChatOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/chat/chat.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/chat/chat.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\nimport { Component, inject, Renderer2 } from '@angular/core';\nimport Swal from 'sweetalert2';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-chat',\n  imports: [SweetAlert2Module, ReactiveFormsModule, CommonModule],\n  templateUrl: './chat.component.html',\n  styleUrl: './chat.component.scss'\n})\nexport class ChatComponent {\n\n  constructor(private renderer: Renderer2, private toastrService: ToastrService) { }\n  \n  // Injecting FormBuilder for form creation\n  private readonly formBuilder = inject(FormBuilder);\n  \n  // Indicates if a loading state is active\n  isLoading: boolean = false;\n  \n  // Reactive form setup with validation rules\n  chatForm: FormGroup = this.formBuilder.group({\n    name: [null, [Validators.required]],\n    email: [null, [Validators.required, Validators.email]],\n    phone: [null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]],\n    message: [null, [Validators.required]],\n  });\n\n  // Controls the chat window's visibility\n  isChatOpen = false;\n\n  // Toggles the chat window open/close state\n  toggleChat(): void {\n    this.isChatOpen = !this.isChatOpen;\n  }\n\n  // Handles form submission when sending a message\n  sendMessage(): void {\n    if (this.chatForm.valid) {\n      Swal.fire({\n        icon: 'success',\n        title: 'Will contact you soon',\n        showConfirmButton: false,\n        timer: 2500,\n        theme: 'auto'\n      }).then(() => {\n        this.isChatOpen = false; // Closes chat window after confirmation\n        this.chatForm.reset(); // Resets form fields\n      });\n    }\n  }\n\n  // Closes the chat window without sending a message\n  closeChat(): void {\n    this.isChatOpen = false;\n  }\n}\n\n\n\n\n    \n\n    \n        \n\n\nChat With Us\n\n\n\n\n@if (isChatOpen) {\n\n\n    \n    \n\n        \n        \n            Fresh Cart Online Support\n            \n                -\n            \n        \n\n        \n        \n            \n\n                \n                \n                \n                \n                \n                    @let nameControl = chatForm.get('name');\n                    @if (nameControl?.hasError('required') && nameControl?.touched) {\n                        *Your name/display name is required\n                    }\n                \n\n                \n                \n                \n                \n                \n                    @let emailControl = chatForm.get('email');\n                    @if (emailControl?.hasError('required') && emailControl?.touched) {\n                        *Email is required\n                    }\n                \n\n                \n                \n                \n                \n                \n                    @let phoneControl = chatForm.get('phone');\n                    @if (phoneControl?.hasError('required') && phoneControl?.touched) {\n                        *Kindly provide an Egyptian phone number\n                    }\n                \n\n                \n                \n                \n\n                \n                \n                    Start Chat\n                \n\n            \n        \n    \n\n}\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Chat With Us@if (isChatOpen) {                                    Fresh Cart Online Support                            -                                                                                                                                                    @let nameControl = chatForm.get(\\'name\\');                    @if (nameControl?.hasError(\\'required\\') && nameControl?.touched) {                        *Your name/display name is required                    }                                                                                                                    @let emailControl = chatForm.get(\\'email\\');                    @if (emailControl?.hasError(\\'required\\') && emailControl?.touched) {                        *Email is required                    }                                                                                                                    @let phoneControl = chatForm.get(\\'phone\\');                    @if (phoneControl?.hasError(\\'required\\') && phoneControl?.touched) {                        *Kindly provide an Egyptian phone number                    }                                                                                                                    Start Chat                                        }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/checkout/checkout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./checkout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activatedRoute\n                            \n                            \n                                cartId\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                checkOutForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                    Private\n                                    Readonly\n                                ordersService\n                            \n                            \n                                    Private\n                                    Readonly\n                                router\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCartId\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                payLater\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCartId\n                        \n                    \n                \n            \n            \n                \ngetCartId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payLater\n                        \n                    \n                \n            \n            \n                \npayLater()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/checkout/checkout.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkOutForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        ordersService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(OrdersService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/checkout/checkout.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CartService } from './../../core/services/cart/cart.service';\nimport { OrdersService } from './../../core/services/orders/orders.service';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Component, inject, OnInit } from '@angular/core';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'app-checkout',\n  imports: [ReactiveFormsModule, TranslatePipe],\n  templateUrl: './checkout.component.html',\n  styleUrl: './checkout.component.scss'\n})\nexport class CheckoutComponent implements OnInit {\n\n  private readonly formBuilder = inject(FormBuilder);\n  private readonly activatedRoute = inject(ActivatedRoute);\n  private readonly ordersService = inject(OrdersService);\n  private readonly router = inject(Router);\n  private readonly cartService= inject(CartService);\n\n  checkOutForm!:FormGroup;\n  cartId:string = '';\n  userId:string = '';\n// form\n  initForm():void{\n    this.checkOutForm = this.formBuilder.group({\n      details:  [null, [Validators.required]],\n      city: [null, [Validators.required]],\n      phone: [null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]],\n  })\n  }\n\nngOnInit(): void {\n      this.initForm();\n      this.getCartId();\n  }\n// get cart id\ngetCartId():void{\n  this.activatedRoute.paramMap.subscribe({\n    next:(param)=>{\n      this.cartId = param.get('id') !;\n    }\n  })\n}\n\n \n// submit form for visa payment\n  submitForm():void{\n    this.cartId\n    this.ordersService.cheakOutPayment(this.cartId, this.checkOutForm.value).subscribe({\n      next:(res)=>{\n        console.log(res);\n        if(res.status === 'success'){\n          open(res.session.url, '_self');\n        }\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n  }\n\n  // submit form for cash payment and go to all orders\n  payLater():void{\n    this.ordersService.getOrdersCash(this.cartId, this.checkOutForm.value).subscribe({\n      next:(res)=>{\n        console.log(res);\n        if(res.status === 'success'){\n         this.userId = res.data.user;\n         this.cartService.cartNumber.set(0);\n          this.router.navigate(['/allorders', this.userId]);\n        }\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n  }\n\n\n\n\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        {{ 'checkout.Checkout' | translate }}\n      \n\n      \n      \n        \n          {{ 'checkout.Shipping_Address' | translate }}\n        \n\n        \n          \n          \n            \n              {{ 'checkout.Details' | translate }}\n            \n            \n          \n\n          \n          \n            \n              {{ 'checkout.City' | translate }}\n            \n            \n          \n          \n          \n            \n              {{ 'checkout.Phone_Number' | translate }}\n            \n            \n          \n\n          \n          \n\n          \n            \n             \n              \n             \n             \n               {{ 'checkout.Payment' | translate }}\n             \n            \n          \n            \n              \n              Pay Cash\n            \n          \n        \n      \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ \\'checkout.Checkout\\' | translate }}                                    {{ \\'checkout.Shipping_Address\\' | translate }}                                                              {{ \\'checkout.Details\\' | translate }}                                                                                {{ \\'checkout.City\\' | translate }}                                                                                {{ \\'checkout.Phone_Number\\' | translate }}                                                                                                                                                {{ \\'checkout.Payment\\' | translate }}                                                                           Pay Cash                                          '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DarkThemeSelectorService.html":{"url":"injectables/DarkThemeSelectorService.html","title":"injectable - DarkThemeSelectorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DarkThemeSelectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/darkmood/dark-theme-selector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addClassToHtml\n                            \n                            \n                                    Private\n                                removeClassFromHtml\n                            \n                            \n                                    Private\n                                removeFromLocalStorage\n                            \n                            \n                                setDarkTheme\n                            \n                            \n                                setLightTheme\n                            \n                            \n                                setSystemTheme\n                            \n                            \n                                    Private\n                                setToLocalStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addClassToHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    addClassToHtml(className: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Add a CSS class to the  element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                className\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The class name to add\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeClassFromHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeClassFromHtml(className: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Remove a CSS class from the  element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                className\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The class name to remove\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeFromLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Remove the theme preference from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkTheme\n                        \n                    \n                \n            \n            \n                \nsetDarkTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Set the theme to Dark mode\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLightTheme\n                        \n                    \n                \n            \n            \n                \nsetLightTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Set the theme to Light mode\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSystemTheme\n                        \n                    \n                \n            \n            \n                \nsetSystemTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Set the theme to follow the system's color scheme\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setToLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setToLocalStorage(theme: AppTheme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Save the selected theme to localStorage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            AppTheme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The theme to store\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(selectedTheme)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/darkmood/dark-theme-selector.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\n\n// Enum which contains only LIGHT and DARK themes, if DEVICE theme selected it means you don't need a value for this purpose. DEVICE theme means no user preferences in the app. That is why value should be undefined (removed from localStorage).\nexport enum AppTheme {\n  LIGHT = 'light',\n  DARK = 'dark',\n}\n// for SSR and SSG support.\nconst CLIENT_RENDER = typeof localStorage !== 'undefined';\n// name of variable in localStorage.\nconst LS_THEME = 'theme';\n// previously selected value by user, if available.\nlet selectedTheme: AppTheme|undefined = undefined;\n// if render happens on client side\nif (CLIENT_RENDER) {\n  // then set value from localStorage or if it not available leave it undefined.\n  selectedTheme = localStorage.getItem(LS_THEME) as AppTheme || undefined;\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class DarkThemeSelectorService {\n  // Reactive signal to store the current theme\n  currentTheme = signal(selectedTheme);\n\n  /**\n   * Set the theme to Light mode\n   */\n  setLightTheme() {\n    this.currentTheme.set(AppTheme.LIGHT);\n    this.setToLocalStorage(AppTheme.LIGHT);\n    this.removeClassFromHtml('dark');\n  }\n\n  /**\n   * Set the theme to Dark mode\n   */\n  setDarkTheme() {\n    this.currentTheme.set(AppTheme.DARK);\n    this.setToLocalStorage(AppTheme.DARK);\n    this.addClassToHtml('dark');\n  }\n\n  /**\n   * Set the theme to follow the system's color scheme\n   */\n  setSystemTheme() {\n    this.currentTheme.set(undefined);\n    this.removeFromLocalStorage();\n\n    // Apply the dark class if the system is in dark mode\n    if (isSystemDark()) {\n      this.addClassToHtml('dark');\n    } else {\n      this.removeClassFromHtml('dark');\n    }\n  }\n\n  /**\n   * Add a CSS class to the  element\n   * @param className The class name to add\n   */\n  private addClassToHtml(className: string) {\n    if (CLIENT_RENDER) {\n      this.removeClassFromHtml(className);\n      document.documentElement.classList.add(className);\n    }\n  }\n\n  /**\n   * Remove a CSS class from the  element\n   * @param className The class name to remove\n   */\n  private removeClassFromHtml(className: string) {\n    if (CLIENT_RENDER) {\n      document.documentElement.classList.remove(className);\n    }\n  }\n\n  /**\n   * Save the selected theme to localStorage\n   * @param theme The theme to store\n   */\n  private setToLocalStorage(theme: AppTheme) {\n    if (CLIENT_RENDER) {\n      localStorage.setItem(LS_THEME, theme);\n    }\n  }\n\n  /**\n   * Remove the theme preference from localStorage\n   */\n  private removeFromLocalStorage() {\n    if (CLIENT_RENDER) {\n      localStorage.removeItem(LS_THEME);\n    }\n  }\n}\n\n/**\n * Checks if the system prefers dark mode\n * @returns True if the system is in dark mode, otherwise false\n */\nfunction isSystemDark() {\n  if (typeof window !== 'undefined') {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  } else {\n    return false;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/details/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                activateRoute\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                detailsProduct\n                            \n                            \n                                productImages\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                    Private\n                                    Readonly\n                                wishlistService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                addToWishlist\n                            \n                            \n                                getProductDetails\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setMainImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/details/details.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addToWishlist\n                        \n                    \n                \n            \n            \n                \naddToWishlist(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProductDetails\n                        \n                    \n                \n            \n            \n                \ngetProductDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMainImage\n                        \n                    \n                \n            \n            \n                \nsetMainImage(img: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/details/details.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                img\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        activateRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailsProduct\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productImages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wishlistService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WishlistService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/details/details.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { WishlistService } from './../../core/services/wishlist/wishlist.service';\nimport { CartService } from './../../core/services/cart/cart.service';\nimport { Component, inject, OnInit, signal } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Iproduct } from '../../shared/interfaces/iproduct';\nimport { ToastrService } from 'ngx-toastr';\nimport { Renderer2 } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-details',\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent  implements OnInit{\nprivate readonly activateRoute = inject(ActivatedRoute);\nprivate readonly cartService = inject(CartService);\nprivate readonly toastrService = inject(ToastrService);\nprivate readonly wishlistService = inject(WishlistService);\n\n\ndetailsProduct = signal(null);\nproductImages = signal([]);\n\nconstructor(private renderer: Renderer2) {}\n\nngOnInit(): void {\n  this.getProductDetails();\n}\n\n\n\n// get product details\n  getProductDetails(): void {\n    this.activateRoute.data.subscribe({\n      next: (res) => {\n        console.log(res);\n          this.detailsProduct.set(res['product'].data); // البيانات من الـ Resolver\n          this.productImages.set(res['product'].data.images);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n  });\n  }\n\n// set main image\nsetMainImage(img: string): void {\n  const mainImage = this.renderer.selectRootElement('#mainImage', true);\n  this.renderer.setAttribute(mainImage, 'src', img);\n}\n\n// add to cart\n  addToCart(id:string):void{\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.toastrService.success('Product added to cart successfully', 'Success', {\n          timeOut: 3000,\n          closeButton: true,\n          progressBar: true\n        });\n        this.cartService.cartNumber.set(res.numOfCartItems);\n      }, \n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n  // add to wishlist\n  addToWishlist(id:string):void{\n    this.wishlistService.addProductToWishlist(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.toastrService.success('Product added to wishlist successfully', 'Success', {\n          timeOut: 3000,\n          closeButton: true,\n          progressBar: true\n        });\n      }, \n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n}\n\n\n\n    \n\n    \n        \n\n  @if (detailsProduct()) {\n  \n    \n      \n      \n      \n        \n        \n          @for (img of productImages(); track $index) {\n            \n          }\n        \n        \n         \n          \n        \n      \n\n      \n      \n        {{ detailsProduct()?.title }}\n        \n          SKU: {{ detailsProduct()?.sold }}\n        \n        \n          {{ detailsProduct()?.price }} L.E\n        \n\n        \n        \n          \n            \n          \n          \n            {{ detailsProduct()?.ratingsAverage }} ({{ detailsProduct()?.ratingsQuantity }} reviews)\n          \n        \n\n        \n          {{ detailsProduct()?.description }}\n        \n        \n          Color:\n          \n            \n            \n            \n          \n        \n        \n          Availability:\n          \n            In Stock: {{ detailsProduct()?.quantity }}\n          \n        \n\n        \n        \n          \n             Add to Cart\n          \n          \n            ❤️ Wishlist\n          \n        \n        \n        \n          Key Features:\n          \n            {{ detailsProduct()?.description }}\n            {{ detailsProduct()?.category?.name }}\n            {{ detailsProduct()?.brand?.name }}\n            \n          \n        \n      \n    \n  \n} @else {\n  \n    \n      Product Not Found\n      The product you are looking for does not exist.\n    \n  \n}\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if (detailsProduct()) {                                                  @for (img of productImages(); track $index) {                      }                                                                     {{ detailsProduct()?.title }}                  SKU: {{ detailsProduct()?.sold }}                          {{ detailsProduct()?.price }} L.E                                                                              {{ detailsProduct()?.ratingsAverage }} ({{ detailsProduct()?.ratingsQuantity }} reviews)                                    {{ detailsProduct()?.description }}                          Color:                                                                                  Availability:                      In Stock: {{ detailsProduct()?.quantity }}                                                         Add to Cart                                ❤️ Wishlist                                            Key Features:                      {{ detailsProduct()?.description }}            {{ detailsProduct()?.category?.name }}            {{ detailsProduct()?.brand?.name }}                                          } @else {            Product Not Found      The product you are looking for does not exist.      }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/DetailsResolver.html":{"url":"guards/DetailsResolver.html","title":"guard - DetailsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    DetailsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/resolvers/productresolver/details.resolver.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resolvers/productresolver/details.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolve\n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resolvers/productresolver/details.resolver.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ProductsService } from '../../services/products/products.service';\nimport { Iproduct } from '../../../shared/interfaces/iproduct';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DetailsResolver implements Resolve {\n  constructor(private productService: ProductsService) {}\n\n  // The resolve method fetches product data before loading the component\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    // Get the product ID from the route parameters\n    const id = route.paramMap.get('id');\n    \n    // Return the specific product data from the service\n    return this.productService.getSpecificProducts(id!);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FlowbiteService.html":{"url":"injectables/FlowbiteService.html","title":"injectable - FlowbiteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FlowbiteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/flowbite/flowbite.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadFlowbite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/flowbite/flowbite.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFlowbite\n                        \n                    \n                \n            \n            \n                \nloadFlowbite(callback: (flowbite: any) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/flowbite/flowbite.service.ts:14\n                        \n                    \n\n\n            \n                \n                        Dynamically loads the Flowbite library on the browser platform.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    A function to execute once Flowbite is loaded.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlowbiteService {\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n\n  /**\n   * Dynamically loads the Flowbite library on the browser platform.\n   * @param callback A function to execute once Flowbite is loaded.\n   */\n  loadFlowbite(callback: (flowbite: any) => void) {\n    // Check if the code is running in the browser (not server-side)\n    if (isPlatformBrowser(this.platformId)) {\n      // Dynamically import the Flowbite library\n      import('flowbite').then(flowbite => {\n        // Execute the provided callback function with the Flowbite instance\n        callback(flowbite);\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n            \n                imports\n                \n                                ChatComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ChatComponent } from \"../chat/chat.component\";\n\n@Component({\n  selector: 'app-footer',\n  imports: [ChatComponent],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      \n        \n          \n            Call us\n          \n\n          \n            0123456789\n          \n        \n\n        \n          Monday to Friday: 10am - 5pm\n          Weekend: 10am - 3pm\n        \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n      \n\n      \n        \n          \n            Most Researched\n          \n\n          \n            \n              \n                Laptop\n              \n            \n\n            \n              \n                Mobile Devices\n              \n            \n\n            \n              \n                Wearables\n              \n            \n\n            \n              \n                Personal Care For Him\n              \n            \n\n            \n              \n                TV Accessories\n              \n            \n          \n        \n\n        \n          FreshCart\n\n          \n            \n              \n                About\n              \n            \n\n            \n              \n                Enjoy with us Buy Online or Pickup in Store\n              \n            \n\n            \n              \n                More than 50 Stores at your service anywhere\n              \n            \n          \n        \n      \n    \n\n    \n    \n      \n        Download Our App Now\n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n\n    \n    \n\n    \n      \n        \n          \n            \n              Terms & Conditions\n            \n          \n\n          \n            \n              Privacy Policy\n            \n          \n\n          \n            \n              Cookies\n            \n          \n        \n\n        \n          &copy; 2022. FREASH CART. All rights reserved.\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Call us                                0123456789                                    Monday to Friday: 10am - 5pm          Weekend: 10am - 3pm                                                                                                                                                                                                  Most Researched                                                              Laptop                                                                    Mobile Devices                                                                    Wearables                                                                    Personal Care For Him                                                                    TV Accessories                                                              FreshCart                                                    About                                                                    Enjoy with us Buy Online or Pickup in Store                                                                    More than 50 Stores at your service anywhere                                                                            Download Our App Now                                                                                                                                                                      Terms & Conditions                                                          Privacy Policy                                                          Cookies                                                © 2022. FREASH CART. All rights reserved.                    '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotpasswordComponent.html":{"url":"components/ForgotpasswordComponent.html","title":"component - ForgotpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/forgotpassword/forgotpassword.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgotpassword\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgotpassword.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgotpassword.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                resetPassword\n                            \n                            \n                                    Private\n                                    Readonly\n                                roter\n                            \n                            \n                                step\n                            \n                            \n                                verifyCode\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resetPasswordSubmit\n                            \n                            \n                                verifyCodeSubmit\n                            \n                            \n                                verifyEmailSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSubmit\n                        \n                    \n                \n            \n            \n                \nresetPasswordSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCodeSubmit\n                        \n                    \n                \n            \n            \n                \nverifyCodeSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmailSubmit\n                        \n                    \n                \n            \n            \n                \nverifyEmailSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    newPassword: new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/)]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        roter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    resetCode: new FormControl(null, [Validators.required, Validators.pattern(/^[0-9]{6}$/)])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/forgotpassword/forgotpassword.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AuthService } from './../../core/services/auth/auth.service';\nimport { Component, inject } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-forgotpassword',\n  imports: [ReactiveFormsModule, RouterLink, TranslatePipe],\n  templateUrl: './forgotpassword.component.html',\n  styleUrl: './forgotpassword.component.scss'\n})\nexport class ForgotpasswordComponent {\n\n  private readonly authService = inject(AuthService)\n  private readonly roter = inject(Router)\n\n  step:number = 1;\n\n// step 1\n  verifyEmail: FormGroup = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email])\n  })\n  \n// step 2\n  verifyCode: FormGroup = new FormGroup({\n    resetCode: new FormControl(null, [Validators.required, Validators.pattern(/^[0-9]{6}$/)])\n  })\n\n// step 3\n  resetPassword: FormGroup = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    newPassword: new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/)]),\n  })\n\n // verify email step 1\n  verifyEmailSubmit():void{\n\n    this.authService.setEmailVerified(this.verifyEmail.value).subscribe({\n\n      next: (res) => {\n        if(res.statusMsg === 'success'){\n          this.step = 2;\n        }\n\n      },\n      error:(err)=> {\n        console.log(err);\n      }\n    })\n}\n\n// verify code step 2\nverifyCodeSubmit():void{\n\n  let emailValue = this.verifyEmail.get('email')?.value\n  this.resetPassword.get('email')?.patchValue(emailValue);\n\n  this.authService.setCodeVerified(this.verifyCode.value).subscribe({\n\n    next: (res) => {\n      if(res.status === 'Success'){\n        this.step = 3;\n        console.log(res);\n      }\n\n    },\n    error:(err)=> {\n      console.log(err);\n    }\n\n  })\n}\n\n// reset password step 3\nresetPasswordSubmit():void{\n\n  this.authService.setResetPass(this.resetPassword.value).subscribe({\n\n    next: (res) => {\n      localStorage.setItem('userToken', res.token);\n      this.authService.saveUserData();\n      this.roter.navigate(['/home']);\n    },\n    error:(err)=> {\n      console.log(err);\n    }\n\n  })\n}\n\n}\n\n    \n\n    \n        \n\n\n \n@if (step == 1) {\n\n  \n    \n      \n        \n          {{ \"forgotpassword.Forgot_Password\" | translate }}\n        \n        \n          {{ \"messages.Remember_your_password\" | translate }}\n          \n            {{ \"forgotpassword.back_to_login\" | translate }}\n          \n        \n      \n\n      \n        \n          \n            \n              \n                Email address\n              \n              \n                \n              \n              \n                {{\n                  \"messages.Please_include_a_valid_email_address_so_we_can_get_back_to_you\"\n                    | translate\n                }}\n              \n            \n            \n              {{ \"forgotpassword.reset_password\" | translate }}\n            \n          \n        \n      \n    \n  \n\n} \n\n@else if (step == 2) {\n\n  \n    \n      \n        \n        \n          {{ \"messages.Remember_your_password\" | translate }}\n          \n            {{ \"forgotpassword.back_to_login\" | translate }}\n          \n        \n      \n\n      \n        \n          \n            \n              \n                {{ \"forgotpassword.code\" | translate }}\n              \n              \n                \n              \n            \n            \n              {{ \"forgotpassword.confirm_code\" | translate }}\n            \n          \n        \n      \n    \n  \n\n}\n\n\n@else if (step == 3) {\n\n  \n    \n      \n        \n          {{ \"forgotpassword.reset_password\" | translate }}\n        \n      \n\n      \n        \n          \n            \n              \n                {{ \"forgotpassword.Email\" | translate }}\n              \n              \n                \n              \n            \n\n            \n              \n                {{ \"forgotpassword.new_password\" | translate }}\n              \n              \n                \n              \n            \n\n            \n              {{ \"forgotpassword.confirm\" | translate }}\n            \n          \n        \n      \n    \n  \n\n}\n\n\n  \n    \n      \n    \n    View Github\n  \n\n  \n    Contact us!\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' @if (step == 1) {                              {{ \"forgotpassword.Forgot_Password\" | translate }}                          {{ \"messages.Remember_your_password\" | translate }}                      {{ \"forgotpassword.back_to_login\" | translate }}                                                                                          Email address                                                                                        {{                  \"messages.Please_include_a_valid_email_address_so_we_can_get_back_to_you\"                    | translate                }}                                                    {{ \"forgotpassword.reset_password\" | translate }}                                          } @else if (step == 2) {                                      {{ \"messages.Remember_your_password\" | translate }}                      {{ \"forgotpassword.back_to_login\" | translate }}                                                                                          {{ \"forgotpassword.code\" | translate }}                                                                                                {{ \"forgotpassword.confirm_code\" | translate }}                                          }@else if (step == 3) {                              {{ \"forgotpassword.reset_password\" | translate }}                                                                                {{ \"forgotpassword.Email\" | translate }}                                                                                                                {{ \"forgotpassword.new_password\" | translate }}                                                                                                {{ \"forgotpassword.confirm\" | translate }}                                          }                    View Github        Contact us!  '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                            CarouselModule\n                            SearchPipe\n                            FormsModule\n                            TranslatePipe\n                            CommonModule\n                                CardForOrdersComponent\n                                SearchInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoriseService\n                            \n                            \n                                customMainSlider\n                            \n                            \n                                customOptions\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                searchQuery\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategories\n                            \n                            \n                                getAllProducts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchInputChange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchInputChange\n                        \n                    \n                \n            \n            \n                \nonSearchInputChange(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoriseService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CategoriseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customMainSlider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    autoplay: true,\n    mouseDrag: true,\n    touchDrag: false,\n    pullDrag: false,\n    rtl: true,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OwlOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    loop: true,\n    autoplay: true,\n    autoplayTimeout: 3000,\n    autoplayHoverPause: true,\n    mouseDrag: true,\n    touchDrag: true,\n    rtl: true,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      },\n      940: {\n        items: 6\n      }\n    },\n    nav: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CategoriseService } from './../../core/services/categorise/categorise.service';\nimport { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { ProductsService } from '../../core/services/products/products.service';\nimport { Iproduct } from '../../shared/interfaces/iproduct';\nimport { Icategory } from '../../shared/interfaces/icategory';\nimport { CarouselModule, OwlOptions } from 'ngx-owl-carousel-o';\nimport { SearchPipe } from '../../core/pipes/search.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { TranslatePipe } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { CardForOrdersComponent } from \"../../shared/components/ui/card-for-orders/card-for-orders.component\";\nimport { SearchInputComponent } from \"../../shared/components/ui/search-input/search-input.component\";\n\n\n@Component({\n  selector: 'app-home',\n  imports: [CarouselModule, SearchPipe, FormsModule, TranslatePipe, CommonModule, CardForOrdersComponent, SearchInputComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent implements OnInit {\n  private readonly productsService = inject(ProductsService);\n  private readonly categoriseService = inject(CategoriseService);\n  \n  products:WritableSignal = signal([]);\n  categories:WritableSignal = signal([]);\n  searchQuery: string = '';\n\n  ngOnInit(): void {\n    this.getAllProducts();\n    this.getAllCategories();\n  } \n  // customOptions carousel 1\n  customMainSlider: OwlOptions = {\n    loop: true,\n    autoplay: true,\n    mouseDrag: true,\n    touchDrag: false,\n    pullDrag: false,\n    rtl: true,\n    dots: false,\n    navSpeed: 700,\n    navText: ['', ''],\n    items: 1,\n    nav: false\n  }\n// customOptions carousel 2\n  customOptions: OwlOptions = {\n    loop: true,\n    autoplay: true,\n    autoplayTimeout: 3000,\n    autoplayHoverPause: true,\n    mouseDrag: true,\n    touchDrag: true,\n    rtl: true,\n    pullDrag: false,\n    dots: false,\n    navSpeed: 700,\n\n    responsive: {\n      0: {\n        items: 1\n      },\n      400: {\n        items: 2\n      },\n      740: {\n        items: 3\n      },\n      940: {\n        items: 6\n      }\n    },\n    nav: false\n  }\n\n  // search Input\n  onSearchInputChange(query: string) {\n    this.searchQuery = query;\n  }\n\n// get all categories\ngetAllCategories():void{\n  this.categoriseService.getAllCategories().subscribe({\n    next: (res) => {\n      this.categories.set( res.data)\n      console.log(res.data);\n    },\n    error: (err) => {\n      console.log(err);\n    }\n  })\n}\n  // get all products\n  getAllProducts():void{\n  this.productsService.getAllProducts().subscribe({\n    next: (res) => {\n      this.products.set( res.data)\n      console.log(res.data);\n    },\n    error: (err) => {\n      console.log(err);\n    }\n  })\n}\n}\n\n\n    \n\n    \n        \n\n\n\n  \n\n    \n      \n        \n          \n          \n        \n          \n         \n        \n          \n         \n        \n          \n         \n        \n          \n         \n        \n          \n           \n      \n    \n    \n    \n      \n    \n  \n\n\n\n  \n\n\n\n  {{'home.Categories'|translate}}\n  \n    @for (cate of categories(); track cate._id) {\n      \n      \n        \n        {{cate.name}}\n      \n      \n    }\n  \n\n\n\n  \n\n\n\n\n\n{{'home.Popular_Products'|translate}}\n\n\n\n\n\n\n\n  \n  \n\n\n\n  \n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                   {{\\'home.Categories\\'|translate}}      @for (cate of categories(); track cate._id) {                            {{cate.name}}                }    {{\\'home.Popular_Products\\'|translate}}            '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBrand.html":{"url":"interfaces/IBrand.html","title":"interface - IBrand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBrand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/ibrands.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IBrand {\n    _id: string;\n    name: string;\n    slug: string;\n    image: string;\n    createdAt: string;\n    updatedAt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICart.html":{"url":"interfaces/ICart.html","title":"interface - ICart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            cartOwner\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            products\n                                        \n                                \n                                \n                                        \n                                            totalCartPrice\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cartOwner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartOwner:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        products\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        products:     Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Product[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCartPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCartPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string\n  cartOwner: string\n  products: Product[]\n  createdAt: string\n  updatedAt: string\n  __v: number\n  totalCartPrice: number\n}\n\nexport interface Product {\n  count: number\n  _id: string\n  product: Product2\n  price: number\n}\n\nexport interface Product2 {\n  subcategory: Subcategory[]\n  _id: string\n  title: string\n  quantity: number\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IallOrders.html":{"url":"interfaces/IallOrders.html","title":"interface - IallOrders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IallOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            cartItems\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isDelivered\n                                        \n                                \n                                \n                                        \n                                            isPaid\n                                        \n                                \n                                \n                                        \n                                            paymentMethodType\n                                        \n                                \n                                \n                                        \n                                            shippingAddress\n                                        \n                                \n                                \n                                        \n                                            shippingPrice\n                                        \n                                \n                                \n                                        \n                                            taxPrice\n                                        \n                                \n                                \n                                        \n                                            totalOrderPrice\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cartItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cartItems:         CartItem[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartItem[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDelivered\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDelivered:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPaid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPaid:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymentMethodType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymentMethodType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shippingAddress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shippingAddress:         ShippingAddress\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ShippingAddress\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shippingPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        shippingPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taxPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        taxPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalOrderPrice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalOrderPrice:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Icategory.html":{"url":"interfaces/Icategory.html","title":"interface - Icategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Icategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icategory.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Icategory {\n    _id: string\n    name: string\n    slug: string\n    image: string\n    createdAt: string\n    updatedAt: string\n  }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iproduct.html":{"url":"interfaces/Iproduct.html","title":"interface - Iproduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Iproduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Brand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Brand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Iwishlist.html":{"url":"interfaces/Iwishlist.html","title":"interface - Iwishlist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Iwishlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwishlist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            __v\n                                        \n                                \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            images\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            sold\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        __v\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        __v:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Brand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Brand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sold\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sold:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwishlist {\n        sold: number\n        images: string[]\n        subcategory: Subcategory[]\n        ratingsQuantity: number\n        _id: string\n        title: string\n        slug: string\n        description: string\n        quantity: number\n        price: number\n        imageCover: string\n        category: Category\n        brand: Brand\n        ratingsAverage: number\n        createdAt: string\n        updatedAt: string\n        __v: number\n        id: string\n      }\n      \n      export interface Subcategory {\n        _id: string\n        name: string\n        slug: string\n        category: string\n      }\n      \n      export interface Category {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      }\n      \n      export interface Brand {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      \n      \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                            \n                                msgError\n                            \n                            \n                                    Private\n                                    Readonly\n                                rotter\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/)]),\n  },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msgError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rotter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './../../core/services/auth/auth.service';\nimport { Component, inject } from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'app-login',\n  imports: [ReactiveFormsModule, RouterLink, TranslatePipe],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\nprivate readonly authService = inject(AuthService);\nprivate readonly rotter = inject(Router)\n\n\n loginForm:FormGroup = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/)]),\n  },\n  );\n\n  isLoading : boolean = false;\n  msgError : string = \"\";\n  success : string = \"\";\n  submitForm():void{\n\n    if(this.loginForm.valid){\n      this.isLoading = true\n      this.authService.sendLoginForm(this.loginForm.value).subscribe({\n        next: (res) =>{\n          console.log(res);\n          if(res.message === 'success'){\n            this.msgError = \"\";\n            setTimeout(( ) => {\n\n              localStorage.setItem('userToken', res.token);\n\n              this.authService.saveUserData();\n              this.rotter.navigate(['/home']);\n            },  500);\n           \n            this.success = res.message;\n          }\n          this.isLoading = false\n        },\n        error: (err:HttpErrorResponse) =>{\n          console.log(err)\n          this.msgError = err.error.message\n          this.isLoading = false;\n        }\n      })\n    }else{\n      this.loginForm.markAsTouched();\n    }\n  }\n}\n\n    \n\n    \n        \n\n\n  {{ 'login.Login' | translate }}\n  \n  \n      \n      \n          \n              {{ 'login.Email' | translate }}\n          \n          \n\n          @let emailControl = loginForm.get('email');\n          @if (emailControl?.errors && emailControl?.touched) {\n              \n                  @if (emailControl?.hasError('required')) {\n                      {{ 'messages.This_field_is_required' | translate }}\n                  }\n                  @else if (emailControl?.hasError('email')) {\n                      {{ 'messages.Must_be_a_valid_email' | translate }}\n                  }\n              \n          }\n      \n\n      \n      \n          \n              {{ 'login.Password' | translate }}\n          \n          \n\n          @let passwordControl = loginForm.get('password');\n          @if (passwordControl?.errors && passwordControl?.touched) {\n              \n                  @if (passwordControl?.hasError('required')) {\n                      {{ 'messages.This_field_is_required' | translate }}\n                  }\n                  @else if (passwordControl?.hasError('pattern')) {\n                      {{ 'messages.Must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number' | translate }}\n                  }\n              \n          }\n      \n\n      \n      \n          \n              {{ 'login.sign_in' | translate }}\n              @if (isLoading) {\n                  \n              }\n          \n\n          \n          @if (msgError) {\n              {{ msgError }}\n          }\n          @if (success) {\n              {{ success }}\n          }\n\n          \n          \n              {{ 'login.forgot_password' | translate }}\n          \n      \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ \\'login.Login\\' | translate }}                                        {{ \\'login.Email\\' | translate }}                              @let emailControl = loginForm.get(\\'email\\');          @if (emailControl?.errors && emailControl?.touched) {                                @if (emailControl?.hasError(\\'required\\')) {                      {{ \\'messages.This_field_is_required\\' | translate }}                  }                  @else if (emailControl?.hasError(\\'email\\')) {                      {{ \\'messages.Must_be_a_valid_email\\' | translate }}                  }                        }                                          {{ \\'login.Password\\' | translate }}                              @let passwordControl = loginForm.get(\\'password\\');          @if (passwordControl?.errors && passwordControl?.touched) {                                @if (passwordControl?.hasError(\\'required\\')) {                      {{ \\'messages.This_field_is_required\\' | translate }}                  }                  @else if (passwordControl?.hasError(\\'pattern\\')) {                      {{ \\'messages.Must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number\\' | translate }}                  }                        }                                          {{ \\'login.sign_in\\' | translate }}              @if (isLoading) {                                }                              @if (msgError) {              {{ msgError }}          }          @if (success) {              {{ success }}          }                                  {{ \\'login.forgot_password\\' | translate }}                  '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MytranslateService.html":{"url":"injectables/MytranslateService.html","title":"injectable - MytranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MytranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/myTranslate/mytranslate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                renderer2\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeDirection\n                            \n                            \n                                changeLangTranslate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService, id: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/myTranslate/mytranslate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeDirection\n                        \n                    \n                \n            \n            \n                \nchangeDirection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/myTranslate/mytranslate.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Updates the document direction (LTR/RTL) and language attribute\nbased on the saved language preference.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeLangTranslate\n                        \n                    \n                \n            \n            \n                \nchangeLangTranslate(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/myTranslate/mytranslate.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Changes the application's language and updates page direction accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new language code (e.g., 'en' for English, 'ar' for Arabic).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        renderer2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(RendererFactory2).createRenderer(null, null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/myTranslate/mytranslate.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TranslateService } from '@ngx-translate/core';\nimport { Inject, inject, Injectable, PLATFORM_ID, RendererFactory2 } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MytranslateService {\n  // Using Renderer2 for safe DOM manipulation\n  private readonly renderer2 = inject(RendererFactory2).createRenderer(null, null);\n\n  constructor(\n    private translateService: TranslateService,\n    @Inject(PLATFORM_ID) private id: Object\n  ) {\n\n    // Check if the code is running in the browser\n    if (isPlatformBrowser(this.id)) {\n      // Set default language to English\n      this.translateService.setDefaultLang('en');\n\n      // Retrieve saved language from localStorage if available\n      const savedLang = localStorage.getItem('lang');\n\n      // Use saved language if it exists\n      if (savedLang) {\n        this.translateService.use(savedLang);\n      } \n\n      // Apply the correct page direction based on the current language\n      this.changeDirection();\n    }\n  }\n\n  /**\n   * Updates the document direction (LTR/RTL) and language attribute \n   * based on the saved language preference.\n   */\n  changeDirection(): void {\n    if (localStorage.getItem('lang') === 'en') {\n      // Set page direction to Left-to-Right for English\n      this.renderer2.setAttribute(document.documentElement, 'dir', 'ltr');\n      this.renderer2.setAttribute(document.documentElement, 'lang', 'en');\n    } else if (localStorage.getItem('lang') === 'ar') {\n      // Set page direction to Right-to-Left for Arabic\n      this.renderer2.setAttribute(document.documentElement, 'dir', 'rtl');\n      this.renderer2.setAttribute(document.documentElement, 'lang', 'ar');\n    }\n  }\n\n  /**\n   * Changes the application's language and updates page direction accordingly.\n   * \n   * @param lang The new language code (e.g., 'en' for English, 'ar' for Arabic).\n   */\n  changeLangTranslate(lang: string): void {\n    // Save the selected language to localStorage\n    localStorage.setItem('lang', lang);\n\n    // Apply the selected language for translations\n    this.translateService.use(lang);\n\n    // Update the page direction\n    this.changeDirection();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                            TranslatePipe\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                cartCount\n                            \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                isLogin\n                            \n                            \n                                isScrolled\n                            \n                            \n                                    Private\n                                    Readonly\n                                mytranslateService\n                            \n                            \n                                selectedTheme\n                            \n                            \n                                selectedThemeIcon\n                            \n                            \n                                    Private\n                                    Readonly\n                                translateService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cartCountNumber\n                            \n                            \n                                changeLang\n                            \n                            \n                                currentLang\n                            \n                            \n                                flowbiteloaded\n                            \n                            \n                                    Private\n                                loadCurrentTheme\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onWindowScroll\n                            \n                            \n                                setTheme\n                            \n                            \n                                    Private\n                                updateIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLogin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flowbiteService: FlowbiteService, renderer: Renderer2, darkThemeSelectorService: DarkThemeSelectorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/navbar/navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flowbiteService\n                                                  \n                                                        \n                                                                        FlowbiteService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        darkThemeSelectorService\n                                                  \n                                                        \n                                                                        DarkThemeSelectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLogin\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/layouts/navbar/navbar.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:scroll\n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:114\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cartCountNumber\n                        \n                    \n                \n            \n            \n                \ncartCountNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeLang\n                        \n                    \n                \n            \n            \n                \nchangeLang(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n            \n                \ncurrentLang(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flowbiteloaded\n                        \n                    \n                \n            \n            \n                \nflowbiteloaded()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onWindowScroll\n                        \n                    \n                \n            \n            \n                \n                        \n                    onWindowScroll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:scroll', undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/layouts/navbar/navbar.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Signal\n\n                    \n                \n                \n                    \n                        Default value : computed(() => this.cartService.cartNumber())\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScrolled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        mytranslateService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MytranslateService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppTheme | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedThemeIcon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'fas fa-desktop'\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        translateService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(TranslateService)\n                    \n                \n                    \n                        \n                                Defined in src/app/layouts/navbar/navbar.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CartService } from './../../core/services/cart/cart.service';\nimport { MytranslateService } from './../../core/services/myTranslate/mytranslate.service';\nimport { AuthService } from './../../core/services/auth/auth.service';\nimport { Component, computed, HostListener, inject, input, InputSignal, Renderer2,Signal} from '@angular/core';\nimport { FlowbiteService } from '../../core/services/flowbite/flowbite.service';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { TranslatePipe, TranslateService } from '@ngx-translate/core';\nimport { AppTheme, DarkThemeSelectorService } from '../../core/services/darkmood/dark-theme-selector.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [RouterLink, RouterLinkActive, TranslatePipe, CommonModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.scss'\n})\nexport class NavbarComponent {\nconstructor(private flowbiteService: FlowbiteService, \n  private renderer:Renderer2,\n  protected darkThemeSelectorService: DarkThemeSelectorService\n) {\n  this.loadCurrentTheme();\n}\nprivate readonly authService = inject(AuthService);\nprivate readonly mytranslateService = inject(MytranslateService);\nprivate readonly translateService = inject(TranslateService);\nprivate readonly cartService = inject(CartService);\n\nisLogin:InputSignal = input(true);\nselectedTheme: AppTheme | undefined = undefined;\nselectedThemeIcon: string = 'fas fa-desktop';\ncartCount: Signal = computed(() => this.cartService.cartNumber());\nisScrolled = false;\n  \nngOnInit(): void {\n\n    this.flowbiteloaded();\n    this.cartCountNumber();\n  }\n\nflowbiteloaded(): void {\n    this.flowbiteService.loadFlowbite(flowbite => {\n    });\n  }\n\n  cartCountNumber(): void {\n    this.cartService.getLoggedUserCart().subscribe({\n      next: (res) => {\n        this.cartService.cartNumber.set(res.numOfCartItems);\n      }\n    });\n  }\n\n  logout(): void {\n    this.authService.logOut();\n  }\n\n  // Language\n  changeLang(lang: string): void {\n    this.mytranslateService.changeLangTranslate(lang);\n    const dropdown = document.getElementById('dropdownNavbar');\n    if (dropdown) {\n      this.renderer.setStyle(dropdown, 'display', 'none');\n    }\n   \n\n  }\n  currentLang(lang: string ): boolean {\n    return this.translateService.currentLang=== lang\n  }\n\n\n  // set theme Dark and Light\n  setTheme(theme: string): void {\n    switch (theme) {\n      case 'light':\n        this.darkThemeSelectorService.setLightTheme();\n        this.selectedTheme = AppTheme.LIGHT;\n        break;\n      case 'dark':\n        this.darkThemeSelectorService.setDarkTheme();\n        this.selectedTheme = AppTheme.DARK;\n        break;\n      case 'system':\n      default:\n        this.darkThemeSelectorService.setSystemTheme();\n        this.selectedTheme = undefined;\n        break;\n    }\n\n    this.updateIcon();\n  }\n\n// Theme selector loader\n  private loadCurrentTheme() {\n    this.selectedTheme = this.darkThemeSelectorService.currentTheme();\n    this.updateIcon();\n  }\n\n  // update icon\n  private updateIcon() {\n    if (this.selectedTheme === AppTheme.LIGHT) {\n      this.selectedThemeIcon = 'fas fa-sun text-yellow-400 ';\n    } else if (this.selectedTheme === AppTheme.DARK) {\n      this.selectedThemeIcon = 'fas fa-moon text-gray-500 dark:text-sky-500 ';\n    } else {\n      this.selectedThemeIcon = 'fas fa-desktop text-blue-500 dark:text-sky-500  ';\n    }\n  }\n\n\n// Scroll listener\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    this.isScrolled = window.scrollY > 50;\n  }\n}\n\n\n    \n\n    \n        \n \n\n\n\n\n\n  \n\n    \n      \n      FreshCart\n    \n\n    \n      Open main menu\n      \n        \n      \n    \n    \n      @if (isLogin()) {\n      \n        \n          {{ \"navbar.home\" | translate }}\n        \n        \n          {{ \"navbar.products\" | translate }}\n        \n        \n          {{ \"navbar.categories\" | translate }}\n        \n        \n          {{ \"navbar.brands\" | translate }}\n        \n      \n\n      }\n\n      \n\n\n    \n      \n      \n        \n      \n      \n      \n        \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n\n\n        \n          \n             \n\n          \n\n          \n          \n            \n              \n                EN\n              \n            \n            \n              \n                العربية\n              \n            \n          \n        \n        \n        \n\n        @if (!isLogin()) {\n        \n          {{ \"navbar.register\" | translate }}\n        \n        \n          {{ \"navbar.login\" | translate }}\n        \n        }@else {\n\n        \n          \n            \n            {{ cartCount() }}\n          \n        \n        \n          \n        \n\n        \n        \n          \n            \n        \n        }\n      \n    \n  \n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   FreshCart              Open main menu                                  @if (isLogin()) {                        {{ \"navbar.home\" | translate }}                          {{ \"navbar.products\" | translate }}                          {{ \"navbar.categories\" | translate }}                          {{ \"navbar.brands\" | translate }}                    }                                                                                                                                                                                                                                               EN                                                                    العربية                                                                    @if (!isLogin()) {                  {{ \"navbar.register\" | translate }}                          {{ \"navbar.login\" | translate }}                }@else {                                          {{ cartCount() }}                                                                                                  }            '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotfoundComponent.html":{"url":"components/NotfoundComponent.html","title":"component - NotfoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotfoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/notfound/notfound.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notfound\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./notfound.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notfound.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  imports: [],\n  templateUrl: './notfound.component.html',\n  styleUrl: './notfound.component.scss'\n})\nexport class NotfoundComponent {\n\n}\n\n    \n\n    \n        notfound works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notfound works!'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotfoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cheakOutPayment\n                            \n                            \n                                getAllUserOrders\n                            \n                            \n                                getOrdersCash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/orders/orders.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cheakOutPayment\n                        \n                    \n                \n            \n            \n                \ncheakOutPayment(id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Initiates a checkout payment session.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe cart ID for which the payment is processed.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe shipping address information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the checkout session details.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserOrders\n                        \n                    \n                \n            \n            \n                \ngetAllUserOrders(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Retrieves all orders made by a specific user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user ID whose orders are to be fetched.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the list of user orders.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrdersCash\n                        \n                    \n                \n            \n            \n                \ngetOrdersCash(id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/orders/orders.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Places an order for cash payment.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe cart ID for which the order is placed.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe shipping address information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the order details.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Initiates a checkout payment session.\n   * \n   * @param id - The cart ID for which the payment is processed.\n   * @param data - The shipping address information.\n   * @returns An observable containing the checkout session details.\n   */\n  cheakOutPayment(id: string, data: object): Observable {\n    return this.httpClient.post(\n      `${environment.baseUrl}/api/v1/orders/checkout-session/${id}?url=http://localhost:4200`,\n      { \"shippingAddress\": data }\n    );\n  }\n\n  /**\n   * Places an order for cash payment.\n   * \n   * @param id - The cart ID for which the order is placed.\n   * @param data - The shipping address information.\n   * @returns An observable containing the order details.\n   */\n  getOrdersCash(id: string, data: object): Observable {\n    return this.httpClient.post(\n      `${environment.baseUrl}/api/v1/orders/${id}`,\n      { \"shippingAddress\": data }\n    );\n  }\n\n  /**\n   * Retrieves all orders made by a specific user.\n   * \n   * @param id - The user ID whose orders are to be fetched.\n   * @returns An observable containing the list of user orders.\n   */\n  getAllUserOrders(id: string): Observable {\n    return this.httpClient.get(\n      `${environment.baseUrl}/api/v1/orders/user/${id}`\n    );\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            ratingsQuantity\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Brand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Brand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsQuantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsQuantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product-1.html":{"url":"interfaces/Product-1.html","title":"interface - Product-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            product\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         Product2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product2\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string\n  cartOwner: string\n  products: Product[]\n  createdAt: string\n  updatedAt: string\n  __v: number\n  totalCartPrice: number\n}\n\nexport interface Product {\n  count: number\n  _id: string\n  product: Product2\n  price: number\n}\n\nexport interface Product2 {\n  subcategory: Subcategory[]\n  _id: string\n  title: string\n  quantity: number\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product2.html":{"url":"interfaces/Product2.html","title":"interface - Product2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            brand\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imageCover\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            ratingsAverage\n                                        \n                                \n                                \n                                        \n                                            subcategory\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        brand\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        brand:         Brand\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Brand\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         Category\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageCover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageCover:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ratingsAverage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ratingsAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:     Subcategory[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subcategory[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string\n  cartOwner: string\n  products: Product[]\n  createdAt: string\n  updatedAt: string\n  __v: number\n  totalCartPrice: number\n}\n\nexport interface Product {\n  count: number\n  _id: string\n  product: Product2\n  price: number\n}\n\nexport interface Product2 {\n  subcategory: Subcategory[]\n  _id: string\n  title: string\n  quantity: number\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductsComponent.html":{"url":"components/ProductsComponent.html","title":"component - ProductsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProductsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/products/products.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-products\n            \n\n\n            \n                imports\n                \n                            SearchPipe\n                            FormsModule\n                            TranslatePipe\n                            CommonModule\n                                CardForOrdersComponent\n                                SearchInputComponent\n                            NgxPaginationModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./products.component.html\n            \n\n\n\n            \n                styleUrl\n                ./products.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                itemsPerPage\n                            \n                            \n                                products\n                            \n                            \n                                    Private\n                                    Readonly\n                                productsService\n                            \n                            \n                                reverse\n                            \n                            \n                                searchQuery\n                            \n                            \n                                sortKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllProducts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSearchInputChange\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    sortedProducts\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchInputChange\n                        \n                    \n                \n            \n            \n                \nonSearchInputChange(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/products/products.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(1)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemsPerPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WritableSignal\n\n                    \n                \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        productsService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ProductsService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reverse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'title'\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/products/products.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        sortedProducts\n                    \n                \n\n                \n                    \n                        getsortedProducts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/products/products.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Iproduct } from '../../shared/interfaces/iproduct';\nimport { ProductsService } from './../../core/services/products/products.service';\nimport { Component, inject, OnInit, signal, WritableSignal } from '@angular/core';\nimport { SearchPipe } from '../../core/pipes/search.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { TranslatePipe } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { CardForOrdersComponent } from \"../../shared/components/ui/card-for-orders/card-for-orders.component\";\nimport { SearchInputComponent } from \"../../shared/components/ui/search-input/search-input.component\";\nimport { NgxPaginationModule } from 'ngx-pagination';\n@Component({\n  selector: 'app-products',\n  imports: [SearchPipe, FormsModule, TranslatePipe, CommonModule,\n     CardForOrdersComponent, SearchInputComponent, NgxPaginationModule],\n  templateUrl: './products.component.html',\n  styleUrl: './products.component.scss'\n})\nexport class ProductsComponent implements OnInit{\n\n  private readonly productsService = inject(ProductsService);\n\n  products:WritableSignal = signal([]);\n  currentPage = signal(1); \n  itemsPerPage = 16; \n  searchQuery: string = '';\n  sortKey = 'title'; \n  reverse = false;\n\n  ngOnInit(): void {\n    this.getAllProducts();\n  }\n\n  // search Input\n  onSearchInputChange(query: string) {\n    this.searchQuery = query;\n  }\n  // sort\n  get sortedProducts() {\n    let sorted = [...this.products()];\n    \n    sorted.sort((a, b) => {\n      const key = this.sortKey as keyof Iproduct;\n      if (a[key]  b[key]) return this.reverse ? -1 : 1;\n      return 0;\n    });\n    return sorted;\n  }\n  \n  // get all products\n  getAllProducts():void{\n    this.productsService.getAllProducts().subscribe({\n      next: (res) => {\n        this.products.set( res.data)\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n  \n}\n\n    \n\n    \n        \n\n\n\n  \n      Our Products \n        \n            Lorem ipsum dolor sit amet\n            consectetur adipisicing elit nam maxime quas fugiat tempore blanditiis, eveniet quia accusantium.\n         \n       \n  \n\n\n\n\n\n  {{'home.Popular_Products'|translate}}\n\n  \n\n  \n\n\n\n\n  \n  \n    Sort By\n    \n      Titel\n      Price\n      Ratings\n    \n    \n  \n  \n  \n    Show\n    \n      {{n}} \n    \n  \n  \n  \n    \n      \n    \n  \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Our Products                     Lorem ipsum dolor sit amet            consectetur adipisicing elit nam maxime quas fugiat tempore blanditiis, eveniet quia accusantium.                    {{\\'home.Popular_Products\\'|translate}}            Sort By          Titel      Price      Ratings                  Show          {{n}}                             '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllProducts\n                            \n                            \n                                getSpecificProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/products/products.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \ngetAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/products/products.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Retrieves all available products from the API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the list of all products.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSpecificProducts\n                        \n                    \n                \n            \n            \n                \ngetSpecificProducts(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/products/products.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Retrieves details of a specific product by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the product to fetch.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the product details.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Retrieves all available products from the API.\n   * \n   * @returns An observable containing the list of all products.\n   */\n  getAllProducts(): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/products`);\n  }\n\n  /**\n   * Retrieves details of a specific product by its ID.\n   * \n   * @param id - The ID of the product to fetch.\n   * @returns An observable containing the product details.\n   */\n  getSpecificProducts(id: string): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/products/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            TranslatePipe\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authService\n                            \n                            \n                                    Private\n                                    Readonly\n                                formBuilder\n                            \n                            \n                                isLoading\n                            \n                            \n                                msgError\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Readonly\n                                rotter\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cofirmPassword\n                            \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cofirmPassword\n                        \n                    \n                \n            \n            \n                \ncofirmPassword(group: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { mismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        formBuilder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(FormBuilder)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        msgError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : this.formBuilder.group({\n    name:  [null, [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/)]],\n    rePassword: [null,[Validators.required]],\n    phone: [null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]],\n  }, {validators: this.cofirmPassword}\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rotter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from './../../core/services/auth/auth.service';\nimport { Component, inject } from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-register',\n  imports: [ReactiveFormsModule, TranslatePipe , RouterLink],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss'\n})\nexport class RegisterComponent {\nprivate readonly authService = inject(AuthService);\nprivate readonly formBuilder = inject(FormBuilder);\nprivate readonly rotter = inject(Router);\n\n  isLoading : boolean = false;\n  msgError : string = \"\";\n  success : string = \"\";\n\n// register form\n  registerForm:FormGroup = this.formBuilder.group({\n    name:  [null, [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\n    email: [null, [Validators.required, Validators.email]],\n    password: [null, [Validators.required, Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_]).{8,}$/)]],\n    rePassword: [null,[Validators.required]],\n    phone: [null, [Validators.required, Validators.pattern(/^01[0125][0-9]{8}$/)]],\n  }, {validators: this.cofirmPassword}\n  );\n\n//  confirm password\n  cofirmPassword(group: AbstractControl){\n    let password = group.get('password')?.value;\n    let rePassword = group.get('rePassword')?.value;\n    return password === rePassword ? null : {mismatch:true}\n  }\n\n  // submit form\n  submitForm():void{\n\n    if(this.registerForm.valid){\n      this.isLoading = true\n      this.authService.sendRegesterForm(this.registerForm.value).subscribe({\n        next: (res) =>{\n          console.log(res);\n          if(res.message === 'success'){\n            setTimeout(( ) => {\n              this.rotter.navigate(['/login']);\n            },  500);\n           \n            this.success = res.message;\n          }\n          this.isLoading = false\n        },\n        error: (err:HttpErrorResponse) =>{\n          console.log(err)\n          this.msgError = err.error.message\n          this.isLoading = false;\n        }\n      })\n    }else{\n      this.registerForm.markAllAsTouched();\n    }\n  }\n}\n\n    \n\n    \n        \n\n  {{'register.Register'|translate}}\n\n  \n\n    \n      {{'register.Name'|translate}}\n      \n      \n      @let nameControl = registerForm.get('name');\n      @if (nameControl?.errors && nameControl?.touched) {\n        \n          \n            \n          \n          Danger\n          \n              \n                @if (nameControl?.hasError('required')) {\n                  {{'messages.This_field_is_required'|translate}}\n                }\n                @else if (nameControl?.hasError('minlength')) {\n                  {{'messages.Must_be_at_least_3_characters_long'|translate}}\n                }\n                @else if (nameControl?.hasError('maxlength')) {\n                  {{'messages.Must_be_at_most_20_characters_long'|translate}}\n                }\n              \n          \n        \n      }\n    \n\n    \n        {{'register.Email'|translate}}\n        \n        \n        @let emailControl = registerForm.get('email');\n        @if (emailControl?.errors && emailControl?.touched) {\n          \n            \n              \n            \n            Danger\n            \n                \n                  @if (emailControl?.hasError('required')) {\n                    {{'messages.This_field_is_required'|translate}}\n                  }\n                  @else if (emailControl?.hasError('email')) {\n                    {{'messages.Must_be_a_valid_email_address'|translate}}\n                  }\n              \n            \n          \n        }\n    \n\n    \n        {{'register.Password'|translate}}\n        \n        \n        @let passwordControl = registerForm.get('password');\n        @if (passwordControl?.errors && passwordControl?.touched) {\n          \n            \n              \n            \n            Danger\n            \n                \n                  @if (passwordControl?.hasError('required')) {\n                    {{'messages.This_field_is_required'|translate}}\n                  }\n                  @else if (passwordControl?.hasError('pattern')) {\n                    {{'messages.Must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number'|translate}}\n                  }\n              \n            \n          \n        }\n    \n\n    \n        {{'register.Confirm_Password'|translate}}\n        \n        \n        @if (registerForm.getError('mismatch') && registerForm.get('rePassword')?.touched) {\n          \n            \n              \n            \n            Danger\n            \n                \n                  {{'messages.Passwords_must_match'|translate}}\n              \n            \n          \n        }\n    \n\n    \n        {{'register.Phone_Number'|translate}}\n        \n        \n        @let phoneControl = registerForm.get('phone');\n        @if (phoneControl?.errors && phoneControl?.touched) {\n          \n            \n              \n            \n            Danger\n            \n                \n                  @if (phoneControl?.hasError('required')) {\n                    {{'messages.This_field_is_required'|translate}}\n                  }\n                  @else if (phoneControl?.hasError('pattern')) {\n                    {{'messages.Must_be_a_valid_Egyptian_phone_number'|translate}}\n                  }\n              \n            \n          \n        }\n    \n\n\n\n    \n  {{'register.sign_up'|translate}}\n  @if (isLoading) {\n    \n  }\n\n\n\n@if (msgError) {\n  \n    {{msgError}}\n  \n}\n\n@if (success) {\n  \n    {{success}}\n  \n}\n\n\n\n Already have an account?\n  \n      {{'forgotpassword.back_to_login'|translate}}\n  \n   \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'register.Register\\'|translate}}            {{\\'register.Name\\'|translate}}                  @let nameControl = registerForm.get(\\'name\\');      @if (nameControl?.errors && nameControl?.touched) {                                                  Danger                                        @if (nameControl?.hasError(\\'required\\')) {                  {{\\'messages.This_field_is_required\\'|translate}}                }                @else if (nameControl?.hasError(\\'minlength\\')) {                  {{\\'messages.Must_be_at_least_3_characters_long\\'|translate}}                }                @else if (nameControl?.hasError(\\'maxlength\\')) {                  {{\\'messages.Must_be_at_most_20_characters_long\\'|translate}}                }                                      }                {{\\'register.Email\\'|translate}}                        @let emailControl = registerForm.get(\\'email\\');        @if (emailControl?.errors && emailControl?.touched) {                                                            Danger                                              @if (emailControl?.hasError(\\'required\\')) {                    {{\\'messages.This_field_is_required\\'|translate}}                  }                  @else if (emailControl?.hasError(\\'email\\')) {                    {{\\'messages.Must_be_a_valid_email_address\\'|translate}}                  }                                            }                {{\\'register.Password\\'|translate}}                        @let passwordControl = registerForm.get(\\'password\\');        @if (passwordControl?.errors && passwordControl?.touched) {                                                            Danger                                              @if (passwordControl?.hasError(\\'required\\')) {                    {{\\'messages.This_field_is_required\\'|translate}}                  }                  @else if (passwordControl?.hasError(\\'pattern\\')) {                    {{\\'messages.Must_be_at_least_8_characters_long_and_contain_at_least_one_uppercase_letter_one_lowercase_letter_and_one_number\\'|translate}}                  }                                            }                {{\\'register.Confirm_Password\\'|translate}}                        @if (registerForm.getError(\\'mismatch\\') && registerForm.get(\\'rePassword\\')?.touched) {                                                            Danger                                              {{\\'messages.Passwords_must_match\\'|translate}}                                            }                {{\\'register.Phone_Number\\'|translate}}                        @let phoneControl = registerForm.get(\\'phone\\');        @if (phoneControl?.errors && phoneControl?.touched) {                                                            Danger                                              @if (phoneControl?.hasError(\\'required\\')) {                    {{\\'messages.This_field_is_required\\'|translate}}                  }                  @else if (phoneControl?.hasError(\\'pattern\\')) {                    {{\\'messages.Must_be_a_valid_Egyptian_phone_number\\'|translate}}                  }                                            }          {{\\'register.sign_up\\'|translate}}  @if (isLoading) {      }@if (msgError) {      {{msgError}}  }@if (success) {      {{success}}  } Already have an account?        {{\\'forgotpassword.back_to_login\\'|translate}}     '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchInputComponent.html":{"url":"components/SearchInputComponent.html","title":"component - SearchInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/ui/search-input/search-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-input\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSearchChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        searchChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/ui/search-input/search-input.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onSearchChange\n                        \n                    \n                \n            \n            \n                \nonSearchChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/ui/search-input/search-input.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/ui/search-input/search-input.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-search-input',         // Component selector for using it in templates\n  imports: [CommonModule, FormsModule], // Import necessary Angular modules\n  templateUrl: './search-input.component.html', // Template file for the search input\n  styleUrl: './search-input.component.scss'     // Stylesheet for the component\n})\nexport class SearchInputComponent {\n\n  searchValue: string = ''; // Two-way bound search value\n\n  @Output() searchChange: EventEmitter = new EventEmitter();\n  // Output event emitter to notify parent components of search changes\n\n  onSearchChange() {\n    this.searchChange.emit(this.searchValue);\n    // Emit the search value whenever the input changes\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchPipe.html":{"url":"pipes/SearchPipe.html","title":"pipe - SearchPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/search.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        search\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(arrayOfObject: any[], searchValue: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/search.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arrayOfObject\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(arrayOfObject: any[], searchValue: string): any[] {\n    // Return the original array if input is not a valid array or searchValue is empty\n    if (!Array.isArray(arrayOfObject) || !searchValue) {\n      return arrayOfObject;\n    }\n    \n    // Convert the search value to lowercase for case-insensitive search\n    const lowerCaseSearchValue = searchValue.toLowerCase();\n\n    // Filter the array based on whether the 'title' property includes the search value\n    return arrayOfObject.filter((item) => \n      item?.title?.toLowerCase().includes(lowerCaseSearchValue)\n    );\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ShippingAddress.html":{"url":"interfaces/ShippingAddress.html","title":"interface - ShippingAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ShippingAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            details\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory.html":{"url":"interfaces/Subcategory.html","title":"interface - Subcategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-1.html":{"url":"interfaces/Subcategory-1.html","title":"interface - Subcategory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/icart.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICart {\n  _id: string\n  cartOwner: string\n  products: Product[]\n  createdAt: string\n  updatedAt: string\n  __v: number\n  totalCartPrice: number\n}\n\nexport interface Product {\n  count: number\n  _id: string\n  product: Product2\n  price: number\n}\n\nexport interface Product2 {\n  subcategory: Subcategory[]\n  _id: string\n  title: string\n  quantity: number\n  imageCover: string\n  category: Category\n  brand: Brand\n  ratingsAverage: number\n  id: string\n}\n\nexport interface Subcategory {\n  _id: string\n  name: string\n  slug: string\n  category: string\n}\n\nexport interface Category {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\nexport interface Brand {\n  _id: string\n  name: string\n  slug: string\n  image: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-2.html":{"url":"interfaces/Subcategory-2.html","title":"interface - Subcategory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iproduct.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iproduct {\n    sold: number\n    images: string[]\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    slug: string\n    description: string\n    quantity: number\n    price: number\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    createdAt: string\n    updatedAt: string\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Subcategory-3.html":{"url":"interfaces/Subcategory-3.html","title":"interface - Subcategory-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Subcategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iwishlist.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Iwishlist {\n        sold: number\n        images: string[]\n        subcategory: Subcategory[]\n        ratingsQuantity: number\n        _id: string\n        title: string\n        slug: string\n        description: string\n        quantity: number\n        price: number\n        imageCover: string\n        category: Category\n        brand: Brand\n        ratingsAverage: number\n        createdAt: string\n        updatedAt: string\n        __v: number\n        id: string\n      }\n      \n      export interface Subcategory {\n        _id: string\n        name: string\n        slug: string\n        category: string\n      }\n      \n      export interface Category {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      }\n      \n      export interface Brand {\n        _id: string\n        name: string\n        slug: string\n        image: string\n      \n      \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/interfaces/iallorders.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IallOrders {\n\n    shippingAddress: ShippingAddress\n    taxPrice: number\n    shippingPrice: number\n    totalOrderPrice: number\n    paymentMethodType: string\n    isPaid: boolean\n    isDelivered: boolean\n    _id: string\n    user: User\n    cartItems: CartItem[]\n    createdAt: string\n    updatedAt: string\n    id: number\n    __v: number\n  }\n  \n  export interface ShippingAddress {\n    details: string\n    city: string\n    phone: string\n  }\n  \n  export interface User {\n    _id: string\n    name: string\n    email: string\n    phone: string\n  }\n  \n  export interface CartItem {\n    count: number\n    _id: string\n    product: Product\n    price: number\n  }\n  \n  export interface Product {\n    subcategory: Subcategory[]\n    ratingsQuantity: number\n    _id: string\n    title: string\n    imageCover: string\n    category: Category\n    brand: Brand\n    ratingsAverage: number\n    id: string\n  }\n  \n  export interface Subcategory {\n    _id: string\n    name: string\n    slug: string\n    category: string\n  }\n  \n  export interface Category {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n  export interface Brand {\n    _id: string\n    name: string\n    slug: string\n    image: string\n  }\n  \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WishlistComponent.html":{"url":"components/WishlistComponent.html","title":"component - WishlistComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WishlistComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/wishlist/wishlist.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wishlist\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                            SweetAlert2Module\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./wishlist.component.html\n            \n\n\n\n            \n                styleUrl\n                ./wishlist.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cartService\n                            \n                            \n                                    Private\n                                    Readonly\n                                toastrService\n                            \n                            \n                                wishlistItems\n                            \n                            \n                                    Private\n                                    Readonly\n                                wishlistService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                getWishlist\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeFromWishlist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToCart\n                        \n                    \n                \n            \n            \n                \naddToCart(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wishlist/wishlist.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWishlist\n                        \n                    \n                \n            \n            \n                \ngetWishlist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wishlist/wishlist.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wishlist/wishlist.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromWishlist\n                        \n                    \n                \n            \n            \n                \nremoveFromWishlist(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/wishlist/wishlist.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cartService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CartService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wishlist/wishlist.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toastrService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ToastrService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wishlist/wishlist.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wishlistItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Iwishlist[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wishlist/wishlist.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        wishlistService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(WishlistService)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/wishlist/wishlist.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CartService } from './../../core/services/cart/cart.service';\nimport {\n  Component,\n  inject,\n  OnInit,\n} from '@angular/core';\nimport { WishlistService } from '../../core/services/wishlist/wishlist.service';\nimport { CommonModule } from '@angular/common';\nimport { Iwishlist } from '../../shared/interfaces/iwishlist';\nimport { RouterModule } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-wishlist',\n  imports: [CommonModule, RouterModule, SweetAlert2Module],\n  templateUrl: './wishlist.component.html',\n  styleUrl: './wishlist.component.scss',\n})\nexport class WishlistComponent implements OnInit {\n  \n  private readonly wishlistService = inject(WishlistService);\n  private readonly cartService = inject(CartService);\n  private readonly toastrService = inject(ToastrService);\n\n  wishlistItems: Iwishlist[] = [];\n\n  ngOnInit(): void {\n    this.getWishlist();\n  }\n// get user wishlist\n  getWishlist(): void {\n    this.wishlistService.getWishlist().subscribe({\n      next: (res) => {\n        this.wishlistItems = res.data;\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  // add to cart\n  addToCart(id: string): void {\n    this.cartService.addProductToCart(id).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.toastrService.success(\n          'Product added to cart successfully',\n          'Success',\n          {\n            timeOut: 3000,\n            closeButton: true,\n            progressBar: true,\n          }\n        );\n        this.cartService.cartNumber.set(res.numOfCartItems);\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n// remove from wishlist\n  removeFromWishlist(id: string): void {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      theme:'auto',\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, remove it!',\n\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.wishlistService.removeProductFromWishlist(id).subscribe({\n          next: (res) => {\n            console.log(res);\n            this.getWishlist();\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n        Swal.fire({\n          title: 'Removed!',\n          text: 'Your file has been Removed.',\n          icon: 'success',\n          theme:'auto',\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n  \n    \n      Manage Your Wishlist!\n      Keep track of your favorite items and plan your purchases with ease.\n    \n    \n      \n    \n  \n\n\n\n\n\n  @for (item of wishlistItems; track $index) {\n      @let prod = item;\n      \n          \n          \n          \n          \n          \n              \n                  \n              \n              \n              \n              \n                  {{ prod.category.name }}\n                  {{ prod.title.split(' ', 2).join(\" \") }}\n                  \n                      {{ prod.price }} EGP\n                      \n                          \n                          {{ prod.ratingsAverage }}\n                      \n                  \n              \n          \n          \n          \n              Add to Cart\n          \n      \n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Manage Your Wishlist!      Keep track of your favorite items and plan your purchases with ease.                      @for (item of wishlistItems; track $index) {      @let prod = item;                                                                                                                                                                  {{ prod.category.name }}                  {{ prod.title.split(\\' \\', 2).join(\" \") }}                                        {{ prod.price }} EGP                                                                          {{ prod.ratingsAverage }}                                                                                                  Add to Cart                  }'\n    var COMPONENTS = [{'name': 'AllordersComponent', 'selector': 'app-allorders'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'BlankLayoutComponent', 'selector': 'app-blank-layout'},{'name': 'BrandsComponent', 'selector': 'app-brands'},{'name': 'CardForOrdersComponent', 'selector': 'app-card-for-orders'},{'name': 'CartComponent', 'selector': 'app-cart'},{'name': 'CategoriesComponent', 'selector': 'app-categories'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotfoundComponent', 'selector': 'app-notfound'},{'name': 'ProductsComponent', 'selector': 'app-products'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchInputComponent', 'selector': 'app-search-input'},{'name': 'WishlistComponent', 'selector': 'app-wishlist'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WishlistComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WishlistService.html":{"url":"injectables/WishlistService.html","title":"injectable - WishlistService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WishlistService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/wishlist/wishlist.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToWishlist\n                            \n                            \n                                getWishlist\n                            \n                            \n                                removeProductFromWishlist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/wishlist/wishlist.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProductToWishlist\n                        \n                    \n                \n            \n            \n                \naddProductToWishlist(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/wishlist/wishlist.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Adds a product to the wishlist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the product to add to the wishlist.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the server response.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWishlist\n                        \n                    \n                \n            \n            \n                \ngetWishlist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/wishlist/wishlist.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Retrieves all products in the wishlist.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the list of wishlist items.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProductFromWishlist\n                        \n                    \n                \n            \n            \n                \nremoveProductFromWishlist(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/wishlist/wishlist.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Removes a specific product from the wishlist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the product to remove from the wishlist.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable containing the server response.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WishlistService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Adds a product to the wishlist.\n   * \n   * @param id - The ID of the product to add to the wishlist.\n   * @returns An observable containing the server response.\n   */\n  addProductToWishlist(id: string): Observable {\n    return this.httpClient.post(`${environment.baseUrl}/api/v1/wishlist`, {\n      \"productId\": id\n    });\n  }\n\n  /**\n   * Removes a specific product from the wishlist.\n   * \n   * @param id - The ID of the product to remove from the wishlist.\n   * @returns An observable containing the server response.\n   */\n  removeProductFromWishlist(id: string): Observable {\n    return this.httpClient.delete(`${environment.baseUrl}/api/v1/wishlist/${id}`);\n  }\n\n  /**\n   * Retrieves all products in the wishlist.\n   * \n   * @returns An observable containing the list of wishlist items.\n   */\n  getWishlist(): Observable {\n    return this.httpClient.get(`${environment.baseUrl}/api/v1/wishlist`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/environment/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/loged.guard.ts\n            \n            variable\n            logedGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/errors/errors.interceptor.ts\n            \n            variable\n            errorsInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/headers/headers.interceptor.ts\n            \n            variable\n            headersInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/interceptors/loading/loading.interceptor.ts\n            \n            variable\n            loadingInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/search.pipe.ts\n            \n            pipe\n            SearchPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/resolvers/cartresolver/cart.resolver.ts\n            \n            guard\n            CartResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/resolvers/productresolver/details.resolver.ts\n            \n            guard\n            DetailsResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/core/services/brands/brands.service.ts\n            \n            injectable\n            BrandsService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/services/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/core/services/categorise/categorise.service.ts\n            \n            injectable\n            CategoriseService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/services/darkmood/dark-theme-selector.service.ts\n            \n            injectable\n            DarkThemeSelectorService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                        src/app/core/services/darkmood/dark-theme-selector.service.ts\n            \n            function\n            isSystemDark\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/darkmood/dark-theme-selector.service.ts\n            \n            variable\n            CLIENT_RENDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/darkmood/dark-theme-selector.service.ts\n            \n            variable\n            LS_THEME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/services/darkmood/dark-theme-selector.service.ts\n            \n            variable\n            selectedTheme\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/flowbite/flowbite.service.ts\n            \n            injectable\n            FlowbiteService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/myTranslate/mytranslate.service.ts\n            \n            injectable\n            MytranslateService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/core/services/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/core/services/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/core/services/wishlist/wishlist.service.ts\n            \n            injectable\n            WishlistService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                        src/app/core/utils/httpLoadFils.ts\n            \n            function\n            HttpLoaderFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/layouts/auth-layout/auth-layout.component.ts\n            \n            component\n            AuthLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/blank-layout/blank-layout.component.ts\n            \n            component\n            BlankLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/layouts/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/layouts/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/pages/allorders/allorders.component.ts\n            \n            component\n            AllordersComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/brands/brands.component.ts\n            \n            component\n            BrandsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/cart/cart.component.ts\n            \n            component\n            CartComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/categories/categories.component.ts\n            \n            component\n            CategoriesComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/checkout/checkout.component.ts\n            \n            component\n            CheckoutComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/pages/forgotpassword/forgotpassword.component.ts\n            \n            component\n            ForgotpasswordComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/notfound/notfound.component.ts\n            \n            component\n            NotfoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/products/products.component.ts\n            \n            component\n            ProductsComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/pages/wishlist/wishlist.component.ts\n            \n            component\n            WishlistComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/shared/components/ui/card-for-orders/card-for-orders.component.ts\n            \n            component\n            CardForOrdersComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/ui/search-input/search-input.component.ts\n            \n            component\n            SearchInputComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            CartItem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            IallOrders\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            ShippingAddress\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iallorders.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/ibrands.ts\n            \n            interface\n            IBrand\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            ICart\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Product2\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icart.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/icategory.ts\n            \n            interface\n            Icategory\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Iproduct\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iproduct.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwishlist.ts\n            \n            interface\n            Brand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwishlist.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwishlist.ts\n            \n            interface\n            Iwishlist\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/interfaces/iwishlist.ts\n            \n            interface\n            Subcategory\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^19.1.0\n        \n            @angular/common : ^19.1.0\n        \n            @angular/compiler : ^19.1.0\n        \n            @angular/core : ^19.1.0\n        \n            @angular/forms : ^19.1.0\n        \n            @angular/platform-browser : ^19.1.0\n        \n            @angular/platform-browser-dynamic : ^19.1.0\n        \n            @angular/platform-server : ^19.1.0\n        \n            @angular/router : ^19.1.0\n        \n            @angular/ssr : ^19.1.5\n        \n            @fortawesome/fontawesome-free : ^6.7.2\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            @sweetalert2/ngx-sweetalert2 : ^13.0.0\n        \n            express : ^4.18.2\n        \n            flowbite : ^3.0.0\n        \n            flyonui : ^1.3.0\n        \n            jwt-decode : ^4.0.0\n        \n            ngx-owl-carousel-o : ^19.0.0\n        \n            ngx-pagination : ^6.0.3\n        \n            ngx-spinner : ^19.0.0\n        \n            ngx-toastr : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            sweetalert2 : ^11.17.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppTheme   (src/.../dark-theme-selector.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/darkmood/dark-theme-selector.service.ts\n    \n        \n            \n                \n                    \n                        \n                        AppTheme\n                    \n                \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : light\n                            \n                        \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : dark\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../httpLoadFils.ts)\n                        \n                        \n                            isSystemDark   (src/.../dark-theme-selector.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/utils/httpLoadFils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Factory function to create an instance of TranslateHttpLoader.\nThe TranslateHttpLoader is used to load translation files for ngx-translate.\nIt constructs the translation file paths using a prefix and a suffix.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HttpClient instance used to make HTTP requests.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/services/darkmood/dark-theme-selector.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isSystemDark\n                        \n                    \n                \n            \n            \n                \nisSystemDark()\n                \n            \n\n\n\n\n            \n                \n                        Checks if the system prefers dark mode\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nECommerceApp\nThis project was generated using Angular CLI version 19.1.5.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            CLIENT_RENDER   (src/.../dark-theme-selector.service.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorsInterceptor   (src/.../errors.interceptor.ts)\n                        \n                        \n                            headersInterceptor   (src/.../headers.interceptor.ts)\n                        \n                        \n                            loadingInterceptor   (src/.../loading.interceptor.ts)\n                        \n                        \n                            logedGuard   (src/.../loged.guard.ts)\n                        \n                        \n                            LS_THEME   (src/.../dark-theme-selector.service.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            selectedTheme   (src/.../dark-theme-selector.service.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    The request handler used by the Angular CLI (dev-server and during build).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideHttpClient(withFetch(), withInterceptors([headersInterceptor, errorsInterceptor, loadingInterceptor])),\n    provideAnimations(),\n    provideToastr(),\n    importProvidersFrom(PaginationControlsComponent, PaginatePipe, NgxPaginationModule,  NgxSpinnerModule, SweetAlert2Module.forRoot(),\n      TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader:{\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })),\n    provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes, withInMemoryScrolling({ scrollPositionRestoration: 'top' }),withHashLocation(), withViewTransitions() ), provideClientHydration(withEventReplay())]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  const router = inject(Router);\n  const id = inject(PLATFORM_ID);\n\n // Check if the code is running in a browser environment\n  if (isPlatformBrowser(id)) {\n    if(localStorage.getItem('userToken')){\n    // User is logged in, allow access to the route\n      return true;\n    }else{\n    // User is not logged in, redirect to the login page\n      router.navigate(['/login'])\n      return false;\n    }\n    \n  }\n// Deny access if not in a browser environment\n  else{\n    return false;\n  }\n  \n\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/darkmood/dark-theme-selector.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLIENT_RENDER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : typeof localStorage !== 'undefined'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LS_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'theme'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppTheme | undefined\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/environment/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    baseUrl: 'https://ecommerce.routemisr.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/errors/errors.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorsInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n  const toastrService = inject(ToastrService);\n\n  return next(req).pipe(catchError((err)=>{\n  // Display an error notification using Toastr with the error message\n    toastrService.error(err.error.message, 'Error')\n  // Propagate the error to be handled by the subscriber\n    return throwError(()=>err);\n  }))}\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/headers/headers.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        headersInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n  if(localStorage.getItem('userToken')){\n    // Check if the user is logged in and if the request URL matches specific endpoints\n    if(req.url.includes('cart')|| req.url.includes('orders')|| req.url.includes('wishlist')){\n      // Clone the request and add the token to the headers\n      req = req.clone({\n        setHeaders:{\n          token: localStorage.getItem('userToken')!,\n        }\n      })\n    }\n  }\n  // Pass the request to the next handler in the chain\n  return next(req);\n}\n                    \n                \n\n            \n                \n                    This interceptor adds the 'token' header to requests related to 'cart', 'orders', or 'wishlist'\nif a user token is found in localStorage.\n\n                \n            \n\n        \n    \n\n    src/app/core/interceptors/loading/loading.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadingInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\nconst ngxSpinnerService = inject(NgxSpinnerService );\n // Bypass the spinner for specific endpoints\nif (req.url.includes('/wishlist') || req.url.includes('/cart')) {\n  return next(req);\n}\n\n\n  // Show the loading spinner\n\n  ngxSpinnerService.show();\n\n  return next(req).pipe\n  (\n  // Hide the spinner once the request is finalized\n    finalize(() => ngxSpinnerService.hide())\n  );\n\n}\n                    \n                \n\n            \n                \n                    The loadingInterceptor displays a loading spinner for all requests\nexcept those targeting '/wishlist' or '/cart' endpoints.\n\n                \n            \n\n        \n    \n\n    src/app/core/guards/loged.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logedGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const router = inject(Router);\n    const id = inject(PLATFORM_ID);\n\n    // to check if the user is logged in\n    if (isPlatformBrowser(id)) {\n      if(localStorage.getItem('userToken')){\n        // User is already logged in, redirect to the home page\n        router.navigate(['/home'])\n        return false;\n      } else{\n        // User is not logged in, allow access to login or registration pages\n        return true;\n      }\n      \n    }\n    else{\n       // In case the platform is not a browser, deny access\n      return false\n    }\n\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
